{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Disaster Response Coordination System","text":"<p>An AI-powered disaster response coordination system featuring multi-agent workflow, real-time communication, and role-based dashboards for emergency response teams.</p>"},{"location":"#emergency-response-features","title":"\ud83d\udea8 Emergency Response Features","text":"<ul> <li>AI-Powered Processing: Automated request analysis and prioritization through AGNO agents</li> <li>Real-time Coordination: WebSocket-based live updates and notifications</li> <li>Multi-Role Support: Dashboards for Affected Individuals, Volunteers, First Responders, and Administrators</li> <li>Resource Management: Track and allocate emergency supplies and personnel</li> <li>Task Assignment: Intelligent distribution of emergency response tasks</li> <li>MCP Integration: Model Context Protocol support for LLM applications</li> </ul>"},{"location":"#system-architecture","title":"\ud83c\udfd7\ufe0f System Architecture","text":"<pre><code>graph TB\n    A[Emergency Request] --&gt; B[Intake Agent]\n    B --&gt; C[Prioritization Agent]\n    C --&gt; D[Assignment Agent]\n    D --&gt; E[Communication Agent]\n    E --&gt; F[Real-time Updates]\n\n    subgraph \"AI Agents (AGNO)\"\n        B\n        C\n        D\n        E\n    end\n\n    subgraph \"User Interfaces\"\n        G[Affected Individuals]\n        H[Volunteers]\n        I[First Responders]\n        J[Administrators]\n    end\n\n    F --&gt; G\n    F --&gt; H\n    F --&gt; I\n    F --&gt; J</code></pre>"},{"location":"#quick-navigation","title":"\ud83c\udfaf Quick Navigation","text":"<ul> <li>:material-rocket-launch:{ .lg .middle } Getting Started</li> </ul> <p>Set up the system quickly with Docker and start coordinating disaster response</p> <p>:octicons-arrow-right-24: Quick Setup</p> <ul> <li>:material-brain:{ .lg .middle } AI Agents</li> </ul> <p>Learn about the AGNO agent workflow for intelligent request processing</p> <p>:octicons-arrow-right-24: AI Architecture</p> <ul> <li>:material-account-group:{ .lg .middle } User Guides</li> </ul> <p>Role-specific guides for all system users</p> <p>:octicons-arrow-right-24: User Guides</p> <ul> <li>:material-api:{ .lg .middle } API Reference</li> </ul> <p>Complete API documentation for developers</p> <p>:octicons-arrow-right-24: API Docs</p>"},{"location":"#key-features","title":"\ud83c\udf1f Key Features","text":""},{"location":"#multi-agent-ai-processing","title":"Multi-Agent AI Processing","text":"<p>The system uses four specialized AI agents powered by OpenAI GPT-4o-mini:</p> <ol> <li>Intake Agent - Processes and validates incoming emergency requests</li> <li>Prioritization Agent - Assesses and prioritizes requests based on severity</li> <li>Assignment Agent - Matches requests with appropriate responders and resources</li> <li>Communication Agent - Handles notifications and status updates</li> </ol>"},{"location":"#real-time-collaboration","title":"Real-time Collaboration","text":"<ul> <li>WebSocket-based live updates</li> <li>Role-based dashboards with real-time data</li> <li>Instant notifications for task assignments and status changes</li> <li>Live resource availability tracking</li> </ul>"},{"location":"#comprehensive-resource-management","title":"Comprehensive Resource Management","text":"<ul> <li>Emergency supply inventory tracking</li> <li>Personnel availability and skill matching</li> <li>Equipment allocation and monitoring</li> <li>Automated resource consumption tracking</li> </ul>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":"<ol> <li>Quick Setup - Get the system running in minutes</li> <li>Environment Configuration - Configure your environment variables</li> <li>User Guides - Learn how to use the system</li> </ol>"},{"location":"#system-requirements","title":"\ud83d\udccb System Requirements","text":"<ul> <li>Docker and Docker Compose</li> <li>Node.js 18+ (for development)</li> <li>Python 3.9+ (for development)</li> <li>OpenAI API key (for AI agents)</li> <li>Supabase account (for database)</li> </ul>"},{"location":"#technology-stack","title":"\ud83d\udee0\ufe0f Technology Stack","text":"<ul> <li>Frontend: React 19, TypeScript, Tailwind CSS</li> <li>Backend: FastAPI, Python, PostgreSQL</li> <li>AI: AGNO framework, OpenAI GPT-4o-mini</li> <li>Real-time: WebSockets, Redis</li> <li>Infrastructure: Docker, Nginx</li> </ul>"},{"location":"#support","title":"\ud83d\udcde Support","text":"<p>For technical support or questions:</p> <ul> <li>Check the Troubleshooting Guide</li> <li>Review the API Documentation</li> <li>Submit issues via the project repository</li> </ul> <p>Built for IntelliHack 2025 Final Round Challenge</p>"},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<p>Common issues and solutions for the Disaster Response Coordination System.</p>"},{"location":"troubleshooting/#emergency-issues","title":"\ud83d\udea8 Emergency Issues","text":""},{"location":"troubleshooting/#system-down-during-emergency","title":"System Down During Emergency","text":"<p>If the system is unavailable during an active emergency:</p> <ol> <li>Call 911 Immediately for life-threatening situations</li> <li>Use backup hotline: [Emergency Phone Number]</li> <li>Contact local emergency services directly</li> <li>Try alternative access methods:</li> <li>SMS gateway: Text \"HELP\" to [SMS Number]</li> <li>Email: emergency@disaster-response.com</li> <li>Radio networks: Monitor emergency frequencies</li> </ol>"},{"location":"troubleshooting/#common-technical-issues","title":"\ud83d\udd27 Common Technical Issues","text":""},{"location":"troubleshooting/#login-and-authentication-problems","title":"Login and Authentication Problems","text":""},{"location":"troubleshooting/#cant-log-in","title":"Can't Log In","text":"<p>Symptoms: Invalid credentials, login page not loading, session expired</p> <p>Solutions:</p> <ol> <li>Check credentials:</li> </ol> <pre><code># Verify email format\nuser@example.com \u2705\nuser@example \u274c\n\n# Check password requirements\n- Minimum 8 characters\n- Contains letters and numbers\n</code></pre> <ol> <li>Clear browser cache:</li> </ol> <pre><code># Chrome/Edge\nCtrl+Shift+Delete \u2192 Clear browsing data\n\n# Firefox\nCtrl+Shift+Delete \u2192 Clear cache\n</code></pre> <ol> <li> <p>Try incognito/private mode:</p> </li> <li> <p>Chrome: Ctrl+Shift+N</p> </li> <li>Firefox: Ctrl+Shift+P</li> <li> <p>Edge: Ctrl+Shift+N</p> </li> <li> <p>Reset password:</p> </li> <li>Click \"Forgot Password\" on login page</li> <li>Check email for reset link</li> <li>Create new secure password</li> </ol>"},{"location":"troubleshooting/#session-keeps-expiring","title":"Session Keeps Expiring","text":"<p>Symptoms: Logged out frequently, \"session expired\" messages</p> <p>Solutions:</p> <ol> <li> <p>Check browser settings:</p> </li> <li> <p>Enable cookies for the site</p> </li> <li>Disable ad blockers temporarily</li> <li> <p>Allow JavaScript execution</p> </li> <li> <p>Update browser:</p> </li> <li> <p>Use latest version of Chrome, Firefox, or Edge</p> </li> <li> <p>Clear old browser data</p> </li> <li> <p>Network connectivity:</p> </li> <li>Check internet connection stability</li> <li>Try different network if possible</li> </ol>"},{"location":"troubleshooting/#two-factor-authentication-issues","title":"Two-Factor Authentication Issues","text":"<p>Symptoms: Not receiving 2FA codes, codes not working</p> <p>Solutions:</p> <ol> <li> <p>Check phone/email:</p> </li> <li> <p>Verify correct phone number in profile</p> </li> <li>Check spam folder for emails</li> <li> <p>Ensure phone has cellular signal</p> </li> <li> <p>Time synchronization:</p> </li> <li> <p>Ensure device time is accurate</p> </li> <li> <p>Sync with network time</p> </li> <li> <p>Backup codes:</p> </li> <li>Use backup authentication codes</li> <li>Contact support for assistance</li> </ol>"},{"location":"troubleshooting/#application-performance-issues","title":"Application Performance Issues","text":""},{"location":"troubleshooting/#slow-loading","title":"Slow Loading","text":"<p>Symptoms: Pages take long to load, timeouts</p> <p>Solutions:</p> <ol> <li>Check internet speed:</li> </ol> <pre><code># Test connection speed\nspeedtest-cli\n# or visit speedtest.net\n</code></pre> <ol> <li> <p>Reduce browser load:</p> </li> <li> <p>Close unnecessary tabs</p> </li> <li>Disable browser extensions</li> <li> <p>Clear cache and cookies</p> </li> <li> <p>Optimize settings:</p> </li> <li>Reduce image quality in uploads</li> <li>Limit concurrent operations</li> <li>Use smaller file sizes</li> </ol>"},{"location":"troubleshooting/#features-not-working","title":"Features Not Working","text":"<p>Symptoms: Buttons not responding, forms not submitting</p> <p>Solutions:</p> <ol> <li> <p>JavaScript enabled:</p> </li> <li> <p>Check browser settings</p> </li> <li>Allow scripts for the site</li> <li> <p>Disable script blockers</p> </li> <li> <p>Browser compatibility:</p> </li> </ol> <pre><code>\u2705 Supported Browsers:\n- Chrome 90+\n- Firefox 88+\n- Safari 14+\n- Edge 90+\n</code></pre> <ol> <li>Console errors:    <pre><code># Check browser console\nF12 \u2192 Console tab\n# Look for red error messages\n</code></pre></li> </ol>"},{"location":"troubleshooting/#mobile-app-issues","title":"Mobile App Issues","text":""},{"location":"troubleshooting/#app-wont-start","title":"App Won't Start","text":"<p>Solutions:</p> <ol> <li> <p>Restart app:</p> </li> <li> <p>Force close application</p> </li> <li>Clear app cache</li> <li> <p>Restart device</p> </li> <li> <p>Update app:</p> </li> <li> <p>Check app store for updates</p> </li> <li>Ensure iOS 14+ or Android 8+</li> <li> <p>Free up device storage</p> </li> <li> <p>Reinstall app:</p> </li> <li>Uninstall current version</li> <li>Download latest from app store</li> <li>Login with existing account</li> </ol>"},{"location":"troubleshooting/#gpslocation-issues","title":"GPS/Location Issues","text":"<p>Symptoms: Location not detected, inaccurate positioning</p> <p>Solutions:</p> <ol> <li> <p>Permission settings:</p> </li> <li> <p>Allow location access for app</p> </li> <li>Enable high accuracy mode</li> <li> <p>Check privacy settings</p> </li> <li> <p>GPS signal:</p> </li> <li> <p>Move to open area</p> </li> <li>Wait for GPS to acquire signal</li> <li> <p>Check if location services enabled</p> </li> <li> <p>Manual location entry:</p> </li> <li>Enter address manually</li> <li>Use what3words codes</li> <li>Share location via maps app</li> </ol>"},{"location":"troubleshooting/#security-and-privacy-issues","title":"\ud83d\udd10 Security and Privacy Issues","text":""},{"location":"troubleshooting/#account-security","title":"Account Security","text":""},{"location":"troubleshooting/#suspected-account-compromise","title":"Suspected Account Compromise","text":"<p>Signs: Unexpected logins, changed information, unknown activity</p> <p>Immediate Actions:</p> <ol> <li>Change password immediately</li> <li>Review account activity log</li> <li>Check personal information for changes</li> <li>Enable two-factor authentication</li> <li>Contact support if suspicious activity found</li> </ol>"},{"location":"troubleshooting/#privacy-concerns","title":"Privacy Concerns","text":"<p>Location Privacy:</p> <ul> <li>Location only shared during active requests</li> <li>Data encrypted in transit and storage</li> <li>Location history can be deleted</li> </ul> <p>Communication Privacy:</p> <ul> <li>Messages encrypted between users</li> <li>Personal information protected</li> <li>Communication logs can be requested</li> </ul>"},{"location":"troubleshooting/#data-protection","title":"Data Protection","text":""},{"location":"troubleshooting/#request-data-deletion","title":"Request Data Deletion","text":"<p>To delete your account and data:</p> <ol> <li>Login to account</li> <li>Go to Privacy Settings</li> <li>Select \"Delete Account\"</li> <li>Confirm deletion request</li> <li>Data removed within 30 days</li> </ol>"},{"location":"troubleshooting/#export-personal-data","title":"Export Personal Data","text":"<p>To export your data:</p> <ol> <li>Account Settings \u2192 Privacy</li> <li>Select \"Export Data\"</li> <li>Choose data categories</li> <li>Receive download link via email</li> </ol>"},{"location":"troubleshooting/#network-and-connectivity-issues","title":"\ud83c\udf10 Network and Connectivity Issues","text":""},{"location":"troubleshooting/#internet-connection-problems","title":"Internet Connection Problems","text":""},{"location":"troubleshooting/#no-internet-access","title":"No Internet Access","text":"<p>Solutions:</p> <ol> <li>Check connection:</li> </ol> <pre><code># Test connectivity\nping google.com\n# or\nnslookup disaster-response.com\n</code></pre> <ol> <li> <p>Router issues:</p> </li> <li> <p>Restart router/modem</p> </li> <li>Check cable connections</li> <li> <p>Contact ISP if persistent</p> </li> <li> <p>Use mobile data:</p> </li> <li>Switch to cellular network</li> <li>Create mobile hotspot</li> <li>Use public WiFi (secured)</li> </ol>"},{"location":"troubleshooting/#firewallproxy-issues","title":"Firewall/Proxy Issues","text":"<p>Symptoms: Can't access system from work/school networks</p> <p>Solutions:</p> <ol> <li> <p>Check firewall settings:</p> </li> <li> <p>Whitelist disaster-response.com</p> </li> <li>Allow ports 80, 443, 8000, 3000</li> <li> <p>Contact IT administrator</p> </li> <li> <p>Proxy configuration:</p> </li> <li>Configure browser proxy settings</li> <li>Use VPN if allowed</li> <li>Access via mobile network</li> </ol>"},{"location":"troubleshooting/#websocket-connection-issues","title":"WebSocket Connection Issues","text":"<p>Symptoms: Real-time updates not working, messages delayed</p> <p>Solutions:</p> <ol> <li> <p>Network configuration:</p> </li> <li> <p>Allow WebSocket connections</p> </li> <li>Check corporate firewall</li> <li> <p>Verify proxy settings</p> </li> <li> <p>Browser settings:</p> </li> <li>Enable WebSockets in browser</li> <li>Clear browser cache</li> <li>Try different browser</li> </ol>"},{"location":"troubleshooting/#ai-and-processing-issues","title":"\ud83e\udd16 AI and Processing Issues","text":""},{"location":"troubleshooting/#ai-agents-not-responding","title":"AI Agents Not Responding","text":"<p>Symptoms: Requests stuck in \"processing\", no AI analysis</p> <p>Solutions:</p> <ol> <li> <p>Check system status:</p> </li> <li> <p>Visit status page</p> </li> <li>Check service health</li> <li> <p>Review error messages</p> </li> <li> <p>Wait and retry:</p> </li> <li> <p>AI processing may take 2-5 minutes</p> </li> <li>High load can cause delays</li> <li> <p>System will retry automatically</p> </li> <li> <p>Manual processing:</p> </li> <li>Contact administrator</li> <li>Request manual review</li> <li>Use emergency escalation</li> </ol>"},{"location":"troubleshooting/#incorrect-ai-classifications","title":"Incorrect AI Classifications","text":"<p>Symptoms: Wrong priority assigned, poor matching</p> <p>Solutions:</p> <ol> <li> <p>Provide feedback:</p> </li> <li> <p>Rate AI accuracy</p> </li> <li>Report incorrect classifications</li> <li> <p>Suggest improvements</p> </li> <li> <p>Add more details:</p> </li> <li> <p>Include specific keywords</p> </li> <li>Provide clearer descriptions</li> <li> <p>Add relevant photos</p> </li> <li> <p>Manual override:</p> </li> <li>Request human review</li> <li>Update priority manually</li> <li>Contact supervisor</li> </ol>"},{"location":"troubleshooting/#role-specific-issues","title":"\ud83d\udcf1 Role-Specific Issues","text":""},{"location":"troubleshooting/#affected-individuals","title":"Affected Individuals","text":""},{"location":"troubleshooting/#request-not-processed","title":"Request Not Processed","text":"<p>Symptoms: Request stuck in submitted status</p> <p>Checklist:</p> <ul> <li>[ ] All required fields completed</li> <li>[ ] Valid location provided</li> <li>[ ] Contact information correct</li> <li>[ ] Urgency level appropriate</li> <li>[ ] Photos uploaded successfully</li> </ul> <p>Actions:</p> <ol> <li>Check request status in dashboard</li> <li>Update missing information</li> <li>Contact emergency hotline if urgent</li> <li>Submit new request if needed</li> </ol>"},{"location":"troubleshooting/#cant-contact-responder","title":"Can't Contact Responder","text":"<p>Solutions:</p> <ol> <li>Use in-app messaging first</li> <li>Call emergency contact if provided</li> <li>Update request status with new information</li> <li>Contact system dispatch</li> </ol>"},{"location":"troubleshooting/#volunteers","title":"Volunteers","text":""},{"location":"troubleshooting/#no-tasks-available","title":"No Tasks Available","text":"<p>Possible Causes:</p> <ul> <li>All tasks assigned</li> <li>Location outside service area</li> <li>Skills don't match current needs</li> <li>Time restrictions</li> </ul> <p>Solutions:</p> <ol> <li>Expand search radius</li> <li>Update skill profile</li> <li>Check availability settings</li> <li>Consider different task types</li> </ol>"},{"location":"troubleshooting/#task-assignment-issues","title":"Task Assignment Issues","text":"<p>Can't Accept Task:</p> <ul> <li>Task may have been assigned to someone else</li> <li>Your profile may not meet requirements</li> <li>Check internet connectivity</li> <li>Refresh task list</li> </ul> <p>Incorrect Task Match:</p> <ul> <li>Update skill profile</li> <li>Set location preferences</li> <li>Adjust availability schedule</li> <li>Provide feedback to improve matching</li> </ul>"},{"location":"troubleshooting/#first-responders","title":"First Responders","text":""},{"location":"troubleshooting/#coordination-problems","title":"Coordination Problems","text":"<p>Communication Issues:</p> <ul> <li>Check radio frequencies</li> <li>Verify contact information</li> <li>Use backup communication methods</li> <li>Contact incident commander</li> </ul> <p>Resource Conflicts:</p> <ul> <li>Check resource allocation system</li> <li>Contact logistics coordinator</li> <li>Report equipment issues</li> <li>Request additional resources</li> </ul>"},{"location":"troubleshooting/#administrators","title":"Administrators","text":""},{"location":"troubleshooting/#dashboard-not-loading","title":"Dashboard Not Loading","text":"<p>Solutions:</p> <ol> <li>Check administrator permissions</li> <li>Clear browser cache completely</li> <li>Try different browser</li> <li>Contact system administrator</li> </ol>"},{"location":"troubleshooting/#data-inconsistencies","title":"Data Inconsistencies","text":"<p>Symptoms: Reports show conflicting information</p> <p>Actions:</p> <ol> <li>Check data source filters</li> <li>Verify time range settings</li> <li>Refresh data connections</li> <li>Run data integrity checks</li> </ol>"},{"location":"troubleshooting/#docker-and-development-issues","title":"\ud83d\udc33 Docker and Development Issues","text":""},{"location":"troubleshooting/#docker-container-issues","title":"Docker Container Issues","text":""},{"location":"troubleshooting/#containers-wont-start","title":"Containers Won't Start","text":"<p>Check container status:</p> <pre><code>docker-compose ps\ndocker-compose logs [service_name]\n</code></pre> <p>Common solutions:</p> <pre><code># Restart containers\ndocker-compose restart\n\n# Rebuild containers\ndocker-compose build --no-cache\ndocker-compose up -d\n\n# Clean and restart\nmake docker-clean\nmake docker-up\n</code></pre>"},{"location":"troubleshooting/#port-conflicts","title":"Port Conflicts","text":"<p>Symptoms: \"Port already in use\" errors</p> <p>Find conflicting processes:</p> <pre><code># Check port usage\nlsof -i :3000\nlsof -i :8000\nnetstat -tulpn | grep :3000\n</code></pre> <p>Solutions:</p> <pre><code># Kill conflicting process\nsudo kill -9 [PID]\n\n# Change ports in docker-compose.yml\nports:\n  - \"3001:3000\"  # Use port 3001 instead\n</code></pre>"},{"location":"troubleshooting/#database-connection-issues","title":"Database Connection Issues","text":"<p>Symptoms: \"Connection refused\" to PostgreSQL</p> <p>Solutions:</p> <pre><code># Check database container\ndocker-compose logs postgres\n\n# Reset database\nmake db-reset\n\n# Check database connectivity\ndocker-compose exec postgres psql -U postgres -c \"\\l\"\n</code></pre>"},{"location":"troubleshooting/#environment-configuration-issues","title":"Environment Configuration Issues","text":""},{"location":"troubleshooting/#missing-environment-variables","title":"Missing Environment Variables","text":"<p>Symptoms: Application errors about missing config</p> <p>Check environment file:</p> <pre><code># Verify .env file exists\nls -la ai_services/.env\n\n# Check required variables\ngrep -E \"OPENAI_API_KEY|DATABASE_URL|JWT_SECRET\" ai_services/.env\n</code></pre> <p>Fix missing variables:</p> <pre><code># Copy template\ncp ai_services/.env.example ai_services/.env\n\n# Add missing variables\necho \"OPENAI_API_KEY=your-key-here\" &gt;&gt; ai_services/.env\n</code></pre>"},{"location":"troubleshooting/#api-key-issues","title":"API Key Issues","text":"<p>OpenAI API Problems:</p> <pre><code># Test API key\ncurl -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n     https://api.openai.com/v1/models\n\n# Check quota\ncurl -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n     https://api.openai.com/v1/usage\n</code></pre>"},{"location":"troubleshooting/#performance-optimization","title":"\ud83d\udcca Performance Optimization","text":""},{"location":"troubleshooting/#database-performance","title":"Database Performance","text":""},{"location":"troubleshooting/#slow-queries","title":"Slow Queries","text":"<p>Identify slow queries:</p> <pre><code>-- PostgreSQL slow query log\nSELECT query, mean_time, calls\nFROM pg_stat_statements\nORDER BY mean_time DESC\nLIMIT 10;\n</code></pre> <p>Optimize database:</p> <pre><code># Vacuum and analyze\ndocker-compose exec postgres psql -U postgres -d disaster_response -c \"VACUUM ANALYZE;\"\n\n# Check indexes\ndocker-compose exec postgres psql -U postgres -d disaster_response -c \"\\di\"\n</code></pre>"},{"location":"troubleshooting/#memory-issues","title":"Memory Issues","text":""},{"location":"troubleshooting/#high-memory-usage","title":"High Memory Usage","text":"<p>Check container memory:</p> <pre><code>docker stats\ndocker-compose exec api free -h\n</code></pre> <p>Optimize memory usage:</p> <pre><code># Restart services\ndocker-compose restart api\n\n# Adjust container limits in docker-compose.yml\ndeploy:\n  resources:\n    limits:\n      memory: 1G\n</code></pre>"},{"location":"troubleshooting/#api-performance","title":"API Performance","text":""},{"location":"troubleshooting/#slow-api-responses","title":"Slow API Responses","text":"<p>Check API logs:</p> <pre><code>docker-compose logs api | grep \"ERROR\\|WARNING\"\n</code></pre> <p>Performance monitoring:</p> <pre><code># Check response times\ncurl -w \"@curl-format.txt\" -o /dev/null -s http://localhost:8000/health\n\n# Monitor with top\ndocker-compose exec api top\n</code></pre>"},{"location":"troubleshooting/#getting-additional-help","title":"\ud83d\udcde Getting Additional Help","text":""},{"location":"troubleshooting/#support-channels","title":"Support Channels","text":"Issue Type Contact Method Response Time Emergency Emergency Hotline Immediate System Down Status Page + Email 15 minutes Critical Bug Support Ticket 2 hours General Issue Email Support 24 hours Feature Request Community Forum 1 week"},{"location":"troubleshooting/#information-to-include","title":"Information to Include","text":"<p>When contacting support, provide:</p> <ol> <li> <p>User Information:</p> </li> <li> <p>User ID or email</p> </li> <li>Role (affected individual, volunteer, etc.)</li> <li> <p>Account creation date</p> </li> <li> <p>Technical Details:</p> </li> <li> <p>Browser/app version</p> </li> <li>Operating system</li> <li>Device type</li> <li> <p>Internet connection type</p> </li> <li> <p>Error Information:</p> </li> <li> <p>Exact error messages</p> </li> <li>Steps to reproduce</li> <li>Screenshots/screen recordings</li> <li> <p>Console errors (F12 \u2192 Console)</p> </li> <li> <p>Impact Assessment:</p> </li> <li>Urgency level</li> <li>Number of people affected</li> <li>Workaround attempts</li> <li>Business impact</li> </ol>"},{"location":"troubleshooting/#self-help-resources","title":"Self-Help Resources","text":"<p>Documentation:</p> <ul> <li>User Guides</li> <li>API Documentation</li> <li>Setup Guides</li> </ul> <p>Community:</p> <ul> <li>User forums</li> <li>FAQ database</li> <li>Video tutorials</li> <li>Community wiki</li> </ul> <p>Status and Updates:</p> <ul> <li>System status page</li> <li>Maintenance announcements</li> <li>Release notes</li> <li>Service updates</li> </ul>"},{"location":"troubleshooting/#feedback-and-improvement","title":"\ud83d\udd04 Feedback and Improvement","text":"<p>Help us improve the system by:</p> <ul> <li>Reporting bugs and issues</li> <li>Suggesting feature improvements</li> <li>Sharing success stories</li> <li>Participating in user surveys</li> <li>Contributing to documentation</li> </ul> <p>Feedback Channels:</p> <ul> <li>In-app feedback forms</li> <li>Support email</li> <li>Community forums</li> <li>User surveys</li> <li>GitHub issues (for developers)</li> </ul> <p>Still need help? Contact our 24/7 support team or check the community forums for additional assistance.</p>"},{"location":"api/agents/","title":"AI Agents API","text":"<p>The AI Agents API provides access to intelligent automation capabilities for disaster response coordination, including emergency processing, resource optimization, and predictive analytics.</p>"},{"location":"api/agents/#overview","title":"Overview","text":"<p>The system includes multiple specialized AI agents:</p> <ul> <li>Emergency Processing Agent: Analyzes and categorizes emergency requests</li> <li>Resource Optimization Agent: Optimizes resource allocation and distribution</li> <li>Coordination Agent: Manages task assignments and workflow optimization</li> <li>Prediction Agent: Provides predictive analytics and early warnings</li> <li>Communication Agent: Handles automated notifications and messaging</li> </ul>"},{"location":"api/agents/#agent-types","title":"Agent Types","text":""},{"location":"api/agents/#emergency-processing-agent","title":"Emergency Processing Agent","text":"<p>Analyzes incoming emergency requests and provides intelligent categorization and prioritization.</p> <pre><code>POST /api/ai-agents/emergency-processor/analyze\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"request_id\": \"req_789\",\n  \"description\": \"House fire on Galle Road, family trapped on second floor\",\n  \"location\": {\n    \"latitude\": 6.9271,\n    \"longitude\": 79.8612,\n    \"address\": \"45 Galle Road, Colombo 03\"\n  },\n  \"reporter\": {\n    \"name\": \"Maria Silva\",\n    \"phone\": \"+94771234567\",\n    \"relationship\": \"neighbor\"\n  },\n  \"media\": [\n    {\n      \"type\": \"image\",\n      \"url\": \"/uploads/emergency_photo_001.jpg\"\n    },\n    {\n      \"type\": \"audio\",\n      \"url\": \"/uploads/emergency_audio_001.wav\",\n      \"transcription\": \"Help, there's a fire and people are trapped upstairs!\"\n    }\n  ]\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"analysis_id\": \"analysis_001\",\n    \"emergency_category\": \"structural_fire\",\n    \"severity\": \"critical\",\n    \"confidence\": 0.95,\n    \"priority_score\": 95,\n    \"risk_assessment\": {\n      \"life_threat\": \"high\",\n      \"property_damage\": \"severe\",\n      \"spread_risk\": \"high\",\n      \"weather_impact\": \"low\"\n    },\n    \"required_resources\": [\n      {\n        \"type\": \"fire_truck\",\n        \"quantity\": 2,\n        \"urgency\": \"immediate\"\n      },\n      {\n        \"type\": \"ambulance\",\n        \"quantity\": 1,\n        \"urgency\": \"immediate\"\n      },\n      {\n        \"type\": \"rescue_team\",\n        \"quantity\": 1,\n        \"urgency\": \"immediate\"\n      }\n    ],\n    \"response_timeline\": {\n      \"initial_response\": \"5 minutes\",\n      \"resource_deployment\": \"8 minutes\",\n      \"estimated_resolution\": \"45 minutes\"\n    },\n    \"safety_protocols\": [\n      \"Evacuate surrounding buildings\",\n      \"Establish safety perimeter\",\n      \"Monitor for structural collapse\"\n    ],\n    \"ai_recommendations\": [\n      \"Deploy ladder truck for second-floor rescue\",\n      \"Coordinate with power company for electrical shutdown\",\n      \"Alert nearby hospitals for potential casualties\"\n    ]\n  }\n}\n</code></pre>"},{"location":"api/agents/#resource-optimization-agent","title":"Resource Optimization Agent","text":"<p>Optimizes resource allocation based on current demand and availability.</p> <pre><code>POST /api/ai-agents/resource-optimizer/optimize\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"optimization_type\": \"emergency_response\",\n  \"region\": \"western_province\",\n  \"parameters\": {\n    \"active_emergencies\": [\n      {\n        \"request_id\": \"req_789\",\n        \"category\": \"fire\",\n        \"priority\": \"critical\",\n        \"location\": { \"latitude\": 6.9271, \"longitude\": 79.8612 }\n      },\n      {\n        \"request_id\": \"req_790\",\n        \"category\": \"medical\",\n        \"priority\": \"high\",\n        \"location\": { \"latitude\": 6.9319, \"longitude\": 79.8478 }\n      }\n    ],\n    \"available_resources\": [\n      {\n        \"resource_id\": \"fire_truck_001\",\n        \"type\": \"fire_truck\",\n        \"location\": { \"latitude\": 6.92, \"longitude\": 79.85 },\n        \"status\": \"available\"\n      }\n    ],\n    \"constraints\": {\n      \"max_response_time\": 600,\n      \"minimum_coverage\": 0.8\n    }\n  }\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"optimization_id\": \"opt_001\",\n    \"allocation_plan\": [\n      {\n        \"resource_id\": \"fire_truck_001\",\n        \"assigned_to\": \"req_789\",\n        \"deployment_time\": \"2024-01-15T12:05:00Z\",\n        \"estimated_arrival\": \"2024-01-15T12:13:00Z\",\n        \"route\": {\n          \"distance\": \"3.2 km\",\n          \"duration\": \"8 minutes\",\n          \"traffic_conditions\": \"moderate\"\n        }\n      }\n    ],\n    \"performance_metrics\": {\n      \"average_response_time\": \"7.5 minutes\",\n      \"resource_utilization\": 0.85,\n      \"coverage_achieved\": 0.92\n    },\n    \"alternative_scenarios\": [\n      {\n        \"scenario\": \"if_additional_fire_truck_available\",\n        \"improvement\": \"3 minutes faster response\"\n      }\n    ],\n    \"recommendations\": [\n      \"Consider repositioning ambulance_003 to central location\",\n      \"Request additional fire truck from neighboring district\"\n    ]\n  }\n}\n</code></pre>"},{"location":"api/agents/#coordination-agent","title":"Coordination Agent","text":"<p>Manages task assignments and workflow optimization.</p> <pre><code>POST /api/ai-agents/coordinator/assign-tasks\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"emergency_request\": \"req_789\",\n  \"available_volunteers\": [\n    {\n      \"user_id\": \"user_001\",\n      \"skills\": [\"first_aid\", \"search_rescue\"],\n      \"location\": { \"latitude\": 6.9271, \"longitude\": 79.8612 },\n      \"availability\": \"immediate\"\n    },\n    {\n      \"user_id\": \"user_002\",\n      \"skills\": [\"medical_assistance\", \"translation\"],\n      \"location\": { \"latitude\": 6.93, \"longitude\": 79.85 },\n      \"availability\": \"30_minutes\"\n    }\n  ],\n  \"task_requirements\": {\n    \"skills_needed\": [\"first_aid\", \"crowd_control\"],\n    \"personnel_count\": 3,\n    \"duration_estimate\": \"2 hours\"\n  }\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"assignment_id\": \"assign_001\",\n    \"task_assignments\": [\n      {\n        \"task_id\": \"task_456\",\n        \"assigned_to\": \"user_001\",\n        \"role\": \"team_leader\",\n        \"skills_utilized\": [\"first_aid\", \"search_rescue\"],\n        \"estimated_arrival\": \"2024-01-15T12:08:00Z\",\n        \"instructions\": \"Lead rescue operations on second floor\"\n      },\n      {\n        \"task_id\": \"task_457\",\n        \"assigned_to\": \"user_002\",\n        \"role\": \"medical_support\",\n        \"skills_utilized\": [\"medical_assistance\"],\n        \"estimated_arrival\": \"2024-01-15T12:15:00Z\",\n        \"instructions\": \"Provide medical triage for evacuees\"\n      }\n    ],\n    \"coordination_plan\": {\n      \"meeting_point\": {\n        \"latitude\": 6.9271,\n        \"longitude\": 79.8612,\n        \"description\": \"Corner of Galle Road and Marine Drive\"\n      },\n      \"communication_channel\": \"emergency_channel_001\",\n      \"backup_assignments\": [\n        {\n          \"if\": \"user_001_unavailable\",\n          \"then\": \"assign_user_003\"\n        }\n      ]\n    },\n    \"success_probability\": 0.91\n  }\n}\n</code></pre>"},{"location":"api/agents/#prediction-agent","title":"Prediction Agent","text":"<p>Provides predictive analytics and early warnings.</p> <pre><code>POST /api/ai-agents/predictor/forecast\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"prediction_type\": \"demand_forecast\",\n  \"timeframe\": \"24_hours\",\n  \"region\": \"colombo_district\",\n  \"parameters\": {\n    \"weather_data\": {\n      \"current_conditions\": \"heavy_rain\",\n      \"forecast\": \"continued_rain_12h\"\n    },\n    \"historical_data\": true,\n    \"current_capacity\": {\n      \"ambulances\": 15,\n      \"fire_trucks\": 8,\n      \"volunteers\": 120\n    }\n  }\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"prediction_id\": \"pred_001\",\n    \"forecast\": {\n      \"timeframe\": \"next_24_hours\",\n      \"predicted_incidents\": [\n        {\n          \"type\": \"flooding\",\n          \"probability\": 0.78,\n          \"expected_count\": \"12-18 incidents\",\n          \"peak_time\": \"18:00-22:00\",\n          \"affected_areas\": [\"low_lying_areas\", \"drainage_prone_zones\"]\n        },\n        {\n          \"type\": \"traffic_accidents\",\n          \"probability\": 0.65,\n          \"expected_count\": \"8-12 incidents\",\n          \"contributing_factors\": [\"reduced_visibility\", \"slippery_roads\"]\n        }\n      ],\n      \"resource_demand\": {\n        \"ambulances\": {\n          \"current\": 15,\n          \"predicted_needed\": 22,\n          \"shortage\": 7\n        },\n        \"rescue_boats\": {\n          \"current\": 4,\n          \"predicted_needed\": 8,\n          \"shortage\": 4\n        }\n      },\n      \"hotspots\": [\n        {\n          \"location\": \"Wellawatte area\",\n          \"risk_level\": \"high\",\n          \"predicted_incidents\": 5,\n          \"recommended_staging\": {\n            \"ambulances\": 2,\n            \"rescue_team\": 1\n          }\n        }\n      ]\n    },\n    \"recommendations\": [\n      \"Pre-position additional ambulances in high-risk areas\",\n      \"Activate volunteer flood response teams\",\n      \"Coordinate with meteorology department for updates\",\n      \"Alert hospitals to prepare for increased casualties\"\n    ],\n    \"confidence_level\": 0.82,\n    \"last_updated\": \"2024-01-15T12:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/agents/#communication-agent","title":"Communication Agent","text":"<p>Handles automated notifications and messaging.</p> <pre><code>POST /api/ai-agents/communicator/send-notifications\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"notification_type\": \"emergency_alert\",\n  \"target_audience\": {\n    \"roles\": [\"volunteers\", \"first_responders\"],\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"radius\": 5000\n    },\n    \"skills\": [\"first_aid\", \"search_rescue\"]\n  },\n  \"message_template\": \"emergency_response\",\n  \"variables\": {\n    \"incident_type\": \"house_fire\",\n    \"location\": \"45 Galle Road, Colombo 03\",\n    \"urgency\": \"critical\",\n    \"skills_needed\": [\"first_aid\", \"search_rescue\"]\n  },\n  \"channels\": [\"sms\", \"push_notification\", \"websocket\"]\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"notification_id\": \"notif_001\",\n    \"recipients\": [\n      {\n        \"user_id\": \"user_001\",\n        \"channels_sent\": [\"sms\", \"push_notification\"],\n        \"delivery_status\": \"sent\",\n        \"estimated_delivery\": \"2024-01-15T12:01:00Z\"\n      },\n      {\n        \"user_id\": \"user_002\",\n        \"channels_sent\": [\"push_notification\", \"websocket\"],\n        \"delivery_status\": \"sent\",\n        \"estimated_delivery\": \"2024-01-15T12:01:00Z\"\n      }\n    ],\n    \"message_content\": {\n      \"sms\": \"\ud83d\udea8 EMERGENCY: House fire at 45 Galle Road, Colombo 03. First aid &amp; search rescue skills needed. Respond if available.\",\n      \"push\": {\n        \"title\": \"Emergency Response Needed\",\n        \"body\": \"House fire - First aid &amp; search rescue required\",\n        \"data\": {\n          \"request_id\": \"req_789\",\n          \"location\": \"45 Galle Road, Colombo 03\"\n        }\n      }\n    },\n    \"delivery_metrics\": {\n      \"total_sent\": 25,\n      \"delivery_rate\": 0.96,\n      \"response_rate\": 0.68,\n      \"average_response_time\": \"3.2 minutes\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#agent-status-and-monitoring","title":"Agent Status and Monitoring","text":""},{"location":"api/agents/#get-agent-status","title":"Get Agent Status","text":"<pre><code>GET /api/ai-agents/status\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"agents\": [\n      {\n        \"name\": \"emergency_processor\",\n        \"status\": \"active\",\n        \"current_load\": 0.75,\n        \"processed_today\": 145,\n        \"average_processing_time\": \"2.3 seconds\",\n        \"success_rate\": 0.97,\n        \"last_health_check\": \"2024-01-15T12:00:00Z\"\n      },\n      {\n        \"name\": \"resource_optimizer\",\n        \"status\": \"active\",\n        \"current_optimizations\": 3,\n        \"optimization_success_rate\": 0.91,\n        \"average_improvement\": \"15% efficiency gain\",\n        \"last_optimization\": \"2024-01-15T11:45:00Z\"\n      }\n    ],\n    \"system_health\": {\n      \"overall_status\": \"healthy\",\n      \"response_time\": \"1.8 seconds average\",\n      \"error_rate\": 0.03,\n      \"uptime\": \"99.7%\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#agent-performance-metrics","title":"Agent Performance Metrics","text":"<pre><code>GET /api/ai-agents/{agent_name}/metrics\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"agent_name\": \"emergency_processor\",\n    \"time_period\": \"last_24_hours\",\n    \"metrics\": {\n      \"total_requests\": 145,\n      \"successful_analyses\": 140,\n      \"failed_analyses\": 5,\n      \"average_processing_time\": \"2.3 seconds\",\n      \"accuracy_score\": 0.94,\n      \"categories_identified\": {\n        \"medical\": 45,\n        \"fire\": 28,\n        \"natural_disaster\": 35,\n        \"accident\": 32\n      },\n      \"confidence_distribution\": {\n        \"high_confidence\": 0.78,\n        \"medium_confidence\": 0.18,\n        \"low_confidence\": 0.04\n      }\n    },\n    \"performance_trends\": {\n      \"processing_time\": \"improving\",\n      \"accuracy\": \"stable\",\n      \"throughput\": \"increasing\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#agent-training-and-learning","title":"Agent Training and Learning","text":""},{"location":"api/agents/#feedback-submission","title":"Feedback Submission","text":"<pre><code>POST /api/ai-agents/feedback\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"agent_name\": \"emergency_processor\",\n  \"analysis_id\": \"analysis_001\",\n  \"feedback\": {\n    \"accuracy_rating\": 4,\n    \"category_correct\": true,\n    \"severity_correct\": true,\n    \"resource_recommendations\": \"partially_correct\",\n    \"notes\": \"Category and severity were accurate, but recommended 1 extra ambulance than needed\",\n    \"actual_outcome\": {\n      \"resources_used\": [\n        { \"type\": \"fire_truck\", \"quantity\": 2 },\n        { \"type\": \"ambulance\", \"quantity\": 1 }\n      ],\n      \"resolution_time\": \"35 minutes\",\n      \"casualties\": 0\n    }\n  },\n  \"feedback_source\": {\n    \"user_id\": \"user_admin\",\n    \"role\": \"incident_commander\",\n    \"experience_level\": \"expert\"\n  }\n}\n</code></pre>"},{"location":"api/agents/#model-updates","title":"Model Updates","text":"<pre><code>POST /api/ai-agents/{agent_name}/retrain\n</code></pre> <p>Trigger retraining of AI models with new data (admin only).</p>"},{"location":"api/agents/#integration-examples","title":"Integration Examples","text":""},{"location":"api/agents/#emergency-request-processing-workflow","title":"Emergency Request Processing Workflow","text":"<pre><code>// Process emergency request through AI agent\nconst processEmergency = async (emergencyData) =&gt; {\n  try {\n    // Step 1: Analyze with AI agent\n    const analysis = await fetch(\"/api/ai-agents/emergency-processor/analyze\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(emergencyData),\n    });\n\n    const analysisResult = await analysis.json();\n\n    // Step 2: Get resource optimization\n    const optimization = await fetch(\n      \"/api/ai-agents/resource-optimizer/optimize\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          optimization_type: \"emergency_response\",\n          analysis: analysisResult.data,\n        }),\n      }\n    );\n\n    const optimizationResult = await optimization.json();\n\n    // Step 3: Coordinate task assignments\n    const coordination = await fetch(\n      \"/api/ai-agents/coordinator/assign-tasks\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          emergency_request: emergencyData.request_id,\n          resource_plan: optimizationResult.data,\n        }),\n      }\n    );\n\n    return await coordination.json();\n  } catch (error) {\n    console.error(\"AI processing failed:\", error);\n    throw error;\n  }\n};\n</code></pre>"},{"location":"api/agents/#real-time-agent-communication","title":"Real-time Agent Communication","text":"<pre><code>// WebSocket integration with AI agents\nconst socket = new WebSocket(\"ws://localhost:8000/ws\");\n\n// Listen for AI agent updates\nsocket.onmessage = (event) =&gt; {\n  const message = JSON.parse(event.data);\n\n  if (message.type === \"ai_agent_response\") {\n    handleAgentResponse(message.data);\n  } else if (message.type === \"ai_agent_alert\") {\n    handleAgentAlert(message.data);\n  }\n};\n\n// Request AI agent analysis\nconst requestAgentAnalysis = (data) =&gt; {\n  socket.send(\n    JSON.stringify({\n      type: \"ai_agent_request\",\n      agent_type: \"emergency_processor\",\n      request: data,\n    })\n  );\n};\n</code></pre>"},{"location":"api/agents/#error-handling","title":"Error Handling","text":""},{"location":"api/agents/#agent-unavailable","title":"Agent Unavailable","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"AGENT_UNAVAILABLE\",\n    \"message\": \"Emergency processing agent is currently unavailable\",\n    \"details\": {\n      \"agent_status\": \"maintenance\",\n      \"estimated_availability\": \"2024-01-15T13:00:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#processing-failed","title":"Processing Failed","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"PROCESSING_FAILED\",\n    \"message\": \"Unable to analyze emergency request\",\n    \"details\": {\n      \"reason\": \"insufficient_data\",\n      \"missing_fields\": [\"location\", \"description\"],\n      \"retry_possible\": true\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#rate-limit-exceeded","title":"Rate Limit Exceeded","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Too many requests to AI agent\",\n    \"details\": {\n      \"limit\": 100,\n      \"window\": \"1 minute\",\n      \"retry_after\": 30\n    }\n  }\n}\n</code></pre>"},{"location":"api/agents/#best-practices","title":"Best Practices","text":""},{"location":"api/agents/#agent-utilization","title":"Agent Utilization","text":"<ul> <li>Load Balancing: Distribute requests across multiple agent instances</li> <li>Caching: Cache frequently accessed predictions and analyses</li> <li>Fallback Strategies: Implement manual processing when agents are unavailable</li> <li>Performance Monitoring: Track agent response times and accuracy</li> </ul>"},{"location":"api/agents/#data-quality","title":"Data Quality","text":"<ul> <li>Input Validation: Ensure high-quality input data for better results</li> <li>Feedback Loops: Continuously improve agents with outcome feedback</li> <li>Data Enrichment: Provide context and historical data when available</li> <li>Error Handling: Gracefully handle agent failures and partial results</li> </ul>"},{"location":"api/agents/#integration-patterns","title":"Integration Patterns","text":"<ul> <li>Asynchronous Processing: Use async patterns for long-running analyses</li> <li>Event-Driven Architecture: Trigger agent actions based on system events</li> <li>Human-in-the-Loop: Combine AI recommendations with human oversight</li> <li>Continuous Learning: Update models based on real-world outcomes</li> </ul>"},{"location":"api/authentication/","title":"Authentication API","text":"<p>Secure authentication system using JWT tokens with role-based access control.</p>"},{"location":"api/authentication/#overview","title":"\ud83d\udd10 Overview","text":"<p>The authentication system provides:</p> <ul> <li>JWT Token Authentication - Secure, stateless authentication</li> <li>Role-Based Access Control - Four user roles with specific permissions</li> <li>Session Management - Token refresh and revocation</li> <li>Password Security - Bcrypt hashing with salt</li> </ul>"},{"location":"api/authentication/#user-roles","title":"\ud83d\udc65 User Roles","text":"Role Description Permissions <code>affected_individual</code> People seeking help Submit requests, view own requests <code>volunteer</code> Community volunteers View/accept tasks, update status <code>first_responder</code> Emergency professionals All volunteer permissions + priority access <code>admin</code> System administrators Full system access and management"},{"location":"api/authentication/#authentication-flow","title":"\ud83d\udd11 Authentication Flow","text":"<pre><code>sequenceDiagram\n    participant Client\n    participant API as FastAPI\n    participant DB as Database\n    participant Redis\n\n    Client-&gt;&gt;API: POST /auth/login\n    API-&gt;&gt;DB: Verify credentials\n    DB--&gt;&gt;API: User data\n    API-&gt;&gt;Redis: Store session\n    API--&gt;&gt;Client: JWT Access Token + Refresh Token\n\n    Client-&gt;&gt;API: Authenticated Request\n    Note over Client,API: Authorization: Bearer {token}\n    API-&gt;&gt;Redis: Validate session\n    API--&gt;&gt;Client: Protected resource\n\n    Client-&gt;&gt;API: POST /auth/refresh\n    API-&gt;&gt;Redis: Validate refresh token\n    API--&gt;&gt;Client: New access token</code></pre>"},{"location":"api/authentication/#endpoints","title":"\ud83d\udccb Endpoints","text":""},{"location":"api/authentication/#register-user","title":"Register User","text":"<p>Create a new user account.</p> <pre><code>POST /auth/register\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"email\": \"user@example.com\",\n  \"password\": \"secure_password123\",\n  \"full_name\": \"John Doe\",\n  \"role\": \"volunteer\",\n  \"phone_number\": \"+1234567890\"\n}\n</code></pre> <p>Response (201 Created):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"email\": \"user@example.com\",\n  \"full_name\": \"John Doe\",\n  \"role\": \"volunteer\",\n  \"phone_number\": \"+1234567890\",\n  \"is_active\": true,\n  \"created_at\": \"2025-06-04T10:30:00Z\"\n}\n</code></pre> <p>Validation Rules:</p> <ul> <li>Email must be valid and unique</li> <li>Password minimum 8 characters</li> <li>Role must be one of: <code>affected_individual</code>, <code>volunteer</code>, <code>first_responder</code>, <code>admin</code></li> <li>Phone number optional but must be valid format</li> </ul>"},{"location":"api/authentication/#login","title":"Login","text":"<p>Authenticate user and receive JWT tokens.</p> <pre><code>POST /auth/login\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"email\": \"user@example.com\",\n  \"password\": \"secure_password123\"\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 86400,\n  \"user\": {\n    \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"email\": \"user@example.com\",\n    \"full_name\": \"John Doe\",\n    \"role\": \"volunteer\",\n    \"is_active\": true\n  }\n}\n</code></pre>"},{"location":"api/authentication/#refresh-token","title":"Refresh Token","text":"<p>Get a new access token using refresh token.</p> <pre><code>POST /auth/refresh\nAuthorization: Bearer {refresh_token}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 86400\n}\n</code></pre>"},{"location":"api/authentication/#logout","title":"Logout","text":"<p>Revoke current session and tokens.</p> <pre><code>POST /auth/logout\nAuthorization: Bearer {access_token}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"message\": \"Successfully logged out\"\n}\n</code></pre>"},{"location":"api/authentication/#current-user","title":"Current User","text":"<p>Get current authenticated user information.</p> <pre><code>GET /auth/me\nAuthorization: Bearer {access_token}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"email\": \"user@example.com\",\n  \"full_name\": \"John Doe\",\n  \"role\": \"volunteer\",\n  \"phone_number\": \"+1234567890\",\n  \"is_active\": true,\n  \"created_at\": \"2025-06-04T10:30:00Z\",\n  \"last_login\": \"2025-06-04T15:45:00Z\"\n}\n</code></pre>"},{"location":"api/authentication/#update-profile","title":"Update Profile","text":"<p>Update current user profile information.</p> <pre><code>PUT /auth/profile\nAuthorization: Bearer {access_token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"full_name\": \"John Smith\",\n  \"phone_number\": \"+1987654321\"\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"email\": \"user@example.com\",\n  \"full_name\": \"John Smith\",\n  \"role\": \"volunteer\",\n  \"phone_number\": \"+1987654321\",\n  \"is_active\": true,\n  \"updated_at\": \"2025-06-04T16:00:00Z\"\n}\n</code></pre>"},{"location":"api/authentication/#change-password","title":"Change Password","text":"<p>Change user password.</p> <pre><code>PUT /auth/password\nAuthorization: Bearer {access_token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"current_password\": \"old_password123\",\n  \"new_password\": \"new_secure_password456\"\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"message\": \"Password updated successfully\"\n}\n</code></pre>"},{"location":"api/authentication/#token-format","title":"\ud83d\udd12 Token Format","text":""},{"location":"api/authentication/#access-token","title":"Access Token","text":"<p>JWT payload structure:</p> <pre><code>{\n  \"sub\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"email\": \"user@example.com\",\n  \"role\": \"volunteer\",\n  \"iat\": 1717516800,\n  \"exp\": 1717603200,\n  \"type\": \"access\"\n}\n</code></pre>"},{"location":"api/authentication/#refresh-token_1","title":"Refresh Token","text":"<p>JWT payload structure:</p> <pre><code>{\n  \"sub\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"iat\": 1717516800,\n  \"exp\": 1720108800,\n  \"type\": \"refresh\"\n}\n</code></pre> <p>Token Expiration:</p> <ul> <li>Access Token: 24 hours (86400 seconds)</li> <li>Refresh Token: 30 days (2592000 seconds)</li> </ul>"},{"location":"api/authentication/#security-features","title":"\ud83d\udee1\ufe0f Security Features","text":""},{"location":"api/authentication/#password-requirements","title":"Password Requirements","text":"<ul> <li>Minimum 8 characters</li> <li>Must contain letters and numbers</li> <li>Special characters recommended</li> <li>Bcrypt hashing with salt rounds: 12</li> </ul>"},{"location":"api/authentication/#rate-limiting","title":"Rate Limiting","text":"Endpoint Limit Window <code>/auth/login</code> 5 attempts 15 minutes <code>/auth/register</code> 3 attempts 1 hour <code>/auth/refresh</code> 10 attempts 1 hour"},{"location":"api/authentication/#session-management","title":"Session Management","text":"<ul> <li>Sessions stored in Redis with TTL</li> <li>Automatic cleanup of expired sessions</li> <li>Concurrent session limit: 5 per user</li> <li>Device fingerprinting for security</li> </ul>"},{"location":"api/authentication/#error-responses","title":"\ud83d\udeab Error Responses","text":""},{"location":"api/authentication/#authentication-errors","title":"Authentication Errors","text":"<p>Invalid Credentials (401):</p> <pre><code>{\n  \"detail\": \"Invalid email or password\",\n  \"error_code\": \"AUTH_INVALID_CREDENTIALS\"\n}\n</code></pre> <p>Token Expired (401):</p> <pre><code>{\n  \"detail\": \"Token has expired\",\n  \"error_code\": \"AUTH_TOKEN_EXPIRED\"\n}\n</code></pre> <p>Insufficient Permissions (403):</p> <pre><code>{\n  \"detail\": \"Insufficient permissions for this operation\",\n  \"error_code\": \"AUTH_INSUFFICIENT_PERMISSIONS\"\n}\n</code></pre>"},{"location":"api/authentication/#validation-errors","title":"Validation Errors","text":"<p>Email Already Exists (400):</p> <pre><code>{\n  \"detail\": \"Email address already registered\",\n  \"error_code\": \"AUTH_EMAIL_EXISTS\"\n}\n</code></pre> <p>Weak Password (400):</p> <pre><code>{\n  \"detail\": \"Password does not meet security requirements\",\n  \"error_code\": \"AUTH_WEAK_PASSWORD\"\n}\n</code></pre>"},{"location":"api/authentication/#client-integration","title":"\ud83d\udcbb Client Integration","text":""},{"location":"api/authentication/#javascripttypescript","title":"JavaScript/TypeScript","text":"<pre><code>class AuthService {\n  private baseURL = \"http://localhost:8000/auth\";\n  private tokenKey = \"disaster_response_token\";\n\n  async login(email: string, password: string) {\n    const response = await fetch(`${this.baseURL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Login failed\");\n    }\n\n    const data = await response.json();\n    localStorage.setItem(this.tokenKey, data.access_token);\n    return data;\n  }\n\n  async makeAuthenticatedRequest(url: string, options: RequestInit = {}) {\n    const token = localStorage.getItem(this.tokenKey);\n\n    return fetch(url, {\n      ...options,\n      headers: {\n        ...options.headers,\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n  }\n}\n</code></pre>"},{"location":"api/authentication/#python","title":"Python","text":"<pre><code>import requests\nfrom typing import Optional\n\nclass DisasterResponseAuth:\n    def __init__(self, base_url: str = \"http://localhost:8000\"):\n        self.base_url = base_url\n        self.access_token: Optional[str] = None\n        self.refresh_token: Optional[str] = None\n\n    def login(self, email: str, password: str) -&gt; dict:\n        response = requests.post(\n            f\"{self.base_url}/auth/login\",\n            json={\"email\": email, \"password\": password}\n        )\n        response.raise_for_status()\n\n        data = response.json()\n        self.access_token = data[\"access_token\"]\n        self.refresh_token = data[\"refresh_token\"]\n        return data\n\n    def get_headers(self) -&gt; dict:\n        if not self.access_token:\n            raise ValueError(\"Not authenticated\")\n\n        return {\"Authorization\": f\"Bearer {self.access_token}\"}\n\n    def request(self, method: str, endpoint: str, **kwargs) -&gt; requests.Response:\n        return requests.request(\n            method,\n            f\"{self.base_url}{endpoint}\",\n            headers=self.get_headers(),\n            **kwargs\n        )\n</code></pre>"},{"location":"api/authentication/#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"api/authentication/#environment-variables","title":"Environment Variables","text":"<pre><code># JWT Configuration\nJWT_SECRET=your-super-secret-jwt-key-here\nJWT_ALGORITHM=HS256\nJWT_EXPIRE_MINUTES=1440\n\n# Session Configuration\nSESSION_SECRET=your-session-secret\nSESSION_EXPIRE_HOURS=24\n\n# Rate Limiting\nRATE_LIMIT_ENABLED=true\nRATE_LIMIT_STORAGE=redis://localhost:6379/1\n</code></pre>"},{"location":"api/authentication/#fastapi-dependency","title":"FastAPI Dependency","text":"<pre><code>from fastapi import Depends, HTTPException\nfrom fastapi.security import HTTPBearer\nfrom core.auth import verify_token, get_current_user\n\nsecurity = HTTPBearer()\n\n# Protect endpoint with authentication\n@app.get(\"/protected\")\nasync def protected_endpoint(\n    current_user = Depends(get_current_user)\n):\n    return {\"user\": current_user}\n\n# Protect endpoint with role requirement\n@app.get(\"/admin-only\")\nasync def admin_endpoint(\n    current_user = Depends(get_current_user)\n):\n    if current_user.role != \"admin\":\n        raise HTTPException(403, \"Admin access required\")\n    return {\"message\": \"Admin data\"}\n</code></pre>"},{"location":"api/authentication/#related-documentation","title":"\ud83d\udcda Related Documentation","text":"<ul> <li>User Management API - User CRUD operations</li> <li>WebSocket Authentication - WebSocket auth setup</li> <li>Environment Configuration - JWT settings</li> </ul> <p>Need help with authentication? Check the Troubleshooting Guide.</p>"},{"location":"api/requests/","title":"Emergency Requests API","text":"<p>Manage emergency requests submitted by affected individuals and processed by AI agents.</p>"},{"location":"api/requests/#overview","title":"\ud83d\udccb Overview","text":"<p>The Requests API handles the complete lifecycle of emergency requests:</p> <ul> <li>Submission - Affected individuals submit help requests</li> <li>Processing - AI agents analyze and prioritize requests</li> <li>Assignment - Automatic assignment to volunteers/responders</li> <li>Updates - Real-time status updates and communication</li> <li>Resolution - Request completion and feedback</li> </ul>"},{"location":"api/requests/#request-lifecycle","title":"\ud83c\udfd7\ufe0f Request Lifecycle","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; submitted: User submits request\n    submitted --&gt; processing: AI Intake Agent\n    processing --&gt; prioritized: AI Prioritization Agent\n    prioritized --&gt; assigned: AI Assignment Agent\n    assigned --&gt; in_progress: Volunteer accepts\n    in_progress --&gt; completed: Task completed\n    in_progress --&gt; cancelled: Request cancelled\n    completed --&gt; [*]\n    cancelled --&gt; [*]\n\n    note right of submitted: Initial validation\n    note right of processing: AI analysis &amp; categorization\n    note right of prioritized: Urgency assessment\n    note right of assigned: Resource allocation</code></pre>"},{"location":"api/requests/#request-model","title":"\ud83d\udccb Request Model","text":"<pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"title\": \"Medical Emergency - Elderly Person\",\n  \"description\": \"My elderly neighbor needs immediate medical attention\",\n  \"request_type\": \"medical\",\n  \"priority\": \"high\",\n  \"status\": \"assigned\",\n  \"location\": {\n    \"address\": \"123 Main St, City, State 12345\",\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006,\n    \"additional_info\": \"Apartment 3B, blue building\"\n  },\n  \"contact_info\": {\n    \"phone\": \"+1234567890\",\n    \"email\": \"user@example.com\",\n    \"preferred_method\": \"phone\"\n  },\n  \"urgency_level\": 8,\n  \"estimated_people_affected\": 1,\n  \"resources_needed\": [\"medical_supplies\", \"transportation\"],\n  \"multimedia_attachments\": [\n    {\n      \"type\": \"image\",\n      \"url\": \"/uploads/emergency-photo-1.jpg\",\n      \"description\": \"Photo of the situation\"\n    }\n  ],\n  \"ai_analysis\": {\n    \"category\": \"medical_emergency\",\n    \"confidence\": 0.95,\n    \"extracted_entities\": [\"elderly\", \"medical\", \"immediate\"],\n    \"risk_assessment\": \"high_risk\",\n    \"recommended_resources\": [\"paramedic\", \"ambulance\"]\n  },\n  \"assigned_to\": {\n    \"user_id\": \"volunteer-123\",\n    \"full_name\": \"Jane Smith\",\n    \"role\": \"first_responder\",\n    \"assigned_at\": \"2025-06-04T10:30:00Z\"\n  },\n  \"requester\": {\n    \"user_id\": \"user-456\",\n    \"full_name\": \"John Doe\",\n    \"role\": \"affected_individual\"\n  },\n  \"created_at\": \"2025-06-04T10:15:00Z\",\n  \"updated_at\": \"2025-06-04T10:30:00Z\",\n  \"resolved_at\": null\n}\n</code></pre>"},{"location":"api/requests/#endpoints","title":"\ud83d\udccb Endpoints","text":""},{"location":"api/requests/#submit-request","title":"Submit Request","text":"<p>Create a new emergency request.</p> <pre><code>POST /requests\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"title\": \"Medical Emergency - Elderly Person\",\n  \"description\": \"My elderly neighbor needs immediate medical attention. She fell down and can't get up.\",\n  \"request_type\": \"medical\",\n  \"location\": {\n    \"address\": \"123 Main St, City, State 12345\",\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006,\n    \"additional_info\": \"Apartment 3B, blue building\"\n  },\n  \"contact_info\": {\n    \"phone\": \"+1234567890\",\n    \"email\": \"user@example.com\",\n    \"preferred_method\": \"phone\"\n  },\n  \"urgency_level\": 8,\n  \"estimated_people_affected\": 1,\n  \"resources_needed\": [\"medical_supplies\", \"transportation\"]\n}\n</code></pre> <p>Response (201 Created):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"title\": \"Medical Emergency - Elderly Person\",\n  \"status\": \"submitted\",\n  \"priority\": \"pending\",\n  \"created_at\": \"2025-06-04T10:15:00Z\",\n  \"ai_processing_started\": true,\n  \"estimated_response_time\": \"5-10 minutes\"\n}\n</code></pre>"},{"location":"api/requests/#get-all-requests","title":"Get All Requests","text":"<p>Retrieve requests with filtering and pagination.</p> <pre><code>GET /requests?status=assigned&amp;priority=high&amp;limit=10&amp;offset=0\nAuthorization: Bearer {token}\n</code></pre> <p>Query Parameters:</p> Parameter Type Description Default <code>status</code> string Filter by status all <code>priority</code> string Filter by priority all <code>request_type</code> string Filter by type all <code>assigned_to</code> string Filter by assignee ID all <code>requester</code> string Filter by requester ID all <code>created_after</code> datetime Filter by creation date none <code>created_before</code> datetime Filter by creation date none <code>limit</code> integer Items per page (max 100) 20 <code>offset</code> integer Page offset 0 <code>sort</code> string Sort field created_at <code>order</code> string Sort order (asc/desc) desc <p>Response (200 OK):</p> <pre><code>{\n  \"requests\": [\n    {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"title\": \"Medical Emergency - Elderly Person\",\n      \"status\": \"assigned\",\n      \"priority\": \"high\",\n      \"request_type\": \"medical\",\n      \"urgency_level\": 8,\n      \"created_at\": \"2025-06-04T10:15:00Z\",\n      \"assigned_to\": {\n        \"user_id\": \"volunteer-123\",\n        \"full_name\": \"Jane Smith\",\n        \"role\": \"first_responder\"\n      }\n    }\n  ],\n  \"total\": 45,\n  \"limit\": 10,\n  \"offset\": 0,\n  \"has_next\": true,\n  \"has_prev\": false\n}\n</code></pre>"},{"location":"api/requests/#get-request-details","title":"Get Request Details","text":"<p>Retrieve detailed information about a specific request.</p> <pre><code>GET /requests/{request_id}\nAuthorization: Bearer {token}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"title\": \"Medical Emergency - Elderly Person\",\n  \"description\": \"My elderly neighbor needs immediate medical attention\",\n  \"request_type\": \"medical\",\n  \"priority\": \"high\",\n  \"status\": \"in_progress\",\n  \"location\": {\n    \"address\": \"123 Main St, City, State 12345\",\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006\n  },\n  \"ai_analysis\": {\n    \"category\": \"medical_emergency\",\n    \"confidence\": 0.95,\n    \"risk_assessment\": \"high_risk\"\n  },\n  \"timeline\": [\n    {\n      \"timestamp\": \"2025-06-04T10:15:00Z\",\n      \"event\": \"request_submitted\",\n      \"description\": \"Request submitted by John Doe\"\n    },\n    {\n      \"timestamp\": \"2025-06-04T10:17:00Z\",\n      \"event\": \"ai_processing_completed\",\n      \"description\": \"AI analysis completed - High priority medical emergency\"\n    },\n    {\n      \"timestamp\": \"2025-06-04T10:30:00Z\",\n      \"event\": \"assigned\",\n      \"description\": \"Assigned to Jane Smith (First Responder)\"\n    },\n    {\n      \"timestamp\": \"2025-06-04T10:35:00Z\",\n      \"event\": \"status_update\",\n      \"description\": \"Responder en route to location\"\n    }\n  ],\n  \"messages\": [\n    {\n      \"id\": \"msg-1\",\n      \"sender\": \"Jane Smith\",\n      \"message\": \"I'm on my way. ETA 5 minutes.\",\n      \"timestamp\": \"2025-06-04T10:35:00Z\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/requests/#update-request-status","title":"Update Request Status","text":"<p>Update the status of an existing request.</p> <pre><code>PUT /requests/{request_id}/status\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"status\": \"in_progress\",\n  \"notes\": \"Responder arrived on scene\",\n  \"estimated_completion\": \"2025-06-04T11:30:00Z\"\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"status\": \"in_progress\",\n  \"updated_at\": \"2025-06-04T10:45:00Z\",\n  \"updated_by\": {\n    \"user_id\": \"volunteer-123\",\n    \"full_name\": \"Jane Smith\"\n  }\n}\n</code></pre>"},{"location":"api/requests/#assign-request","title":"Assign Request","text":"<p>Assign a request to a volunteer or first responder.</p> <pre><code>POST /requests/{request_id}/assign\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"assignee_id\": \"volunteer-123\",\n  \"notes\": \"Best match based on location and skills\"\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"status\": \"assigned\",\n  \"assigned_to\": {\n    \"user_id\": \"volunteer-123\",\n    \"full_name\": \"Jane Smith\",\n    \"role\": \"first_responder\",\n    \"distance_km\": 2.3,\n    \"eta_minutes\": 8\n  },\n  \"assigned_at\": \"2025-06-04T10:30:00Z\"\n}\n</code></pre>"},{"location":"api/requests/#add-message","title":"Add Message","text":"<p>Add a message/update to a request.</p> <pre><code>POST /requests/{request_id}/messages\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"message\": \"Patient has been stabilized and is being transported to hospital\",\n  \"message_type\": \"status_update\",\n  \"visibility\": \"all\"\n}\n</code></pre> <p>Response (201 Created):</p> <pre><code>{\n  \"id\": \"msg-5\",\n  \"message\": \"Patient has been stabilized and is being transported to hospital\",\n  \"sender\": {\n    \"user_id\": \"volunteer-123\",\n    \"full_name\": \"Jane Smith\",\n    \"role\": \"first_responder\"\n  },\n  \"timestamp\": \"2025-06-04T11:15:00Z\",\n  \"message_type\": \"status_update\"\n}\n</code></pre>"},{"location":"api/requests/#upload-attachment","title":"Upload Attachment","text":"<p>Add multimedia attachments to a request.</p> <pre><code>POST /requests/{request_id}/attachments\nAuthorization: Bearer {token}\nContent-Type: multipart/form-data\n</code></pre> <p>Form Data:</p> <ul> <li><code>file</code>: Image/video file (max 10MB)</li> <li><code>description</code>: Description of the attachment</li> <li><code>attachment_type</code>: Type of attachment (image/video/document)</li> </ul> <p>Response (201 Created):</p> <pre><code>{\n  \"id\": \"att-1\",\n  \"filename\": \"emergency-photo.jpg\",\n  \"url\": \"/uploads/requests/550e8400-e29b-41d4-a716-446655440000/emergency-photo.jpg\",\n  \"type\": \"image\",\n  \"size\": 2048576,\n  \"description\": \"Photo showing the emergency situation\",\n  \"uploaded_at\": \"2025-06-04T10:20:00Z\"\n}\n</code></pre>"},{"location":"api/requests/#get-request-statistics","title":"Get Request Statistics","text":"<p>Get statistical overview of requests.</p> <pre><code>GET /requests/stats?period=24h\nAuthorization: Bearer {token}\n</code></pre> <p>Query Parameters:</p> <ul> <li><code>period</code>: Time period (1h, 24h, 7d, 30d)</li> <li><code>group_by</code>: Group by field (status, priority, type, hour, day)</li> </ul> <p>Response (200 OK):</p> <pre><code>{\n  \"total_requests\": 150,\n  \"period\": \"24h\",\n  \"breakdown\": {\n    \"by_status\": {\n      \"submitted\": 25,\n      \"processing\": 10,\n      \"assigned\": 35,\n      \"in_progress\": 40,\n      \"completed\": 35,\n      \"cancelled\": 5\n    },\n    \"by_priority\": {\n      \"critical\": 5,\n      \"high\": 25,\n      \"medium\": 70,\n      \"low\": 50\n    },\n    \"by_type\": {\n      \"medical\": 45,\n      \"rescue\": 30,\n      \"shelter\": 25,\n      \"supplies\": 35,\n      \"transportation\": 15\n    }\n  },\n  \"response_times\": {\n    \"average_assignment_time\": 8.5,\n    \"average_completion_time\": 45.2\n  }\n}\n</code></pre>"},{"location":"api/requests/#ai-processing","title":"\ud83e\udd16 AI Processing","text":""},{"location":"api/requests/#request-analysis","title":"Request Analysis","text":"<p>When a request is submitted, AI agents process it:</p> <ol> <li>Intake Agent - Validates and enriches request data</li> <li>Prioritization Agent - Assigns priority and urgency</li> <li>Assignment Agent - Finds best responder match</li> <li>Communication Agent - Sends notifications</li> </ol>"},{"location":"api/requests/#ai-analysis-fields","title":"AI Analysis Fields","text":"<pre><code>{\n  \"ai_analysis\": {\n    \"category\": \"medical_emergency\",\n    \"confidence\": 0.95,\n    \"extracted_entities\": [\n      { \"type\": \"person\", \"value\": \"elderly neighbor\" },\n      { \"type\": \"condition\", \"value\": \"fell down\" },\n      { \"type\": \"urgency\", \"value\": \"immediate\" }\n    ],\n    \"risk_assessment\": \"high_risk\",\n    \"recommended_resources\": [\"paramedic\", \"ambulance\"],\n    \"similar_cases\": [\"case-123\", \"case-456\"],\n    \"processing_time\": 2.3,\n    \"agent_notes\": \"High priority medical case requiring immediate response\"\n  }\n}\n</code></pre>"},{"location":"api/requests/#search-and-filtering","title":"\ud83d\udd0d Search and Filtering","text":""},{"location":"api/requests/#advanced-search","title":"Advanced Search","text":"<pre><code>GET /requests/search?q=medical emergency&amp;location=nearby&amp;radius=5km\nAuthorization: Bearer {token}\n</code></pre> <p>Query Parameters:</p> <ul> <li><code>q</code>: Free text search</li> <li><code>location</code>: Search near location (coordinates or address)</li> <li><code>radius</code>: Search radius (km)</li> <li><code>skills</code>: Required skills/resources</li> <li><code>availability</code>: Responder availability filter</li> </ul>"},{"location":"api/requests/#geospatial-queries","title":"Geospatial Queries","text":"<pre><code>GET /requests/nearby?lat=40.7128&amp;lng=-74.0060&amp;radius=10\nAuthorization: Bearer {token}\n</code></pre> <p>Find requests within specified radius of coordinates.</p>"},{"location":"api/requests/#real-time-updates","title":"\ud83d\udea8 Real-time Updates","text":""},{"location":"api/requests/#websocket-events","title":"WebSocket Events","text":"<p>Requests emit real-time events via WebSocket:</p> <pre><code>{\n  \"event\": \"request_updated\",\n  \"data\": {\n    \"request_id\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"status\": \"in_progress\",\n    \"updated_by\": \"volunteer-123\",\n    \"timestamp\": \"2025-06-04T10:45:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/requests/#event-types","title":"Event Types","text":"<ul> <li><code>request_created</code> - New request submitted</li> <li><code>request_updated</code> - Status or details changed</li> <li><code>request_assigned</code> - Assigned to responder</li> <li><code>request_message</code> - New message added</li> <li><code>request_completed</code> - Request resolved</li> </ul>"},{"location":"api/requests/#permissions","title":"\ud83d\udd12 Permissions","text":""},{"location":"api/requests/#role-based-access","title":"Role-Based Access","text":"Operation Affected Individual Volunteer First Responder Admin Create request \u2705 \u2705 \u2705 \u2705 View own requests \u2705 - - \u2705 View assigned requests - \u2705 \u2705 \u2705 View all requests - - \u2705 \u2705 Update status - \u2705 \u2705 \u2705 Assign requests - - \u2705 \u2705 Delete requests - - - \u2705"},{"location":"api/requests/#related-apis","title":"\ud83d\udcda Related APIs","text":"<ul> <li>Tasks API - Task management for requests</li> <li>Users API - User and responder management</li> <li>WebSocket API - Real-time updates</li> <li>AI Agents API - AI processing status</li> </ul> <p>Need help with the Requests API? Check the API Troubleshooting Guide.</p>"},{"location":"api/resources/","title":"Resources API","text":"<p>The Resources API manages emergency response resources including medical supplies, vehicles, equipment, and personnel allocation.</p>"},{"location":"api/resources/#overview","title":"Overview","text":"<p>Resources are critical components of disaster response operations. The API provides functionality for:</p> <ul> <li>Resource inventory management</li> <li>Real-time availability tracking</li> <li>Allocation and assignment</li> <li>Capacity planning</li> <li>Location-based resource discovery</li> </ul>"},{"location":"api/resources/#endpoints","title":"Endpoints","text":""},{"location":"api/resources/#list-resources","title":"List Resources","text":"<pre><code>GET /api/resources\n</code></pre> <p>Retrieve all available resources with filtering options.</p> <p>Query Parameters:</p> <ul> <li><code>type</code> (string, optional): Filter by resource type (medical_supplies, vehicles, equipment, personnel)</li> <li><code>location</code> (string, optional): Filter by location coordinates or area</li> <li><code>status</code> (string, optional): Filter by availability status (available, allocated, maintenance)</li> <li><code>capacity</code> (number, optional): Minimum capacity requirement</li> </ul> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"resource_001\",\n      \"type\": \"ambulance\",\n      \"category\": \"vehicles\",\n      \"name\": \"Ambulance Unit 7\",\n      \"location\": {\n        \"latitude\": 6.9271,\n        \"longitude\": 79.8612,\n        \"address\": \"Colombo General Hospital\"\n      },\n      \"status\": \"available\",\n      \"capacity\": {\n        \"patients\": 2,\n        \"medical_crew\": 3\n      },\n      \"equipment\": [\"defibrillator\", \"oxygen_tank\", \"first_aid_kit\"],\n      \"availability_window\": {\n        \"start\": \"2024-01-15T08:00:00Z\",\n        \"end\": \"2024-01-15T20:00:00Z\"\n      },\n      \"contact\": {\n        \"driver\": \"John Silva\",\n        \"phone\": \"+94771234567\"\n      },\n      \"last_updated\": \"2024-01-15T10:30:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": 25,\n    \"page\": 1,\n    \"limit\": 10,\n    \"pages\": 3\n  }\n}\n</code></pre>"},{"location":"api/resources/#get-resource-details","title":"Get Resource Details","text":"<pre><code>GET /api/resources/{resource_id}\n</code></pre> <p>Retrieve detailed information about a specific resource.</p> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"resource_001\",\n    \"type\": \"medical_team\",\n    \"category\": \"personnel\",\n    \"name\": \"Emergency Medical Team Alpha\",\n    \"specialization\": [\"trauma\", \"pediatric\", \"cardiac\"],\n    \"members\": [\n      {\n        \"id\": \"medic_001\",\n        \"name\": \"Dr. Sarah Johnson\",\n        \"role\": \"team_leader\",\n        \"certifications\": [\"ACLS\", \"PALS\", \"ATLS\"],\n        \"contact\": \"+94771234567\"\n      }\n    ],\n    \"current_assignment\": null,\n    \"deployment_history\": [\n      {\n        \"request_id\": \"req_456\",\n        \"location\": \"Kandy District\",\n        \"duration\": \"4 hours\",\n        \"outcome\": \"successful\"\n      }\n    ],\n    \"performance_metrics\": {\n      \"response_time_avg\": \"12 minutes\",\n      \"success_rate\": 0.95,\n      \"availability_rate\": 0.87\n    }\n  }\n}\n</code></pre>"},{"location":"api/resources/#allocate-resource","title":"Allocate Resource","text":"<pre><code>POST /api/resources/{resource_id}/allocate\n</code></pre> <p>Allocate a resource to an emergency request or task.</p> <p>Request Body:</p> <pre><code>{\n  \"request_id\": \"req_789\",\n  \"task_id\": \"task_123\",\n  \"allocated_by\": \"user_456\",\n  \"allocation_type\": \"temporary\",\n  \"duration_hours\": 6,\n  \"priority\": \"high\",\n  \"special_instructions\": \"Requires hazmat equipment\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"allocation_id\": \"alloc_001\",\n    \"resource_id\": \"resource_001\",\n    \"request_id\": \"req_789\",\n    \"status\": \"allocated\",\n    \"allocated_at\": \"2024-01-15T11:00:00Z\",\n    \"estimated_completion\": \"2024-01-15T17:00:00Z\",\n    \"allocation_details\": {\n      \"contact_person\": \"John Silva\",\n      \"contact_phone\": \"+94771234567\",\n      \"deployment_location\": {\n        \"latitude\": 6.9271,\n        \"longitude\": 79.8612\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/resources/#update-resource-status","title":"Update Resource Status","text":"<pre><code>PATCH /api/resources/{resource_id}\n</code></pre> <p>Update resource availability, location, or status.</p> <p>Request Body:</p> <pre><code>{\n  \"status\": \"maintenance\",\n  \"location\": {\n    \"latitude\": 6.9271,\n    \"longitude\": 79.8612\n  },\n  \"maintenance_reason\": \"Scheduled inspection\",\n  \"estimated_available\": \"2024-01-16T08:00:00Z\"\n}\n</code></pre>"},{"location":"api/resources/#resource-availability-forecast","title":"Resource Availability Forecast","text":"<pre><code>GET /api/resources/forecast\n</code></pre> <p>Get predicted resource availability for planning purposes.</p> <p>Query Parameters:</p> <ul> <li><code>location</code> (string, required): Target location for forecast</li> <li><code>timeframe</code> (string, optional): Forecast period (1h, 6h, 24h, 7d)</li> <li><code>resource_types</code> (array, optional): Specific resource types to forecast</li> </ul> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"location\": \"Colombo District\",\n    \"timeframe\": \"24h\",\n    \"forecast\": [\n      {\n        \"time\": \"2024-01-15T12:00:00Z\",\n        \"available_resources\": {\n          \"ambulances\": 8,\n          \"fire_trucks\": 4,\n          \"medical_teams\": 12,\n          \"rescue_equipment\": 15\n        },\n        \"predicted_demand\": {\n          \"ambulances\": 3,\n          \"medical_teams\": 5\n        },\n        \"capacity_utilization\": 0.35\n      }\n    ],\n    \"recommendations\": [\n      \"Consider redistributing 2 ambulances from Gampaha to Colombo\",\n      \"Medical team availability is sufficient for predicted demand\"\n    ]\n  }\n}\n</code></pre>"},{"location":"api/resources/#resource-types","title":"Resource Types","text":""},{"location":"api/resources/#vehicles","title":"Vehicles","text":"<ul> <li>Ambulances: Patient transport with medical equipment</li> <li>Fire Trucks: Fire suppression and rescue operations</li> <li>Rescue Vehicles: Specialized rescue equipment transport</li> <li>Command Vehicles: Mobile command centers</li> </ul>"},{"location":"api/resources/#medical-supplies","title":"Medical Supplies","text":"<ul> <li>Emergency Kits: First aid and trauma supplies</li> <li>Medications: Emergency pharmaceuticals</li> <li>Medical Equipment: Portable medical devices</li> <li>PPE: Personal protective equipment</li> </ul>"},{"location":"api/resources/#personnel","title":"Personnel","text":"<ul> <li>Medical Teams: Doctors, nurses, paramedics</li> <li>Rescue Teams: Search and rescue specialists</li> <li>Technical Teams: Engineers, utility specialists</li> <li>Support Staff: Logistics and coordination personnel</li> </ul>"},{"location":"api/resources/#equipment","title":"Equipment","text":"<ul> <li>Communication: Radios, satellite phones</li> <li>Search &amp; Rescue: Specialized rescue tools</li> <li>Shelter: Temporary housing materials</li> <li>Power: Generators, lighting equipment</li> </ul>"},{"location":"api/resources/#real-time-updates","title":"Real-time Updates","text":"<p>Resources support real-time status updates through WebSocket connections:</p> <pre><code>// Subscribe to resource updates\nconst socket = new WebSocket('ws://localhost:8000/ws/resources');\n\nsocket.onmessage = (event) =&gt; {\n  const update = JSON.parse(event.data);\n  console.log('Resource update:', update);\n};\n\n// Example update message\n{\n  \"type\": \"resource_status_change\",\n  \"resource_id\": \"resource_001\",\n  \"old_status\": \"available\",\n  \"new_status\": \"allocated\",\n  \"timestamp\": \"2024-01-15T11:00:00Z\",\n  \"allocation_details\": {\n    \"request_id\": \"req_789\",\n    \"estimated_duration\": \"6 hours\"\n  }\n}\n</code></pre>"},{"location":"api/resources/#integration-with-ai-agents","title":"Integration with AI Agents","text":"<p>Resources are automatically managed by AI agents for optimal allocation:</p>"},{"location":"api/resources/#intelligent-allocation","title":"Intelligent Allocation","text":"<ul> <li>Demand Prediction: AI predicts resource needs based on historical data</li> <li>Optimization: Automatic resource allocation optimization</li> <li>Rebalancing: Dynamic resource redistribution</li> </ul>"},{"location":"api/resources/#performance-monitoring","title":"Performance Monitoring","text":"<ul> <li>Utilization Tracking: Monitor resource usage patterns</li> <li>Efficiency Analysis: Identify optimization opportunities</li> <li>Predictive Maintenance: Anticipate equipment maintenance needs</li> </ul>"},{"location":"api/resources/#error-handling","title":"Error Handling","text":"<p>Common error responses:</p>"},{"location":"api/resources/#resource-not-found","title":"Resource Not Found","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"RESOURCE_NOT_FOUND\",\n    \"message\": \"Resource with ID 'resource_001' not found\",\n    \"details\": {\n      \"resource_id\": \"resource_001\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/resources/#resource-already-allocated","title":"Resource Already Allocated","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"RESOURCE_ALREADY_ALLOCATED\",\n    \"message\": \"Resource is currently allocated to another request\",\n    \"details\": {\n      \"current_allocation\": {\n        \"request_id\": \"req_456\",\n        \"estimated_completion\": \"2024-01-15T16:00:00Z\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api/resources/#insufficient-capacity","title":"Insufficient Capacity","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"INSUFFICIENT_CAPACITY\",\n    \"message\": \"Resource does not meet capacity requirements\",\n    \"details\": {\n      \"required_capacity\": 5,\n      \"available_capacity\": 2\n    }\n  }\n}\n</code></pre>"},{"location":"api/resources/#best-practices","title":"Best Practices","text":""},{"location":"api/resources/#resource-management","title":"Resource Management","text":"<ul> <li>Regular Updates: Keep resource status current</li> <li>Capacity Planning: Maintain adequate resource reserves</li> <li>Geographic Distribution: Ensure resources are strategically located</li> <li>Maintenance Scheduling: Plan maintenance during low-demand periods</li> </ul>"},{"location":"api/resources/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Caching: Cache frequently accessed resource data</li> <li>Indexing: Use location-based indexing for quick searches</li> <li>Batch Operations: Group resource updates when possible</li> <li>Load Balancing: Distribute resource queries across multiple servers</li> </ul>"},{"location":"api/resources/#security-considerations","title":"Security Considerations","text":"<ul> <li>Access Control: Restrict resource allocation to authorized users</li> <li>Audit Logging: Track all resource allocation changes</li> <li>Data Validation: Validate resource status updates</li> <li>Rate Limiting: Prevent abuse of resource APIs</li> </ul>"},{"location":"api/tasks/","title":"Tasks API","text":"<p>Manage tasks created from emergency requests and assigned to volunteers and first responders.</p>"},{"location":"api/tasks/#overview","title":"\ud83d\udccb Overview","text":"<p>The Tasks API handles the operational workflow of disaster response:</p> <ul> <li>Task Creation - Automatic generation from emergency requests</li> <li>Assignment - AI-powered matching with responders</li> <li>Progress Tracking - Real-time status updates</li> <li>Resource Management - Track resource allocation and usage</li> <li>Completion - Task closure and feedback collection</li> </ul>"},{"location":"api/tasks/#task-lifecycle","title":"\ud83d\udd04 Task Lifecycle","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; created: Task generated from request\n    created --&gt; available: Ready for assignment\n    available --&gt; assigned: Responder accepts\n    assigned --&gt; in_progress: Work started\n    in_progress --&gt; review: Submitted for review\n    in_progress --&gt; completed: Directly completed\n    review --&gt; completed: Approved\n    review --&gt; in_progress: Needs revision\n    completed --&gt; [*]\n\n    created --&gt; cancelled: Request cancelled\n    available --&gt; cancelled: No responders\n    assigned --&gt; cancelled: Responder unavailable\n    cancelled --&gt; [*]</code></pre>"},{"location":"api/tasks/#task-model","title":"\ud83d\udccb Task Model","text":"<pre><code>{\n  \"id\": \"task-550e8400-e29b-41d4-a716-446655440000\",\n  \"title\": \"Medical Emergency Response - Elderly Care\",\n  \"description\": \"Provide immediate medical assistance to elderly individual who has fallen\",\n  \"task_type\": \"medical_response\",\n  \"status\": \"in_progress\",\n  \"priority\": \"high\",\n  \"request_id\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"assigned_to\": {\n    \"user_id\": \"responder-123\",\n    \"full_name\": \"Dr. Jane Smith\",\n    \"role\": \"first_responder\",\n    \"specializations\": [\"emergency_medicine\", \"geriatric_care\"],\n    \"assigned_at\": \"2025-06-04T10:30:00Z\"\n  },\n  \"location\": {\n    \"address\": \"123 Main St, City, State 12345\",\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006,\n    \"accessibility_info\": \"Third floor, elevator available\"\n  },\n  \"estimated_duration\": 60,\n  \"actual_duration\": null,\n  \"required_skills\": [\"emergency_medical\", \"patient_care\"],\n  \"required_resources\": [\n    {\n      \"resource_type\": \"medical_supplies\",\n      \"items\": [\"first_aid_kit\", \"oxygen_tank\", \"stretcher\"],\n      \"allocated\": true,\n      \"allocation_id\": \"alloc-789\"\n    }\n  ],\n  \"contact_info\": {\n    \"primary\": \"+1234567890\",\n    \"emergency\": \"+1987654321\",\n    \"notes\": \"Contact John Doe (neighbor) if patient unresponsive\"\n  },\n  \"checklist\": [\n    {\n      \"id\": \"check-1\",\n      \"item\": \"Assess patient vital signs\",\n      \"completed\": true,\n      \"completed_at\": \"2025-06-04T10:45:00Z\",\n      \"notes\": \"Stable vital signs recorded\"\n    },\n    {\n      \"id\": \"check-2\",\n      \"item\": \"Administer first aid if needed\",\n      \"completed\": false,\n      \"notes\": null\n    },\n    {\n      \"id\": \"check-3\",\n      \"item\": \"Coordinate with emergency services\",\n      \"completed\": false,\n      \"notes\": null\n    }\n  ],\n  \"progress_updates\": [\n    {\n      \"timestamp\": \"2025-06-04T10:35:00Z\",\n      \"update\": \"Arrived on scene, patient conscious and responsive\",\n      \"location\": \"On-site\",\n      \"photo_url\": \"/uploads/tasks/progress-photo-1.jpg\"\n    }\n  ],\n  \"ai_guidance\": {\n    \"recommended_actions\": [\n      \"Check for head injuries\",\n      \"Monitor for signs of shock\",\n      \"Document all vital signs\"\n    ],\n    \"safety_reminders\": [\n      \"Ensure scene safety before approaching\",\n      \"Use proper lifting techniques\"\n    ],\n    \"protocol_reference\": \"Emergency Response Protocol ERP-001\"\n  },\n  \"created_at\": \"2025-06-04T10:20:00Z\",\n  \"updated_at\": \"2025-06-04T10:45:00Z\",\n  \"started_at\": \"2025-06-04T10:35:00Z\",\n  \"completed_at\": null,\n  \"due_date\": \"2025-06-04T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/tasks/#endpoints","title":"\ud83d\udccb Endpoints","text":""},{"location":"api/tasks/#get-available-tasks","title":"Get Available Tasks","text":"<p>Retrieve tasks available for assignment.</p> <pre><code>GET /tasks/available?skills=medical&amp;location=nearby&amp;limit=10\nAuthorization: Bearer {token}\n</code></pre> <p>Query Parameters:</p> Parameter Type Description Default <code>skills</code> array Required skills filter all <code>location</code> string Location preference all <code>radius</code> integer Search radius (km) 50 <code>priority</code> string Priority filter all <code>task_type</code> string Task type filter all <code>estimated_duration</code> integer Max duration (minutes) all <code>limit</code> integer Results limit 20 <code>offset</code> integer Page offset 0 <p>Response (200 OK):</p> <pre><code>{\n  \"tasks\": [\n    {\n      \"id\": \"task-123\",\n      \"title\": \"Medical Emergency Response\",\n      \"task_type\": \"medical_response\",\n      \"priority\": \"high\",\n      \"estimated_duration\": 60,\n      \"location\": {\n        \"address\": \"123 Main St\",\n        \"distance_km\": 2.3\n      },\n      \"required_skills\": [\"emergency_medical\"],\n      \"created_at\": \"2025-06-04T10:20:00Z\",\n      \"due_date\": \"2025-06-04T12:00:00Z\",\n      \"match_score\": 0.95\n    }\n  ],\n  \"total\": 15,\n  \"user_location\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006\n  }\n}\n</code></pre>"},{"location":"api/tasks/#accept-task","title":"Accept Task","text":"<p>Accept an available task assignment.</p> <pre><code>POST /tasks/{task_id}/accept\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"estimated_arrival\": \"2025-06-04T10:45:00Z\",\n  \"notes\": \"En route with medical equipment\",\n  \"confirm_skills\": [\"emergency_medical\", \"patient_care\"],\n  \"confirm_resources\": [\"first_aid_kit\", \"oxygen_tank\"]\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"task-123\",\n  \"status\": \"assigned\",\n  \"assigned_to\": {\n    \"user_id\": \"current-user-id\",\n    \"full_name\": \"Dr. Jane Smith\",\n    \"role\": \"first_responder\"\n  },\n  \"assigned_at\": \"2025-06-04T10:30:00Z\",\n  \"estimated_arrival\": \"2025-06-04T10:45:00Z\",\n  \"contact_instructions\": \"Call primary contact upon arrival\"\n}\n</code></pre>"},{"location":"api/tasks/#get-my-tasks","title":"Get My Tasks","text":"<p>Retrieve tasks assigned to current user.</p> <pre><code>GET /tasks/my-tasks?status=active\nAuthorization: Bearer {token}\n</code></pre> <p>Query Parameters:</p> <ul> <li><code>status</code>: Filter by status (active, completed, all)</li> <li><code>date_from</code>: Start date filter</li> <li><code>date_to</code>: End date filter</li> </ul> <p>Response (200 OK):</p> <pre><code>{\n  \"active_tasks\": [\n    {\n      \"id\": \"task-123\",\n      \"title\": \"Medical Emergency Response\",\n      \"status\": \"in_progress\",\n      \"priority\": \"high\",\n      \"progress\": 60,\n      \"location\": \"123 Main St\",\n      \"started_at\": \"2025-06-04T10:35:00Z\",\n      \"due_date\": \"2025-06-04T12:00:00Z\"\n    }\n  ],\n  \"completed_today\": 3,\n  \"total_points_earned\": 245\n}\n</code></pre>"},{"location":"api/tasks/#get-task-details","title":"Get Task Details","text":"<p>Retrieve detailed information about a specific task.</p> <pre><code>GET /tasks/{task_id}\nAuthorization: Bearer {token}\n</code></pre> <p>Response (200 OK):</p> <p>Returns complete task model as shown above.</p>"},{"location":"api/tasks/#update-task-progress","title":"Update Task Progress","text":"<p>Update task progress and status.</p> <pre><code>PUT /tasks/{task_id}/progress\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"status\": \"in_progress\",\n  \"progress_percentage\": 60,\n  \"completed_checklist_items\": [\"check-1\"],\n  \"notes\": \"Patient stabilized, awaiting ambulance\",\n  \"location_update\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.006,\n    \"timestamp\": \"2025-06-04T10:45:00Z\"\n  },\n  \"resource_usage\": [\n    {\n      \"resource_id\": \"first_aid_kit_001\",\n      \"quantity_used\": 1,\n      \"notes\": \"Used bandages and antiseptic\"\n    }\n  ]\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"task-123\",\n  \"status\": \"in_progress\",\n  \"progress_percentage\": 60,\n  \"updated_at\": \"2025-06-04T10:45:00Z\",\n  \"next_actions\": [\n    \"Continue monitoring patient\",\n    \"Prepare for ambulance arrival\"\n  ]\n}\n</code></pre>"},{"location":"api/tasks/#add-progress-photo","title":"Add Progress Photo","text":"<p>Upload progress photos for documentation.</p> <pre><code>POST /tasks/{task_id}/photos\nAuthorization: Bearer {token}\nContent-Type: multipart/form-data\n</code></pre> <p>Form Data:</p> <ul> <li><code>photo</code>: Image file (max 5MB)</li> <li><code>description</code>: Photo description</li> <li><code>timestamp</code>: When photo was taken (optional)</li> </ul> <p>Response (201 Created):</p> <pre><code>{\n  \"photo_id\": \"photo-789\",\n  \"url\": \"/uploads/tasks/task-123/progress-photo-1.jpg\",\n  \"description\": \"Patient condition after treatment\",\n  \"timestamp\": \"2025-06-04T10:45:00Z\",\n  \"uploaded_at\": \"2025-06-04T10:47:00Z\"\n}\n</code></pre>"},{"location":"api/tasks/#complete-task","title":"Complete Task","text":"<p>Mark task as completed and provide summary.</p> <pre><code>POST /tasks/{task_id}/complete\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"completion_notes\": \"Patient successfully treated and transported to hospital\",\n  \"outcome\": \"successful\",\n  \"duration_minutes\": 75,\n  \"resources_used\": [\n    {\n      \"resource_type\": \"medical_supplies\",\n      \"items_used\": [\"bandages\", \"antiseptic\", \"oxygen_mask\"],\n      \"quantities\": [3, 1, 1]\n    }\n  ],\n  \"follow_up_required\": true,\n  \"follow_up_notes\": \"Monitor patient recovery status\",\n  \"feedback\": {\n    \"difficulty_rating\": 3,\n    \"preparation_adequacy\": 5,\n    \"resource_adequacy\": 4,\n    \"suggestions\": \"Could use additional stretcher equipment\"\n  }\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"id\": \"task-123\",\n  \"status\": \"completed\",\n  \"completed_at\": \"2025-06-04T11:50:00Z\",\n  \"actual_duration\": 75,\n  \"points_earned\": 50,\n  \"completion_summary\": {\n    \"outcome\": \"successful\",\n    \"resources_consumed\": 3,\n    \"follow_up_id\": \"follow-456\"\n  }\n}\n</code></pre>"},{"location":"api/tasks/#request-help","title":"Request Help","text":"<p>Request assistance or escalate task.</p> <pre><code>POST /tasks/{task_id}/request-help\nAuthorization: Bearer {token}\nContent-Type: application/json\n</code></pre> <p>Request Body:</p> <pre><code>{\n  \"help_type\": \"additional_responder\",\n  \"urgency\": \"high\",\n  \"description\": \"Need additional medical personnel - patient condition deteriorating\",\n  \"skills_needed\": [\"advanced_life_support\"],\n  \"estimated_response_time\": 15\n}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"help_request_id\": \"help-789\",\n  \"status\": \"escalated\",\n  \"additional_responders_notified\": 3,\n  \"estimated_arrival\": \"2025-06-04T11:15:00Z\"\n}\n</code></pre>"},{"location":"api/tasks/#get-task-statistics","title":"Get Task Statistics","text":"<p>Get performance statistics for tasks.</p> <pre><code>GET /tasks/stats?period=30d&amp;user_id=current\nAuthorization: Bearer {token}\n</code></pre> <p>Response (200 OK):</p> <pre><code>{\n  \"period\": \"30d\",\n  \"total_tasks\": 25,\n  \"completed_tasks\": 23,\n  \"completion_rate\": 0.92,\n  \"average_duration\": 45.5,\n  \"total_points\": 1150,\n  \"performance_metrics\": {\n    \"response_time_avg\": 8.2,\n    \"task_success_rate\": 0.96,\n    \"feedback_rating\": 4.7\n  },\n  \"task_types\": {\n    \"medical_response\": 12,\n    \"rescue_operation\": 8,\n    \"supply_delivery\": 5\n  },\n  \"recognition\": {\n    \"badges_earned\": [\"medical_expert\", \"rapid_responder\"],\n    \"rank\": \"senior_volunteer\",\n    \"next_badge_progress\": 0.7\n  }\n}\n</code></pre>"},{"location":"api/tasks/#ai-task-management","title":"\ud83e\udd16 AI Task Management","text":""},{"location":"api/tasks/#intelligent-assignment","title":"Intelligent Assignment","text":"<p>AI considers multiple factors for task assignment:</p> <pre><code>{\n  \"assignment_factors\": {\n    \"skill_match\": 0.95,\n    \"location_proximity\": 0.88,\n    \"availability\": 1.0,\n    \"workload_balance\": 0.92,\n    \"past_performance\": 0.94,\n    \"resource_access\": 0.9\n  },\n  \"overall_match_score\": 0.93,\n  \"confidence\": \"high\",\n  \"alternative_assignees\": [\"user-456\", \"user-789\"]\n}\n</code></pre>"},{"location":"api/tasks/#smart-recommendations","title":"Smart Recommendations","text":"<pre><code>{\n  \"ai_recommendations\": {\n    \"optimal_route\": {\n      \"duration\": 12,\n      \"distance\": 3.2,\n      \"waypoints\": [\"resource_depot\", \"task_location\"]\n    },\n    \"resource_suggestions\": [\"portable_defibrillator\"],\n    \"preparation_tips\": [\n      \"Review patient medical history if available\",\n      \"Prepare for potential transport needs\"\n    ],\n    \"risk_factors\": [\"elderly_patient\", \"potential_fall_injuries\"],\n    \"success_probability\": 0.91\n  }\n}\n</code></pre>"},{"location":"api/tasks/#gamification","title":"\ud83c\udfc6 Gamification","text":""},{"location":"api/tasks/#point-system","title":"Point System","text":"<p>Tasks award points based on:</p> <ul> <li>Complexity: 10-100 points</li> <li>Urgency: 1.5x multiplier for high priority</li> <li>Quality: Bonus points for excellent feedback</li> <li>Speed: Bonus for quick response</li> </ul>"},{"location":"api/tasks/#achievements","title":"Achievements","text":"<pre><code>{\n  \"achievements\": [\n    {\n      \"id\": \"rapid_responder\",\n      \"name\": \"Rapid Responder\",\n      \"description\": \"Complete 10 high-priority tasks within 30 days\",\n      \"progress\": 8,\n      \"required\": 10,\n      \"points_reward\": 100\n    }\n  ],\n  \"current_streak\": 5,\n  \"longest_streak\": 12,\n  \"next_rank\": \"expert_volunteer\"\n}\n</code></pre>"},{"location":"api/tasks/#permissions","title":"\ud83d\udd12 Permissions","text":""},{"location":"api/tasks/#role-based-task-access","title":"Role-Based Task Access","text":"Operation Volunteer First Responder Admin View available tasks \u2705 \u2705 \u2705 Accept tasks \u2705 \u2705 \u2705 Update progress \u2705 \u2705 \u2705 Request help \u2705 \u2705 \u2705 View all tasks - \u2705 \u2705 Reassign tasks - \u2705 \u2705 Override assignments - - \u2705"},{"location":"api/tasks/#mobile-integration","title":"\ud83d\udcf1 Mobile Integration","text":""},{"location":"api/tasks/#offline-support","title":"Offline Support","text":"<p>Tasks can be cached for offline work:</p> <pre><code>GET /tasks/{task_id}/offline-data\nAuthorization: Bearer {token}\n</code></pre> <p>Returns compressed task data with:</p> <ul> <li>Complete task details</li> <li>Offline maps</li> <li>Contact information</li> <li>Checklist items</li> <li>Resource information</li> </ul>"},{"location":"api/tasks/#related-apis","title":"\ud83d\udcda Related APIs","text":"<ul> <li>Requests API - Parent emergency requests</li> <li>Resources API - Resource allocation</li> <li>Users API - Volunteer management</li> <li>WebSocket API - Real-time updates</li> </ul> <p>Need help with tasks? Check the Task Management Guide and Troubleshooting.</p>"},{"location":"api/users/","title":"Users API","text":"<p>The Users API manages user accounts, profiles, roles, and permissions within the disaster response coordination system.</p>"},{"location":"api/users/#overview","title":"Overview","text":"<p>The system supports multiple user roles with different capabilities:</p> <ul> <li>Affected Individuals: Submit emergency requests and track status</li> <li>Volunteers: Accept and complete response tasks</li> <li>First Responders: Professional emergency response personnel</li> <li>Government Help Centre: Administrative oversight and coordination</li> </ul>"},{"location":"api/users/#endpoints","title":"Endpoints","text":""},{"location":"api/users/#user-registration","title":"User Registration","text":"<pre><code>POST /api/users/register\n</code></pre> <p>Register a new user account with role-based capabilities.</p> <p>Request Body:</p> <pre><code>{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+94771234567\",\n  \"role\": \"volunteer\",\n  \"profile\": {\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"address\": \"Colombo, Sri Lanka\"\n    },\n    \"skills\": [\"first_aid\", \"search_rescue\", \"medical_assistance\"],\n    \"availability\": {\n      \"days\": [\"monday\", \"tuesday\", \"saturday\", \"sunday\"],\n      \"hours\": {\n        \"start\": \"09:00\",\n        \"end\": \"17:00\"\n      }\n    },\n    \"certifications\": [\n      {\n        \"name\": \"First Aid Certification\",\n        \"issuer\": \"Red Cross\",\n        \"expiry_date\": \"2025-06-15\"\n      }\n    ],\n    \"emergency_contact\": {\n      \"name\": \"Jane Doe\",\n      \"phone\": \"+94771234568\",\n      \"relationship\": \"spouse\"\n    }\n  }\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": \"user_001\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"volunteer\",\n    \"status\": \"pending_verification\",\n    \"created_at\": \"2024-01-15T10:30:00Z\",\n    \"verification_token\": \"verify_abc123\"\n  },\n  \"message\": \"Registration successful. Please check your email for verification instructions.\"\n}\n</code></pre>"},{"location":"api/users/#get-user-profile","title":"Get User Profile","text":"<pre><code>GET /api/users/profile\n</code></pre> <p>Get the authenticated user's profile information.</p> <p>Headers:</p> <pre><code>Authorization: Bearer {jwt_token}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"user_001\",\n    \"email\": \"john.doe@example.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+94771234567\",\n    \"role\": \"volunteer\",\n    \"status\": \"active\",\n    \"profile\": {\n      \"location\": {\n        \"latitude\": 6.9271,\n        \"longitude\": 79.8612,\n        \"address\": \"Colombo, Sri Lanka\"\n      },\n      \"skills\": [\"first_aid\", \"search_rescue\", \"medical_assistance\"],\n      \"availability\": {\n        \"status\": \"available\",\n        \"next_available\": \"2024-01-15T12:00:00Z\"\n      },\n      \"performance_metrics\": {\n        \"tasks_completed\": 23,\n        \"success_rate\": 0.96,\n        \"average_response_time\": \"15 minutes\",\n        \"rating\": 4.8\n      },\n      \"certifications\": [\n        {\n          \"name\": \"First Aid Certification\",\n          \"issuer\": \"Red Cross\",\n          \"status\": \"valid\",\n          \"expiry_date\": \"2025-06-15\"\n        }\n      ]\n    },\n    \"settings\": {\n      \"notifications\": {\n        \"email\": true,\n        \"sms\": true,\n        \"push\": true\n      },\n      \"privacy\": {\n        \"location_sharing\": \"emergency_only\",\n        \"profile_visibility\": \"volunteers_only\"\n      }\n    },\n    \"created_at\": \"2024-01-15T10:30:00Z\",\n    \"last_active\": \"2024-01-15T11:45:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/users/#update-user-profile","title":"Update User Profile","text":"<pre><code>PATCH /api/users/profile\n</code></pre> <p>Update user profile information and settings.</p> <p>Request Body:</p> <pre><code>{\n  \"phone\": \"+94771234569\",\n  \"profile\": {\n    \"skills\": [\n      \"first_aid\",\n      \"search_rescue\",\n      \"medical_assistance\",\n      \"translation\"\n    ],\n    \"availability\": {\n      \"days\": [\"monday\", \"tuesday\", \"wednesday\", \"saturday\", \"sunday\"],\n      \"hours\": {\n        \"start\": \"08:00\",\n        \"end\": \"18:00\"\n      }\n    }\n  },\n  \"settings\": {\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false,\n      \"push\": true\n    }\n  }\n}\n</code></pre>"},{"location":"api/users/#list-users-admin-only","title":"List Users (Admin Only)","text":"<pre><code>GET /api/users\n</code></pre> <p>List all users with filtering and pagination options.</p> <p>Query Parameters:</p> <ul> <li><code>role</code> (string, optional): Filter by user role</li> <li><code>status</code> (string, optional): Filter by user status (active, inactive, pending)</li> <li><code>location</code> (string, optional): Filter by location area</li> <li><code>skills</code> (array, optional): Filter by required skills</li> <li><code>page</code> (number, optional): Page number for pagination</li> <li><code>limit</code> (number, optional): Number of users per page</li> </ul> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"user_001\",\n      \"email\": \"john.doe@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"role\": \"volunteer\",\n      \"status\": \"active\",\n      \"location\": \"Colombo, Sri Lanka\",\n      \"skills\": [\"first_aid\", \"search_rescue\"],\n      \"availability\": \"available\",\n      \"performance\": {\n        \"tasks_completed\": 23,\n        \"rating\": 4.8\n      },\n      \"last_active\": \"2024-01-15T11:45:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": 150,\n    \"page\": 1,\n    \"limit\": 20,\n    \"pages\": 8\n  }\n}\n</code></pre>"},{"location":"api/users/#user-verification","title":"User Verification","text":"<pre><code>POST /api/users/verify\n</code></pre> <p>Verify user email address or credentials.</p> <p>Request Body:</p> <pre><code>{\n  \"token\": \"verify_abc123\",\n  \"type\": \"email\"\n}\n</code></pre> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"message\": \"Email verification successful\",\n  \"data\": {\n    \"user_id\": \"user_001\",\n    \"status\": \"active\",\n    \"verified_at\": \"2024-01-15T12:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/users/#change-user-status","title":"Change User Status","text":"<pre><code>PATCH /api/users/{user_id}/status\n</code></pre> <p>Update user account status (admin only).</p> <p>Request Body:</p> <pre><code>{\n  \"status\": \"suspended\",\n  \"reason\": \"Policy violation\",\n  \"notes\": \"Temporary suspension pending review\"\n}\n</code></pre>"},{"location":"api/users/#user-activity-history","title":"User Activity History","text":"<pre><code>GET /api/users/{user_id}/activity\n</code></pre> <p>Get user activity and task history.</p> <p>Response:</p> <pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"user_id\": \"user_001\",\n    \"activity_summary\": {\n      \"total_tasks\": 23,\n      \"completed_tasks\": 22,\n      \"cancelled_tasks\": 1,\n      \"average_completion_time\": \"2.5 hours\",\n      \"total_hours_contributed\": 58.5\n    },\n    \"recent_activities\": [\n      {\n        \"id\": \"activity_001\",\n        \"type\": \"task_completed\",\n        \"task_id\": \"task_456\",\n        \"title\": \"Medical assistance - Kandy\",\n        \"completion_time\": \"2.2 hours\",\n        \"rating_received\": 5,\n        \"timestamp\": \"2024-01-14T16:30:00Z\"\n      },\n      {\n        \"id\": \"activity_002\",\n        \"type\": \"task_accepted\",\n        \"task_id\": \"task_789\",\n        \"title\": \"Supply distribution - Galle\",\n        \"accepted_at\": \"2024-01-15T09:00:00Z\"\n      }\n    ],\n    \"performance_trends\": {\n      \"response_time_trend\": \"improving\",\n      \"completion_rate_trend\": \"stable\",\n      \"rating_trend\": \"improving\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/users/#role-based-features","title":"Role-Based Features","text":""},{"location":"api/users/#affected-individuals","title":"Affected Individuals","text":"<ul> <li>Emergency Requests: Submit and track emergency requests</li> <li>Status Updates: Receive real-time updates on assistance</li> <li>Resource Information: Access available resources in their area</li> <li>Communication: Direct communication with assigned responders</li> </ul>"},{"location":"api/users/#volunteers","title":"Volunteers","text":"<ul> <li>Task Management: Browse, accept, and complete tasks</li> <li>Skill Matching: Receive tasks matching their skills</li> <li>Availability Management: Set availability schedules</li> <li>Performance Tracking: View task completion metrics</li> </ul>"},{"location":"api/users/#first-responders","title":"First Responders","text":"<ul> <li>Professional Dashboard: Advanced coordination tools</li> <li>Resource Management: Access to resource allocation</li> <li>Team Coordination: Collaborate with other responders</li> <li>Incident Command: Lead response operations</li> </ul>"},{"location":"api/users/#government-help-centre","title":"Government Help Centre","text":"<ul> <li>System Administration: User management and oversight</li> <li>Analytics Dashboard: System-wide performance metrics</li> <li>Policy Management: Configure system policies</li> <li>Audit Trails: Access comprehensive system logs</li> </ul>"},{"location":"api/users/#user-status-types","title":"User Status Types","text":""},{"location":"api/users/#account-status","title":"Account Status","text":"<ul> <li>active: Full system access</li> <li>inactive: Limited access, can reactivate</li> <li>suspended: Temporary restriction</li> <li>banned: Permanent restriction</li> <li>pending_verification: Awaiting email/credential verification</li> </ul>"},{"location":"api/users/#availability-status-volunteersresponders","title":"Availability Status (Volunteers/Responders)","text":"<ul> <li>available: Ready to accept tasks</li> <li>busy: Currently assigned to tasks</li> <li>unavailable: Temporarily not available</li> <li>off_duty: Scheduled break or end of shift</li> </ul>"},{"location":"api/users/#notification-preferences","title":"Notification Preferences","text":"<p>Users can configure notification settings:</p> <pre><code>{\n  \"notifications\": {\n    \"email\": {\n      \"enabled\": true,\n      \"types\": [\"task_assignment\", \"emergency_updates\", \"system_alerts\"]\n    },\n    \"sms\": {\n      \"enabled\": true,\n      \"types\": [\"urgent_tasks\", \"emergency_alerts\"]\n    },\n    \"push\": {\n      \"enabled\": true,\n      \"types\": [\"all\"]\n    },\n    \"frequency\": {\n      \"digest\": \"daily\",\n      \"real_time\": [\"urgent\", \"emergency\"]\n    }\n  }\n}\n</code></pre>"},{"location":"api/users/#privacy-and-security","title":"Privacy and Security","text":""},{"location":"api/users/#data-protection","title":"Data Protection","text":"<ul> <li>Personal Information: Secure storage and limited sharing</li> <li>Location Privacy: Configurable location sharing settings</li> <li>Communication Privacy: Encrypted messaging</li> <li>Data Retention: Configurable data retention policies</li> </ul>"},{"location":"api/users/#access-control","title":"Access Control","text":"<ul> <li>Role-Based Permissions: Fine-grained access control</li> <li>API Rate Limiting: Prevent abuse</li> <li>Session Management: Secure session handling</li> <li>Audit Logging: Comprehensive activity tracking</li> </ul>"},{"location":"api/users/#error-handling","title":"Error Handling","text":""},{"location":"api/users/#user-not-found","title":"User Not Found","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"USER_NOT_FOUND\",\n    \"message\": \"User with ID 'user_001' not found\"\n  }\n}\n</code></pre>"},{"location":"api/users/#insufficient-permissions","title":"Insufficient Permissions","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"INSUFFICIENT_PERMISSIONS\",\n    \"message\": \"User does not have permission to perform this action\",\n    \"details\": {\n      \"required_role\": \"government_admin\",\n      \"user_role\": \"volunteer\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/users/#validation-errors","title":"Validation Errors","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Invalid input data\",\n    \"details\": {\n      \"email\": \"Invalid email format\",\n      \"phone\": \"Phone number is required\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/users/#integration-examples","title":"Integration Examples","text":""},{"location":"api/users/#user-registration-flow","title":"User Registration Flow","text":"<pre><code>// Register new volunteer\nconst registerUser = async (userData) =&gt; {\n  try {\n    const response = await fetch(\"/api/users/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    const result = await response.json();\n\n    if (result.success) {\n      // Redirect to verification page\n      window.location.href = `/verify?token=${result.data.verification_token}`;\n    }\n  } catch (error) {\n    console.error(\"Registration failed:\", error);\n  }\n};\n</code></pre>"},{"location":"api/users/#profile-management","title":"Profile Management","text":"<pre><code>// Update user availability\nconst updateAvailability = async (availability) =&gt; {\n  const token = localStorage.getItem(\"auth_token\");\n\n  const response = await fetch(\"/api/users/profile\", {\n    method: \"PATCH\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      profile: { availability },\n    }),\n  });\n\n  return response.json();\n};\n</code></pre>"},{"location":"api/users/#best-practices","title":"Best Practices","text":""},{"location":"api/users/#user-management","title":"User Management","text":"<ul> <li>Regular Verification: Periodic credential verification</li> <li>Performance Monitoring: Track user engagement and performance</li> <li>Feedback Collection: Gather user feedback for improvements</li> <li>Training Programs: Provide ongoing user training</li> </ul>"},{"location":"api/users/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>Strong Authentication: Enforce strong password policies</li> <li>Regular Audits: Monitor user activity for suspicious behavior</li> <li>Data Minimization: Collect only necessary user information</li> <li>Secure Communications: Use encrypted channels for sensitive data</li> </ul>"},{"location":"api/websocket/","title":"WebSocket API","text":"<p>The WebSocket API provides real-time communication capabilities for live updates, notifications, and coordination between users and AI agents.</p>"},{"location":"api/websocket/#overview","title":"Overview","text":"<p>WebSocket connections enable:</p> <ul> <li>Real-time Notifications: Instant updates on emergency requests, task assignments, and system alerts</li> <li>Live Coordination: Real-time communication between responders and affected individuals</li> <li>Status Updates: Live tracking of resource allocation and task progress</li> <li>AI Agent Integration: Direct communication with AI agents for automated responses</li> </ul>"},{"location":"api/websocket/#connection-management","title":"Connection Management","text":""},{"location":"api/websocket/#establishing-connection","title":"Establishing Connection","text":"<pre><code>// Connect to WebSocket with authentication\nconst token = localStorage.getItem(\"auth_token\");\nconst socket = new WebSocket(`ws://localhost:8000/ws?token=${token}`);\n\nsocket.onopen = (event) =&gt; {\n  console.log(\"WebSocket connected\");\n  // Send initial subscription preferences\n  socket.send(\n    JSON.stringify({\n      type: \"subscribe\",\n      channels: [\"emergency_alerts\", \"task_updates\", \"resource_changes\"],\n    })\n  );\n};\n\nsocket.onmessage = (event) =&gt; {\n  const message = JSON.parse(event.data);\n  handleWebSocketMessage(message);\n};\n\nsocket.onclose = (event) =&gt; {\n  console.log(\"WebSocket disconnected:\", event.code, event.reason);\n  // Implement reconnection logic\n  setTimeout(reconnectWebSocket, 1000);\n};\n\nsocket.onerror = (error) =&gt; {\n  console.error(\"WebSocket error:\", error);\n};\n</code></pre>"},{"location":"api/websocket/#authentication","title":"Authentication","text":"<p>WebSocket connections require authentication via JWT token:</p> <pre><code>// Option 1: Query parameter\nconst socket = new WebSocket(`ws://localhost:8000/ws?token=${jwt_token}`);\n\n// Option 2: Initial message after connection\nsocket.onopen = () =&gt; {\n  socket.send(\n    JSON.stringify({\n      type: \"authenticate\",\n      token: jwt_token,\n    })\n  );\n};\n</code></pre>"},{"location":"api/websocket/#message-types","title":"Message Types","text":""},{"location":"api/websocket/#subscription-management","title":"Subscription Management","text":"<pre><code>// Subscribe to specific channels\n{\n  \"type\": \"subscribe\",\n  \"channels\": [\"emergency_alerts\", \"task_updates\", \"resource_changes\"],\n  \"filters\": {\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"radius\": 10000  // 10km radius\n    },\n    \"priority\": [\"high\", \"critical\"]\n  }\n}\n\n// Unsubscribe from channels\n{\n  \"type\": \"unsubscribe\",\n  \"channels\": [\"resource_changes\"]\n}\n\n// Get active subscriptions\n{\n  \"type\": \"get_subscriptions\"\n}\n</code></pre>"},{"location":"api/websocket/#emergency-alerts","title":"Emergency Alerts","text":"<p>Real-time emergency notifications:</p> <pre><code>// Incoming emergency alert\n{\n  \"type\": \"emergency_alert\",\n  \"data\": {\n    \"alert_id\": \"alert_001\",\n    \"request_id\": \"req_789\",\n    \"severity\": \"critical\",\n    \"category\": \"medical_emergency\",\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"address\": \"123 Main Street, Colombo\"\n    },\n    \"description\": \"Cardiac arrest - immediate medical assistance required\",\n    \"required_skills\": [\"medical_assistance\", \"cpr\"],\n    \"estimated_response_time\": 300,  // seconds\n    \"contact\": {\n      \"name\": \"Emergency Dispatcher\",\n      \"phone\": \"+94112345678\"\n    },\n    \"timestamp\": \"2024-01-15T12:00:00Z\"\n  }\n}\n\n// Acknowledge emergency alert\n{\n  \"type\": \"acknowledge_alert\",\n  \"alert_id\": \"alert_001\",\n  \"user_id\": \"user_001\",\n  \"response\": \"accepting\",  // accepting, declining, unavailable\n  \"estimated_arrival\": \"2024-01-15T12:15:00Z\"\n}\n</code></pre>"},{"location":"api/websocket/#task-updates","title":"Task Updates","text":"<p>Real-time task status changes:</p> <pre><code>// Task assignment notification\n{\n  \"type\": \"task_assigned\",\n  \"data\": {\n    \"task_id\": \"task_456\",\n    \"assigned_to\": \"user_001\",\n    \"title\": \"Medical Supply Distribution\",\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"address\": \"Community Center, Kandy\"\n    },\n    \"priority\": \"high\",\n    \"deadline\": \"2024-01-15T18:00:00Z\",\n    \"contact\": {\n      \"name\": \"Site Coordinator\",\n      \"phone\": \"+94771234567\"\n    },\n    \"instructions\": \"Distribute medical supplies to affected families\",\n    \"resources_allocated\": [\"supply_truck_001\", \"medical_kit_025\"]\n  }\n}\n\n// Task status update\n{\n  \"type\": \"task_status_update\",\n  \"data\": {\n    \"task_id\": \"task_456\",\n    \"old_status\": \"assigned\",\n    \"new_status\": \"in_progress\",\n    \"updated_by\": \"user_001\",\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612\n    },\n    \"progress_notes\": \"Arrived at location, beginning distribution\",\n    \"timestamp\": \"2024-01-15T13:30:00Z\"\n  }\n}\n\n// Task completion notification\n{\n  \"type\": \"task_completed\",\n  \"data\": {\n    \"task_id\": \"task_456\",\n    \"completed_by\": \"user_001\",\n    \"completion_time\": \"2024-01-15T16:45:00Z\",\n    \"duration\": \"3.25 hours\",\n    \"outcome\": \"successful\",\n    \"families_assisted\": 25,\n    \"supplies_distributed\": {\n      \"medical_kits\": 25,\n      \"water_bottles\": 100,\n      \"emergency_food\": 25\n    },\n    \"feedback\": \"All families received necessary supplies. No additional medical needs identified.\",\n    \"photos\": [\"task_456_completion_1.jpg\", \"task_456_completion_2.jpg\"]\n  }\n}\n</code></pre>"},{"location":"api/websocket/#resource-updates","title":"Resource Updates","text":"<p>Real-time resource status changes:</p> <pre><code>// Resource availability change\n{\n  \"type\": \"resource_status_change\",\n  \"data\": {\n    \"resource_id\": \"ambulance_007\",\n    \"resource_type\": \"ambulance\",\n    \"old_status\": \"available\",\n    \"new_status\": \"allocated\",\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612\n    },\n    \"allocated_to\": {\n      \"request_id\": \"req_789\",\n      \"task_id\": \"task_123\"\n    },\n    \"estimated_duration\": \"2 hours\",\n    \"contact\": {\n      \"driver\": \"John Silva\",\n      \"phone\": \"+94771234567\"\n    },\n    \"timestamp\": \"2024-01-15T14:00:00Z\"\n  }\n}\n\n// New resource available\n{\n  \"type\": \"resource_available\",\n  \"data\": {\n    \"resource_id\": \"medical_team_alpha\",\n    \"resource_type\": \"medical_team\",\n    \"location\": {\n      \"latitude\": 6.9271,\n      \"longitude\": 79.8612,\n      \"address\": \"Colombo General Hospital\"\n    },\n    \"capabilities\": [\"trauma\", \"pediatric\", \"cardiac\"],\n    \"team_size\": 4,\n    \"equipment\": [\"defibrillator\", \"trauma_kit\", \"medications\"],\n    \"availability_window\": {\n      \"start\": \"2024-01-15T14:00:00Z\",\n      \"end\": \"2024-01-15T22:00:00Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api/websocket/#ai-agent-communication","title":"AI Agent Communication","text":"<p>Direct communication with AI agents:</p> <pre><code>// Send message to AI agent\n{\n  \"type\": \"ai_agent_request\",\n  \"agent_type\": \"coordination_agent\",\n  \"request\": {\n    \"action\": \"optimize_resource_allocation\",\n    \"parameters\": {\n      \"region\": \"colombo_district\",\n      \"emergency_type\": \"flood\",\n      \"priority\": \"high\"\n    }\n  }\n}\n\n// AI agent response\n{\n  \"type\": \"ai_agent_response\",\n  \"agent_type\": \"coordination_agent\",\n  \"response\": {\n    \"status\": \"completed\",\n    \"recommendations\": [\n      {\n        \"action\": \"reallocate_ambulances\",\n        \"from\": \"kandy_district\",\n        \"to\": \"colombo_district\",\n        \"quantity\": 3,\n        \"reasoning\": \"Higher demand in Colombo due to flood impact\"\n      }\n    ],\n    \"resource_optimization\": {\n      \"efficiency_gain\": \"23%\",\n      \"response_time_improvement\": \"12 minutes average\"\n    }\n  }\n}\n\n// AI agent proactive notification\n{\n  \"type\": \"ai_agent_alert\",\n  \"agent_type\": \"prediction_agent\",\n  \"alert\": {\n    \"type\": \"resource_shortage_prediction\",\n    \"severity\": \"medium\",\n    \"location\": \"galle_district\",\n    \"resource_type\": \"medical_supplies\",\n    \"predicted_shortage_time\": \"2024-01-15T20:00:00Z\",\n    \"confidence\": 0.85,\n    \"recommended_actions\": [\n      \"Dispatch additional medical supplies from Colombo\",\n      \"Activate volunteer medical teams in the area\"\n    ]\n  }\n}\n</code></pre>"},{"location":"api/websocket/#chat-and-communication","title":"Chat and Communication","text":"<p>Real-time messaging between users:</p> <pre><code>// Send chat message\n{\n  \"type\": \"chat_message\",\n  \"to\": \"user_002\",\n  \"message\": \"Arriving at location in 10 minutes. Do you need additional medical supplies?\",\n  \"context\": {\n    \"task_id\": \"task_456\",\n    \"location\": \"kandy_site_alpha\"\n  }\n}\n\n// Receive chat message\n{\n  \"type\": \"chat_message_received\",\n  \"from\": \"user_001\",\n  \"from_name\": \"John Silva\",\n  \"message\": \"Arriving at location in 10 minutes. Do you need additional medical supplies?\",\n  \"context\": {\n    \"task_id\": \"task_456\",\n    \"location\": \"kandy_site_alpha\"\n  },\n  \"timestamp\": \"2024-01-15T15:30:00Z\"\n}\n\n// Broadcast message to group\n{\n  \"type\": \"group_message\",\n  \"group\": \"task_456_team\",\n  \"message\": \"Weather update: Heavy rain expected in 2 hours. Prioritize indoor distributions.\",\n  \"priority\": \"high\",\n  \"sender\": {\n    \"id\": \"user_admin\",\n    \"name\": \"Command Center\",\n    \"role\": \"coordinator\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#channel-types","title":"Channel Types","text":""},{"location":"api/websocket/#emergency_alerts","title":"emergency_alerts","text":"<ul> <li>Critical emergency notifications</li> <li>Immediate response required</li> <li>Location-based filtering available</li> </ul>"},{"location":"api/websocket/#task_updates","title":"task_updates","text":"<ul> <li>Task assignments and status changes</li> <li>Progress notifications</li> <li>Completion confirmations</li> </ul>"},{"location":"api/websocket/#resource_changes","title":"resource_changes","text":"<ul> <li>Resource availability updates</li> <li>Allocation notifications</li> <li>Capacity changes</li> </ul>"},{"location":"api/websocket/#ai_agent_updates","title":"ai_agent_updates","text":"<ul> <li>AI agent recommendations</li> <li>Automated alerts and predictions</li> <li>System optimization notifications</li> </ul>"},{"location":"api/websocket/#chat_messages","title":"chat_messages","text":"<ul> <li>Direct user communication</li> <li>Group messaging</li> <li>Coordination messages</li> </ul>"},{"location":"api/websocket/#system_alerts","title":"system_alerts","text":"<ul> <li>System maintenance notifications</li> <li>Security alerts</li> <li>Performance warnings</li> </ul>"},{"location":"api/websocket/#connection-states","title":"Connection States","text":""},{"location":"api/websocket/#connected","title":"Connected","text":"<pre><code>{\n  \"type\": \"connection_established\",\n  \"user_id\": \"user_001\",\n  \"session_id\": \"session_abc123\",\n  \"capabilities\": [\"chat\", \"notifications\", \"ai_agents\"],\n  \"timestamp\": \"2024-01-15T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/websocket/#authenticated","title":"Authenticated","text":"<pre><code>{\n  \"type\": \"authentication_success\",\n  \"user_id\": \"user_001\",\n  \"role\": \"volunteer\",\n  \"permissions\": [\"task_updates\", \"emergency_alerts\", \"chat\"],\n  \"session_expires\": \"2024-01-15T20:00:00Z\"\n}\n</code></pre>"},{"location":"api/websocket/#error-handling","title":"Error Handling","text":""},{"location":"api/websocket/#authentication-errors","title":"Authentication Errors","text":"<pre><code>{\n  \"type\": \"error\",\n  \"code\": \"AUTHENTICATION_FAILED\",\n  \"message\": \"Invalid or expired token\",\n  \"details\": {\n    \"token_status\": \"expired\",\n    \"expiry_time\": \"2024-01-15T10:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#subscription-errors","title":"Subscription Errors","text":"<pre><code>{\n  \"type\": \"error\",\n  \"code\": \"SUBSCRIPTION_FAILED\",\n  \"message\": \"Invalid channel or insufficient permissions\",\n  \"details\": {\n    \"invalid_channels\": [\"admin_alerts\"],\n    \"required_permission\": \"admin_access\"\n  }\n}\n</code></pre>"},{"location":"api/websocket/#rate-limiting","title":"Rate Limiting","text":"<pre><code>{\n  \"type\": \"error\",\n  \"code\": \"RATE_LIMIT_EXCEEDED\",\n  \"message\": \"Too many messages sent\",\n  \"details\": {\n    \"limit\": 100,\n    \"window\": \"1 minute\",\n    \"retry_after\": 30\n  }\n}\n</code></pre>"},{"location":"api/websocket/#reconnection-strategy","title":"Reconnection Strategy","text":"<pre><code>class WebSocketManager {\n  constructor(url, token) {\n    this.url = url;\n    this.token = token;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n    this.subscriptions = [];\n  }\n\n  connect() {\n    this.socket = new WebSocket(`${this.url}?token=${this.token}`);\n\n    this.socket.onopen = () =&gt; {\n      console.log(\"WebSocket connected\");\n      this.reconnectAttempts = 0;\n      this.resubscribe();\n    };\n\n    this.socket.onclose = () =&gt; {\n      if (this.reconnectAttempts &lt; this.maxReconnectAttempts) {\n        setTimeout(() =&gt; {\n          this.reconnectAttempts++;\n          this.connect();\n        }, this.reconnectDelay * Math.pow(2, this.reconnectAttempts));\n      }\n    };\n  }\n\n  resubscribe() {\n    if (this.subscriptions.length &gt; 0) {\n      this.socket.send(\n        JSON.stringify({\n          type: \"subscribe\",\n          channels: this.subscriptions,\n        })\n      );\n    }\n  }\n}\n</code></pre>"},{"location":"api/websocket/#performance-optimization","title":"Performance Optimization","text":""},{"location":"api/websocket/#message-batching","title":"Message Batching","text":"<pre><code>// Batch multiple updates\n{\n  \"type\": \"batch_update\",\n  \"updates\": [\n    {\n      \"type\": \"task_status_update\",\n      \"data\": { /* task update */ }\n    },\n    {\n      \"type\": \"resource_status_change\",\n      \"data\": { /* resource update */ }\n    }\n  ]\n}\n</code></pre>"},{"location":"api/websocket/#heartbeatping-pong","title":"Heartbeat/Ping-Pong","text":"<pre><code>// Client ping\n{\n  \"type\": \"ping\",\n  \"timestamp\": \"2024-01-15T12:00:00Z\"\n}\n\n// Server pong\n{\n  \"type\": \"pong\",\n  \"timestamp\": \"2024-01-15T12:00:00Z\"\n}\n</code></pre>"},{"location":"api/websocket/#security-considerations","title":"Security Considerations","text":""},{"location":"api/websocket/#message-validation","title":"Message Validation","text":"<ul> <li>All incoming messages are validated against schemas</li> <li>User permissions checked for each channel subscription</li> <li>Rate limiting prevents abuse</li> </ul>"},{"location":"api/websocket/#data-encryption","title":"Data Encryption","text":"<ul> <li>Sensitive data encrypted in transit</li> <li>User-specific channels for private communications</li> <li>Audit logging for security monitoring</li> </ul>"},{"location":"api/websocket/#access-control","title":"Access Control","text":"<ul> <li>Role-based channel access</li> <li>Geographic filtering for location-sensitive data</li> <li>Time-based session management</li> </ul>"},{"location":"api/websocket/#best-practices","title":"Best Practices","text":""},{"location":"api/websocket/#client-implementation","title":"Client Implementation","text":"<ul> <li>Implement exponential backoff for reconnections</li> <li>Handle connection state changes gracefully</li> <li>Store critical messages locally during disconnections</li> <li>Use message acknowledgments for important updates</li> </ul>"},{"location":"api/websocket/#server-implementation","title":"Server Implementation","text":"<ul> <li>Implement proper connection limits</li> <li>Use message queuing for reliability</li> <li>Monitor connection health</li> <li>Implement geographic message routing for scalability</li> </ul>"},{"location":"architecture/ai-agents/","title":"AI Agents Architecture","text":"<p>The Disaster Response Coordination System uses a multi-agent AI workflow built on the AGNO framework to intelligently process emergency requests.</p>"},{"location":"architecture/ai-agents/#agent-workflow-overview","title":"\ud83e\udd16 Agent Workflow Overview","text":"<pre><code>sequenceDiagram\n    participant R as Request\n    participant I as Intake Agent\n    participant P as Prioritization Agent\n    participant A as Assignment Agent\n    participant C as Communication Agent\n    participant S as Stakeholders\n\n    R-&gt;&gt;I: Emergency Request\n    I-&gt;&gt;I: Extract Information&lt;br/&gt;Validate Data&lt;br/&gt;Categorize Needs\n    I-&gt;&gt;P: Processed Request\n    P-&gt;&gt;P: Assess Severity&lt;br/&gt;Calculate Risk Score&lt;br/&gt;Determine Priority\n    P-&gt;&gt;A: Prioritized Request\n    A-&gt;&gt;A: Match Resources&lt;br/&gt;Assign Personnel&lt;br/&gt;Create Tasks\n    A-&gt;&gt;C: Assignment Results\n    C-&gt;&gt;C: Generate Messages&lt;br/&gt;Create Notifications\n    C-&gt;&gt;S: Send Updates</code></pre>"},{"location":"architecture/ai-agents/#individual-agents","title":"\ud83e\udde0 Individual Agents","text":""},{"location":"architecture/ai-agents/#1-intake-agent","title":"1. Intake Agent","text":"<p>Purpose: Process and validate incoming emergency requests</p> <p>Technology:</p> <ul> <li>AGNO Agent with OpenAI GPT-4o-mini</li> <li>Temperature: 0.1 (low for consistent output)</li> <li>Max tokens: 1000</li> </ul> <p>Functions:</p> Information ExtractionLocation ProcessingUrgency Assessment <pre><code>def extract_needs(self, description: str) -&gt; List[str]:\n    \"\"\"Extract needs using AI and keyword matching\"\"\"\n    # AI categorizes into: food, water, medical,\n    # shelter, rescue, transport\n</code></pre> <pre><code>def extract_location(self, text: str) -&gt; Optional[str]:\n    \"\"\"Extract and validate location information\"\"\"\n    # Uses pattern matching and AI validation\n</code></pre> <pre><code>def assess_urgency(self, description: str) -&gt; str:\n    \"\"\"Determine urgency level: critical/high/medium/low\"\"\"\n    # Keyword analysis + AI assessment\n</code></pre> <p>Input/Output:</p> <pre><code>// Input\n{\n  \"title\": \"Medical emergency downtown\",\n  \"description\": \"Person collapsed, needs immediate help\",\n  \"location\": \"Main Street and 1st Ave\"\n}\n\n// Output\n{\n  \"needs\": [\"medical\", \"rescue\"],\n  \"priority\": \"critical\",\n  \"urgency_level\": \"critical\",\n  \"extracted_location\": \"Main Street and 1st Ave\",\n  \"request_type\": \"medical\",\n  \"confidence_score\": 0.95\n}\n</code></pre>"},{"location":"architecture/ai-agents/#2-prioritization-agent","title":"2. Prioritization Agent","text":"<p>Purpose: Assess and prioritize requests based on multiple factors</p> <p>Technology:</p> <ul> <li>AGNO Agent with OpenAI GPT-4o-mini</li> <li>Temperature: 0.2 (low-medium for consistent prioritization)</li> <li>Max tokens: 800</li> </ul> <p>Prioritization Factors:</p> <pre><code>mindmap\n  root((Priority))\n    Severity\n      Life threatening\n      Property damage\n      Environmental impact\n    Resources\n      Availability\n      Distance\n      Capacity\n    Time Sensitivity\n      Immediate response needed\n      Weather conditions\n      Deteriorating situation\n    Population Impact\n      Number affected\n      Vulnerable groups\n      Community resources</code></pre> <p>Functions:</p> Risk AssessmentPriority Scoring <pre><code>def calculate_priority_factors(self, request: Dict, resources: Dict) -&gt; Dict:\n    \"\"\"Calculate comprehensive risk score\"\"\"\n    # Considers severity, resources, time, population\n</code></pre> <pre><code>def prioritize_request(self, request: Dict, resources: Dict) -&gt; Dict:\n    \"\"\"AI-powered priority assignment\"\"\"\n    # Returns priority level and detailed reasoning\n</code></pre> <p>Priority Matrix:</p> Severity Resource Availability Time Sensitivity Final Priority Critical Available Immediate CRITICAL Critical Limited Immediate HIGH High Available Within 1hr HIGH Medium Available Within 6hr MEDIUM Low Any Non-urgent LOW"},{"location":"architecture/ai-agents/#3-assignment-agent","title":"3. Assignment Agent","text":"<p>Purpose: Match requests with appropriate responders and resources</p> <p>Technology:</p> <ul> <li>AGNO Agent with OpenAI GPT-4o-mini</li> <li>Temperature: 0.3 (medium for balanced assignment)</li> <li>Max tokens: 1200</li> </ul> <p>Assignment Logic:</p> <pre><code>flowchart TD\n    A[Prioritized Request] --&gt; B{Medical Emergency?}\n    B --&gt;|Yes| C[Assign Medical Personnel]\n    B --&gt;|No| D{Rescue Needed?}\n    D --&gt;|Yes| E[Assign Rescue Team]\n    D --&gt;|No| F[Assign Volunteers]\n\n    C --&gt; G[Check Resource Availability]\n    E --&gt; G\n    F --&gt; G\n\n    G --&gt; H{Resources Available?}\n    H --&gt;|Yes| I[Create Task Assignment]\n    H --&gt;|No| J[Queue for Resources]\n\n    I --&gt; K[Update Database]\n    J --&gt; K</code></pre> <p>Functions:</p> Personnel MatchingResource AllocationTask Creation <pre><code>def get_available_personnel(self) -&gt; List[Dict]:\n    \"\"\"Get volunteers and responders by skills/availability\"\"\"\n    # Skill matching, location proximity, workload\n</code></pre> <pre><code>def get_available_resources(self) -&gt; Dict:\n    \"\"\"Check resource inventory and availability\"\"\"\n    # Real-time resource tracking\n</code></pre> <pre><code>def create_assignments(self, requests: List[Dict],\n                      personnel: List[Dict],\n                      resources: Dict) -&gt; List[Dict]:\n    \"\"\"AI-powered task assignment optimization\"\"\"\n    # Creates detailed task instructions\n</code></pre> <p>Assignment Output:</p> <pre><code>{\n  \"assignments\": [\n    {\n      \"request_id\": \"req_123\",\n      \"assignee_id\": \"volunteer_456\",\n      \"task_title\": \"Medical Emergency Response\",\n      \"task_description\": \"Respond to medical emergency at Main St\",\n      \"priority\": \"critical\",\n      \"estimated_duration\": \"30 minutes\",\n      \"required_resources\": [{ \"resource_type\": \"medical\", \"quantity\": 1 }],\n      \"special_instructions\": \"Bring first aid kit\",\n      \"contact_info\": \"Emergency contact: 911\"\n    }\n  ]\n}\n</code></pre>"},{"location":"architecture/ai-agents/#4-communication-agent","title":"4. Communication Agent","text":"<p>Purpose: Handle notifications and status updates</p> <p>Technology:</p> <ul> <li>AGNO Agent with OpenAI GPT-4o-mini</li> <li>Temperature: 0.4 (medium for natural communication)</li> <li>Max tokens: 800</li> </ul> <p>Communication Channels:</p> <pre><code>graph LR\n    A[Communication Agent] --&gt; B[Email Notifications]\n    A --&gt; C[SMS Alerts]\n    A --&gt; D[In-App Messages]\n    A --&gt; E[WebSocket Updates]\n\n    B --&gt; F[Task Assignments]\n    B --&gt; G[Status Updates]\n    C --&gt; H[Urgent Alerts]\n    D --&gt; I[Dashboard Messages]\n    E --&gt; J[Real-time Updates]</code></pre> <p>Functions:</p> Message GenerationMulti-channel Delivery <pre><code>def generate_message(self, message_type: str, context: Dict) -&gt; Dict:\n    \"\"\"AI-powered message generation\"\"\"\n    # Creates appropriate messages for different scenarios\n</code></pre> <pre><code>def send_notification(self, notification: Dict) -&gt; bool:\n    \"\"\"Send notifications via multiple channels\"\"\"\n    # Email, SMS, in-app, WebSocket\n</code></pre> <p>Message Types:</p> <ul> <li>Task Assignments: Clear instructions for volunteers/responders</li> <li>Status Updates: Progress reports for affected individuals</li> <li>Resource Alerts: Inventory notifications for administrators</li> <li>System Notifications: Technical updates and escalations</li> </ul>"},{"location":"architecture/ai-agents/#agent-coordination","title":"\ud83d\udd04 Agent Coordination","text":""},{"location":"architecture/ai-agents/#coordinator-class","title":"Coordinator Class","text":"<p>The <code>AgentCoordinator</code> orchestrates the entire workflow:</p> <pre><code>class AgentCoordinator:\n    def __init__(self):\n        self.intake_agent = IntakeAgent()\n        self.prioritization_agent = PrioritizationAgent()\n        self.assignment_agent = AssignmentAgent()\n        self.communication_agent = CommunicationAgent()\n\n    async def process_incident_pipeline(self, incident_data: Dict) -&gt; Dict:\n        \"\"\"Process through all four agents sequentially\"\"\"\n        # 1. Intake processing\n        # 2. Prioritization assessment\n        # 3. Resource assignment\n        # 4. Communication dispatch\n</code></pre>"},{"location":"architecture/ai-agents/#error-handling","title":"Error Handling","text":"<pre><code>graph TD\n    A[Agent Processing] --&gt; B{Error Occurred?}\n    B --&gt;|No| C[Continue Pipeline]\n    B --&gt;|Yes| D[Log Error]\n    D --&gt; E{Recoverable?}\n    E --&gt;|Yes| F[Retry with Fallback]\n    E --&gt;|No| G[Mark as Failed]\n    F --&gt; H[Notify Administrator]\n    G --&gt; H\n    C --&gt; I[Success]\n    H --&gt; I</code></pre>"},{"location":"architecture/ai-agents/#performance-metrics","title":"\ud83d\udcca Performance Metrics","text":"<p>The system tracks agent performance:</p> <pre><code>def get_performance_metrics(self) -&gt; Dict:\n    return {\n        \"total_processed\": 1234,\n        \"success_rate\": 0.95,\n        \"average_response_time\": 2.3,  # seconds\n        \"agent_availability\": {\n            \"intake\": True,\n            \"prioritization\": True,\n            \"assignment\": True,\n            \"communication\": True\n        }\n    }\n</code></pre>"},{"location":"architecture/ai-agents/#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"architecture/ai-agents/#environment-variables","title":"Environment Variables","text":"<pre><code># AI Configuration\nOPENAI_API_KEY=your-openai-api-key\nAGENT_PROCESSING_INTERVAL=30  # seconds\nMAX_CONCURRENT_AGENT_TASKS=5\n\n# Performance Tuning\nINTAKE_TEMPERATURE=0.1\nPRIORITIZATION_TEMPERATURE=0.2\nASSIGNMENT_TEMPERATURE=0.3\nCOMMUNICATION_TEMPERATURE=0.4\n</code></pre>"},{"location":"architecture/ai-agents/#agent-customization","title":"Agent Customization","text":"<p>Each agent can be customized for specific deployment needs:</p> <pre><code># Custom temperature and instructions\nintake_agent = IntakeAgent(\n    temperature=0.05,  # Very low for consistency\n    instructions=\"Custom instructions for specific region\"\n)\n</code></pre>"},{"location":"architecture/ai-agents/#advanced-features","title":"\ud83d\ude80 Advanced Features","text":""},{"location":"architecture/ai-agents/#batch-processing","title":"Batch Processing","text":"<pre><code>async def process_incidents_batch(self, incident_ids: List[str]) -&gt; Dict:\n    \"\"\"Process multiple incidents in parallel\"\"\"\n    # Optimized for high-volume scenarios\n</code></pre>"},{"location":"architecture/ai-agents/#real-time-monitoring","title":"Real-time Monitoring","text":"<pre><code>def get_system_status(self) -&gt; Dict:\n    \"\"\"Real-time agent system status\"\"\"\n    return {\n        \"status\": \"active\",\n        \"active_agents\": [\"intake\", \"prioritization\", \"assignment\", \"communication\"],\n        \"queue_size\": 0,\n        \"last_activity\": \"2024-01-15T10:30:00Z\"\n    }\n</code></pre> <p>Next: Database Schema | API Design</p>"},{"location":"architecture/api/","title":"API Architecture","text":"<p>This document describes the API architecture for the disaster response coordination system, including design principles, endpoint organization, security implementation, and integration patterns.</p>"},{"location":"architecture/api/#api-design-philosophy","title":"API Design Philosophy","text":""},{"location":"architecture/api/#restful-design-principles","title":"RESTful Design Principles","text":"<p>The API follows REST architectural principles with some extensions for real-time capabilities:</p> <ul> <li>Resource-Based URLs: Clear resource identification in URLs</li> <li>HTTP Methods: Proper use of GET, POST, PUT, PATCH, DELETE</li> <li>Stateless Communication: Each request contains all necessary information</li> <li>Cacheable Responses: Appropriate cache headers and strategies</li> <li>Layered System: Clean separation between client and server</li> </ul>"},{"location":"architecture/api/#api-versioning-strategy","title":"API Versioning Strategy","text":"<pre><code>Base URL: https://api.disaster-response.com/v1/\nVersioning: URL-based versioning (/v1/, /v2/, etc.)\nDeprecation: 12-month deprecation policy for major versions\n</code></pre>"},{"location":"architecture/api/#api-architecture-overview","title":"API Architecture Overview","text":"<pre><code>graph TB\n    subgraph \"Client Layer\"\n        WEB[Web Application]\n        MOBILE[Mobile App]\n        THIRD_PARTY[Third-party Clients]\n    end\n\n    subgraph \"API Gateway Layer\"\n        GATEWAY[API Gateway]\n        RATE_LIMIT[Rate Limiting]\n        AUTH[Authentication]\n        TRANSFORM[Request/Response Transform]\n        CACHE[Response Cache]\n    end\n\n    subgraph \"API Services\"\n        USER_API[User Service API]\n        REQUEST_API[Request Service API]\n        TASK_API[Task Service API]\n        RESOURCE_API[Resource Service API]\n        NOTIFICATION_API[Notification Service API]\n        AI_API[AI Agent Service API]\n    end\n\n    subgraph \"Business Logic Layer\"\n        USER_BL[User Business Logic]\n        REQUEST_BL[Request Business Logic]\n        TASK_BL[Task Business Logic]\n        RESOURCE_BL[Resource Business Logic]\n        NOTIFICATION_BL[Notification Business Logic]\n        AI_BL[AI Agent Business Logic]\n    end\n\n    subgraph \"Data Access Layer\"\n        USER_DAL[User Data Access]\n        REQUEST_DAL[Request Data Access]\n        TASK_DAL[Task Data Access]\n        RESOURCE_DAL[Resource Data Access]\n        NOTIFICATION_DAL[Notification Data Access]\n        AI_DAL[AI Data Access]\n    end\n\n    subgraph \"Data Layer\"\n        POSTGRES[(PostgreSQL)]\n        REDIS[(Redis Cache)]\n        SEARCH[(Elasticsearch)]\n    end\n\n    WEB --&gt; GATEWAY\n    MOBILE --&gt; GATEWAY\n    THIRD_PARTY --&gt; GATEWAY\n\n    GATEWAY --&gt; RATE_LIMIT\n    RATE_LIMIT --&gt; AUTH\n    AUTH --&gt; TRANSFORM\n    TRANSFORM --&gt; CACHE\n\n    CACHE --&gt; USER_API\n    CACHE --&gt; REQUEST_API\n    CACHE --&gt; TASK_API\n    CACHE --&gt; RESOURCE_API\n    CACHE --&gt; NOTIFICATION_API\n    CACHE --&gt; AI_API\n\n    USER_API --&gt; USER_BL --&gt; USER_DAL\n    REQUEST_API --&gt; REQUEST_BL --&gt; REQUEST_DAL\n    TASK_API --&gt; TASK_BL --&gt; TASK_DAL\n    RESOURCE_API --&gt; RESOURCE_BL --&gt; RESOURCE_DAL\n    NOTIFICATION_API --&gt; NOTIFICATION_BL --&gt; NOTIFICATION_DAL\n    AI_API --&gt; AI_BL --&gt; AI_DAL\n\n    USER_DAL --&gt; POSTGRES\n    REQUEST_DAL --&gt; POSTGRES\n    TASK_DAL --&gt; POSTGRES\n    RESOURCE_DAL --&gt; POSTGRES\n    NOTIFICATION_DAL --&gt; POSTGRES\n    AI_DAL --&gt; POSTGRES\n\n    USER_DAL --&gt; REDIS\n    REQUEST_DAL --&gt; REDIS\n    TASK_DAL --&gt; SEARCH</code></pre>"},{"location":"architecture/api/#api-service-structure","title":"API Service Structure","text":""},{"location":"architecture/api/#core-api-services","title":"Core API Services","text":""},{"location":"architecture/api/#1-user-service-api","title":"1. User Service API","text":"<pre><code>Base Path: /api/v1/users\n\nEndpoints:\n\u251c\u2500\u2500 POST   /register           # User registration\n\u251c\u2500\u2500 POST   /login              # User authentication\n\u251c\u2500\u2500 POST   /logout             # User logout\n\u251c\u2500\u2500 GET    /profile            # Get user profile\n\u251c\u2500\u2500 PATCH  /profile            # Update user profile\n\u251c\u2500\u2500 POST   /verify             # Email verification\n\u251c\u2500\u2500 POST   /forgot-password    # Password reset request\n\u251c\u2500\u2500 POST   /reset-password     # Password reset\n\u251c\u2500\u2500 GET    /{id}               # Get user by ID (admin)\n\u251c\u2500\u2500 GET    /                   # List users (admin)\n\u251c\u2500\u2500 PATCH  /{id}/status        # Update user status (admin)\n\u2514\u2500\u2500 GET    /{id}/activity      # User activity history\n</code></pre>"},{"location":"architecture/api/#2-emergency-requests-service-api","title":"2. Emergency Requests Service API","text":"<pre><code>Base Path: /api/v1/requests\n\nEndpoints:\n\u251c\u2500\u2500 POST   /                   # Create emergency request\n\u251c\u2500\u2500 GET    /                   # List emergency requests\n\u251c\u2500\u2500 GET    /{id}               # Get request details\n\u251c\u2500\u2500 PATCH  /{id}               # Update request\n\u251c\u2500\u2500 DELETE /{id}               # Cancel request\n\u251c\u2500\u2500 POST   /{id}/assign        # Assign responders\n\u251c\u2500\u2500 GET    /{id}/tasks         # Get related tasks\n\u251c\u2500\u2500 GET    /{id}/resources     # Get allocated resources\n\u251c\u2500\u2500 POST   /{id}/comments      # Add comment/update\n\u251c\u2500\u2500 GET    /nearby             # Get nearby requests\n\u251c\u2500\u2500 GET    /statistics         # Request statistics\n\u2514\u2500\u2500 POST   /{id}/media         # Upload media files\n</code></pre>"},{"location":"architecture/api/#3-task-management-service-api","title":"3. Task Management Service API","text":"<pre><code>Base Path: /api/v1/tasks\n\nEndpoints:\n\u251c\u2500\u2500 POST   /                   # Create task\n\u251c\u2500\u2500 GET    /                   # List tasks\n\u251c\u2500\u2500 GET    /{id}               # Get task details\n\u251c\u2500\u2500 PATCH  /{id}               # Update task\n\u251c\u2500\u2500 DELETE /{id}               # Cancel task\n\u251c\u2500\u2500 POST   /{id}/accept        # Accept task\n\u251c\u2500\u2500 POST   /{id}/complete      # Complete task\n\u251c\u2500\u2500 POST   /{id}/rate          # Rate task completion\n\u251c\u2500\u2500 GET    /my-tasks           # Get user's tasks\n\u251c\u2500\u2500 GET    /available          # Get available tasks\n\u2514\u2500\u2500 GET    /{id}/history       # Task history\n</code></pre>"},{"location":"architecture/api/#4-resource-management-service-api","title":"4. Resource Management Service API","text":"<pre><code>Base Path: /api/v1/resources\n\nEndpoints:\n\u251c\u2500\u2500 GET    /                   # List resources\n\u251c\u2500\u2500 GET    /{id}               # Get resource details\n\u251c\u2500\u2500 PATCH  /{id}               # Update resource\n\u251c\u2500\u2500 POST   /{id}/allocate      # Allocate resource\n\u251c\u2500\u2500 POST   /{id}/deallocate    # Deallocate resource\n\u251c\u2500\u2500 GET    /available          # Get available resources\n\u251c\u2500\u2500 GET    /forecast           # Resource availability forecast\n\u251c\u2500\u2500 GET    /types              # Get resource types\n\u251c\u2500\u2500 GET    /nearby             # Get nearby resources\n\u2514\u2500\u2500 GET    /statistics         # Resource statistics\n</code></pre>"},{"location":"architecture/api/#5-notification-service-api","title":"5. Notification Service API","text":"<pre><code>Base Path: /api/v1/notifications\n\nEndpoints:\n\u251c\u2500\u2500 POST   /                   # Send notification\n\u251c\u2500\u2500 GET    /                   # List notifications\n\u251c\u2500\u2500 GET    /{id}               # Get notification details\n\u251c\u2500\u2500 PATCH  /{id}/read          # Mark as read\n\u251c\u2500\u2500 DELETE /{id}               # Delete notification\n\u251c\u2500\u2500 POST   /batch              # Send batch notifications\n\u251c\u2500\u2500 GET    /unread             # Get unread notifications\n\u251c\u2500\u2500 PATCH  /mark-all-read      # Mark all as read\n\u2514\u2500\u2500 GET    /preferences        # Get notification preferences\n</code></pre>"},{"location":"architecture/api/#6-ai-agent-service-api","title":"6. AI Agent Service API","text":"<pre><code>Base Path: /api/v1/ai-agents\n\nEndpoints:\n\u251c\u2500\u2500 POST   /emergency-processor/analyze    # Analyze emergency\n\u251c\u2500\u2500 POST   /resource-optimizer/optimize    # Optimize resources\n\u251c\u2500\u2500 POST   /coordinator/assign-tasks       # Assign tasks\n\u251c\u2500\u2500 POST   /predictor/forecast             # Generate predictions\n\u251c\u2500\u2500 POST   /communicator/send-notifications # Send notifications\n\u251c\u2500\u2500 GET    /status                         # Get agent status\n\u251c\u2500\u2500 GET    /{agent}/metrics               # Get agent metrics\n\u251c\u2500\u2500 POST   /feedback                      # Submit feedback\n\u2514\u2500\u2500 POST   /{agent}/retrain               # Retrain agent\n</code></pre>"},{"location":"architecture/api/#api-requestresponse-patterns","title":"API Request/Response Patterns","text":""},{"location":"architecture/api/#standard-request-format","title":"Standard Request Format","text":""},{"location":"architecture/api/#authentication-header","title":"Authentication Header","text":"<pre><code>Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre>"},{"location":"architecture/api/#content-type","title":"Content Type","text":"<pre><code>Content-Type: application/json\nAccept: application/json\n</code></pre>"},{"location":"architecture/api/#request-body-structure","title":"Request Body Structure","text":"<pre><code>{\n  \"data\": {\n    // Primary request data\n  },\n  \"metadata\": {\n    \"client_version\": \"1.2.0\",\n    \"client_platform\": \"web\",\n    \"request_id\": \"req_12345\"\n  }\n}\n</code></pre>"},{"location":"architecture/api/#standard-response-format","title":"Standard Response Format","text":""},{"location":"architecture/api/#success-response","title":"Success Response","text":"<pre><code>{\n  \"success\": true,\n  \"data\": {\n    // Response data\n  },\n  \"metadata\": {\n    \"timestamp\": \"2024-01-15T12:00:00Z\",\n    \"request_id\": \"req_12345\",\n    \"processing_time_ms\": 150\n  },\n  \"pagination\": {\n    \"total\": 100,\n    \"page\": 1,\n    \"limit\": 20,\n    \"pages\": 5,\n    \"has_next\": true,\n    \"has_prev\": false\n  }\n}\n</code></pre>"},{"location":"architecture/api/#error-response","title":"Error Response","text":"<pre><code>{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Invalid input data\",\n    \"details\": {\n      \"field\": \"email\",\n      \"issue\": \"Invalid email format\"\n    },\n    \"trace_id\": \"trace_12345\"\n  },\n  \"metadata\": {\n    \"timestamp\": \"2024-01-15T12:00:00Z\",\n    \"request_id\": \"req_12345\"\n  }\n}\n</code></pre>"},{"location":"architecture/api/#authentication-and-authorization","title":"Authentication and Authorization","text":""},{"location":"architecture/api/#jwt-token-structure","title":"JWT Token Structure","text":"<pre><code>{\n  \"header\": {\n    \"alg\": \"HS256\",\n    \"typ\": \"JWT\"\n  },\n  \"payload\": {\n    \"sub\": \"user_12345\",\n    \"email\": \"user@example.com\",\n    \"role\": \"volunteer\",\n    \"permissions\": [\"task_read\", \"task_write\", \"request_read\"],\n    \"iat\": 1705315200,\n    \"exp\": 1705401600,\n    \"iss\": \"disaster-response-api\"\n  }\n}\n</code></pre>"},{"location":"architecture/api/#role-based-access-control","title":"Role-Based Access Control","text":"<pre><code>interface UserPermissions {\n  affected_individual: [\n    \"request_create\",\n    \"request_read_own\",\n    \"request_update_own\",\n    \"notification_read_own\"\n  ];\n  volunteer: [\n    \"request_read\",\n    \"task_read\",\n    \"task_accept\",\n    \"task_complete\",\n    \"resource_read\",\n    \"notification_read_own\"\n  ];\n  first_responder: [\n    \"request_read\",\n    \"request_assign\",\n    \"task_read\",\n    \"task_create\",\n    \"task_assign\",\n    \"resource_read\",\n    \"resource_allocate\",\n    \"notification_send\"\n  ];\n  government_admin: [\n    \"user_read\",\n    \"user_manage\",\n    \"request_read_all\",\n    \"task_read_all\",\n    \"resource_read_all\",\n    \"resource_manage\",\n    \"notification_send_all\",\n    \"analytics_read\"\n  ];\n}\n</code></pre>"},{"location":"architecture/api/#authorization-middleware","title":"Authorization Middleware","text":"<pre><code>import { Request, Response, NextFunction } from \"express\";\nimport jwt from \"jsonwebtoken\";\n\ninterface AuthenticatedRequest extends Request {\n  user?: {\n    id: string;\n    email: string;\n    role: string;\n    permissions: string[];\n  };\n}\n\nexport const authenticate = (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) =&gt; {\n  try {\n    const token = req.header(\"Authorization\")?.replace(\"Bearer \", \"\");\n\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          code: \"MISSING_TOKEN\",\n          message: \"Access token is required\",\n        },\n      });\n    }\n\n    const decoded = jwt.verify(token, process.env.JWT_SECRET!) as any;\n    req.user = decoded;\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      success: false,\n      error: {\n        code: \"INVALID_TOKEN\",\n        message: \"Invalid or expired token\",\n      },\n    });\n  }\n};\n\nexport const authorize = (requiredPermission: string) =&gt; {\n  return (req: AuthenticatedRequest, res: Response, next: NextFunction) =&gt; {\n    if (!req.user?.permissions.includes(requiredPermission)) {\n      return res.status(403).json({\n        success: false,\n        error: {\n          code: \"INSUFFICIENT_PERMISSIONS\",\n          message: \"Insufficient permissions for this action\",\n          details: {\n            required: requiredPermission,\n            user_permissions: req.user?.permissions || [],\n          },\n        },\n      });\n    }\n    next();\n  };\n};\n</code></pre>"},{"location":"architecture/api/#api-gateway-implementation","title":"API Gateway Implementation","text":""},{"location":"architecture/api/#rate-limiting-strategy","title":"Rate Limiting Strategy","text":"<pre><code>import rateLimit from \"express-rate-limit\";\nimport RedisStore from \"rate-limit-redis\";\nimport Redis from \"ioredis\";\n\nconst redis = new Redis(process.env.REDIS_URL);\n\n// Different rate limits for different user types\nconst createRateLimiter = (\n  windowMs: number,\n  max: number,\n  keyGenerator?: (req: Request) =&gt; string\n) =&gt; {\n  return rateLimit({\n    store: new RedisStore({\n      client: redis,\n      prefix: \"rl:\",\n    }),\n    windowMs,\n    max,\n    keyGenerator: keyGenerator || ((req) =&gt; req.ip),\n    message: {\n      success: false,\n      error: {\n        code: \"RATE_LIMIT_EXCEEDED\",\n        message: \"Too many requests, please try again later\",\n      },\n    },\n  });\n};\n\n// Apply different limits based on user role\nexport const dynamicRateLimit = (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) =&gt; {\n  const userRole = req.user?.role || \"anonymous\";\n\n  const limits = {\n    anonymous: createRateLimiter(15 * 60 * 1000, 100), // 100 requests per 15 minutes\n    affected_individual: createRateLimiter(15 * 60 * 1000, 200),\n    volunteer: createRateLimiter(15 * 60 * 1000, 500),\n    first_responder: createRateLimiter(15 * 60 * 1000, 1000),\n    government_admin: createRateLimiter(15 * 60 * 1000, 2000),\n  };\n\n  const limiter = limits[userRole] || limits.anonymous;\n  limiter(req, res, next);\n};\n</code></pre>"},{"location":"architecture/api/#request-validation","title":"Request Validation","text":"<pre><code>import Joi from \"joi\";\nimport { Request, Response, NextFunction } from \"express\";\n\nexport const validateRequest = (schema: Joi.ObjectSchema) =&gt; {\n  return (req: Request, res: Response, next: NextFunction) =&gt; {\n    const { error, value } = schema.validate(req.body, {\n      abortEarly: false,\n      stripUnknown: true,\n    });\n\n    if (error) {\n      const validationErrors = error.details.map((detail) =&gt; ({\n        field: detail.path.join(\".\"),\n        message: detail.message,\n        value: detail.context?.value,\n      }));\n\n      return res.status(400).json({\n        success: false,\n        error: {\n          code: \"VALIDATION_ERROR\",\n          message: \"Request validation failed\",\n          details: validationErrors,\n        },\n      });\n    }\n\n    req.body = value;\n    next();\n  };\n};\n\n// Example validation schema\nexport const createEmergencyRequestSchema = Joi.object({\n  title: Joi.string().required().min(10).max(255),\n  description: Joi.string().required().min(20).max(2000),\n  category: Joi.string()\n    .valid(\n      \"medical\",\n      \"fire\",\n      \"natural_disaster\",\n      \"accident\",\n      \"security\",\n      \"utility_failure\",\n      \"other\"\n    )\n    .required(),\n  severity: Joi.string().valid(\"low\", \"medium\", \"high\", \"critical\").required(),\n  location: Joi.object({\n    latitude: Joi.number().min(-90).max(90).required(),\n    longitude: Joi.number().min(-180).max(180).required(),\n    address: Joi.string().max(500),\n  }).required(),\n  contact_info: Joi.object({\n    phone: Joi.string().pattern(/^\\+[1-9]\\d{1,14}$/),\n    email: Joi.string().email(),\n    name: Joi.string().max(100),\n  }),\n  media_urls: Joi.array().items(Joi.string().uri()).max(10),\n});\n</code></pre>"},{"location":"architecture/api/#caching-strategy","title":"Caching Strategy","text":""},{"location":"architecture/api/#multi-layer-caching","title":"Multi-Layer Caching","text":"<pre><code>import Redis from \"ioredis\";\nimport { Request, Response, NextFunction } from \"express\";\n\nconst redis = new Redis(process.env.REDIS_URL);\n\n// Cache middleware\nexport const cacheResponse = (ttl: number = 300, keyPrefix: string = \"api\") =&gt; {\n  return async (req: Request, res: Response, next: NextFunction) =&gt; {\n    const cacheKey = `${keyPrefix}:${req.method}:${req.path}:${JSON.stringify(\n      req.query\n    )}`;\n\n    try {\n      const cachedResponse = await redis.get(cacheKey);\n\n      if (cachedResponse) {\n        const parsed = JSON.parse(cachedResponse);\n        return res.json({\n          ...parsed,\n          metadata: {\n            ...parsed.metadata,\n            cached: true,\n            cache_age: Date.now() - parsed.metadata.timestamp,\n          },\n        });\n      }\n\n      // Store original res.json function\n      const originalJson = res.json;\n\n      // Override res.json to cache the response\n      res.json = function (body: any) {\n        // Cache successful responses only\n        if (body.success !== false) {\n          redis.setex(cacheKey, ttl, JSON.stringify(body));\n        }\n\n        // Call original function\n        return originalJson.call(this, body);\n      };\n\n      next();\n    } catch (error) {\n      // If cache fails, continue without caching\n      next();\n    }\n  };\n};\n\n// Cache invalidation\nexport const invalidateCache = async (pattern: string) =&gt; {\n  const keys = await redis.keys(pattern);\n  if (keys.length &gt; 0) {\n    await redis.del(...keys);\n  }\n};\n</code></pre>"},{"location":"architecture/api/#cache-headers","title":"Cache Headers","text":"<pre><code>export const setCacheHeaders = (maxAge: number = 300) =&gt; {\n  return (req: Request, res: Response, next: NextFunction) =&gt; {\n    res.set({\n      \"Cache-Control\": `public, max-age=${maxAge}`,\n      ETag: `\"${Date.now()}\"`,\n      \"Last-Modified\": new Date().toUTCString(),\n    });\n    next();\n  };\n};\n</code></pre>"},{"location":"architecture/api/#real-time-api-features","title":"Real-time API Features","text":""},{"location":"architecture/api/#websocket-integration","title":"WebSocket Integration","text":"<pre><code>import { Server as SocketIOServer } from \"socket.io\";\nimport { authenticate as authenticateWebSocket } from \"../middleware/auth\";\n\nexport class WebSocketService {\n  private io: SocketIOServer;\n  private userSockets: Map&lt;string, string[]&gt; = new Map();\n\n  constructor(io: SocketIOServer) {\n    this.io = io;\n    this.setupMiddleware();\n    this.setupEventHandlers();\n  }\n\n  private setupMiddleware() {\n    this.io.use(authenticateWebSocket);\n  }\n\n  private setupEventHandlers() {\n    this.io.on(\"connection\", (socket) =&gt; {\n      const userId = socket.data.user.id;\n\n      // Track user connections\n      const userConnections = this.userSockets.get(userId) || [];\n      userConnections.push(socket.id);\n      this.userSockets.set(userId, userConnections);\n\n      // Handle subscriptions\n      socket.on(\"subscribe\", (channels: string[]) =&gt; {\n        channels.forEach((channel) =&gt; {\n          if (this.canSubscribeToChannel(socket.data.user, channel)) {\n            socket.join(channel);\n          }\n        });\n      });\n\n      // Handle disconnection\n      socket.on(\"disconnect\", () =&gt; {\n        const userConnections = this.userSockets.get(userId) || [];\n        const updatedConnections = userConnections.filter(\n          (id) =&gt; id !== socket.id\n        );\n\n        if (updatedConnections.length === 0) {\n          this.userSockets.delete(userId);\n        } else {\n          this.userSockets.set(userId, updatedConnections);\n        }\n      });\n    });\n  }\n\n  private canSubscribeToChannel(user: any, channel: string): boolean {\n    const channelPermissions = {\n      emergency_alerts: [\"volunteer\", \"first_responder\", \"government_admin\"],\n      task_updates: [\"volunteer\", \"first_responder\", \"government_admin\"],\n      resource_changes: [\"first_responder\", \"government_admin\"],\n      system_alerts: [\"government_admin\"],\n    };\n\n    return channelPermissions[channel]?.includes(user.role) || false;\n  }\n\n  public broadcastToChannel(channel: string, data: any) {\n    this.io.to(channel).emit(\"message\", data);\n  }\n\n  public sendToUser(userId: string, data: any) {\n    const userConnections = this.userSockets.get(userId) || [];\n    userConnections.forEach((socketId) =&gt; {\n      this.io.to(socketId).emit(\"message\", data);\n    });\n  }\n}\n</code></pre>"},{"location":"architecture/api/#server-sent-events-sse","title":"Server-Sent Events (SSE)","text":"<pre><code>import { Request, Response } from \"express\";\nimport { EventEmitter } from \"events\";\n\nclass SSEService extends EventEmitter {\n  private connections: Map&lt;string, Response[]&gt; = new Map();\n\n  public addConnection(userId: string, res: Response) {\n    const userConnections = this.connections.get(userId) || [];\n    userConnections.push(res);\n    this.connections.set(userId, userConnections);\n\n    // Setup SSE headers\n    res.writeHead(200, {\n      \"Content-Type\": \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Cache-Control\",\n    });\n\n    // Send initial connection message\n    res.write(\n      `data: ${JSON.stringify({\n        type: \"connected\",\n        timestamp: new Date().toISOString(),\n      })}\\n\\n`\n    );\n\n    // Handle connection close\n    res.on(\"close\", () =&gt; {\n      this.removeConnection(userId, res);\n    });\n  }\n\n  private removeConnection(userId: string, res: Response) {\n    const userConnections = this.connections.get(userId) || [];\n    const updatedConnections = userConnections.filter((conn) =&gt; conn !== res);\n\n    if (updatedConnections.length === 0) {\n      this.connections.delete(userId);\n    } else {\n      this.connections.set(userId, updatedConnections);\n    }\n  }\n\n  public sendEventToUser(userId: string, event: string, data: any) {\n    const userConnections = this.connections.get(userId) || [];\n    const message = `event: ${event}\\ndata: ${JSON.stringify(data)}\\n\\n`;\n\n    userConnections.forEach((res) =&gt; {\n      try {\n        res.write(message);\n      } catch (error) {\n        this.removeConnection(userId, res);\n      }\n    });\n  }\n\n  public broadcastEvent(event: string, data: any) {\n    const message = `event: ${event}\\ndata: ${JSON.stringify(data)}\\n\\n`;\n\n    this.connections.forEach((connections, userId) =&gt; {\n      connections.forEach((res) =&gt; {\n        try {\n          res.write(message);\n        } catch (error) {\n          this.removeConnection(userId, res);\n        }\n      });\n    });\n  }\n}\n\nexport const sseService = new SSEService();\n\nexport const sseEndpoint = (req: AuthenticatedRequest, res: Response) =&gt; {\n  const userId = req.user!.id;\n  sseService.addConnection(userId, res);\n};\n</code></pre>"},{"location":"architecture/api/#api-documentation","title":"API Documentation","text":""},{"location":"architecture/api/#openapi-specification","title":"OpenAPI Specification","text":"<pre><code>openapi: 3.0.3\ninfo:\n  title: Disaster Response Coordination API\n  description: API for disaster response coordination system\n  version: 1.0.0\n  contact:\n    name: API Support\n    email: api-support@disaster-response.com\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n\nservers:\n  - url: https://api.disaster-response.com/v1\n    description: Production server\n  - url: https://staging-api.disaster-response.com/v1\n    description: Staging server\n\nsecurity:\n  - BearerAuth: []\n\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  schemas:\n    EmergencyRequest:\n      type: object\n      required:\n        - title\n        - description\n        - category\n        - severity\n        - location\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          minLength: 10\n          maxLength: 255\n        description:\n          type: string\n          minLength: 20\n          maxLength: 2000\n        category:\n          type: string\n          enum:\n            [\n              medical,\n              fire,\n              natural_disaster,\n              accident,\n              security,\n              utility_failure,\n              other,\n            ]\n        severity:\n          type: string\n          enum: [low, medium, high, critical]\n        location:\n          $ref: \"#/components/schemas/Location\"\n\n    Location:\n      type: object\n      required:\n        - latitude\n        - longitude\n      properties:\n        latitude:\n          type: number\n          minimum: -90\n          maximum: 90\n        longitude:\n          type: number\n          minimum: -180\n          maximum: 180\n        address:\n          type: string\n          maxLength: 500\n\npaths:\n  /requests:\n    post:\n      summary: Create emergency request\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EmergencyRequest\"\n      responses:\n        \"201\":\n          description: Emergency request created successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  data:\n                    $ref: \"#/components/schemas/EmergencyRequest\"\n</code></pre>"},{"location":"architecture/api/#error-handling","title":"Error Handling","text":""},{"location":"architecture/api/#global-error-handler","title":"Global Error Handler","text":"<pre><code>import { Request, Response, NextFunction } from \"express\";\nimport { ValidationError } from \"joi\";\nimport { JsonWebTokenError } from \"jsonwebtoken\";\n\nexport interface ApiError extends Error {\n  statusCode?: number;\n  code?: string;\n  details?: any;\n}\n\nexport const globalErrorHandler = (\n  error: ApiError,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) =&gt; {\n  let statusCode = error.statusCode || 500;\n  let errorCode = error.code || \"INTERNAL_SERVER_ERROR\";\n  let message = error.message || \"An unexpected error occurred\";\n  let details = error.details || null;\n\n  // Handle specific error types\n  if (error instanceof ValidationError) {\n    statusCode = 400;\n    errorCode = \"VALIDATION_ERROR\";\n    details = error.details.map((detail) =&gt; ({\n      field: detail.path.join(\".\"),\n      message: detail.message,\n    }));\n  } else if (error instanceof JsonWebTokenError) {\n    statusCode = 401;\n    errorCode = \"AUTHENTICATION_ERROR\";\n    message = \"Invalid or expired token\";\n  }\n\n  // Log error for monitoring\n  console.error(\"API Error:\", {\n    statusCode,\n    errorCode,\n    message,\n    details,\n    stack: error.stack,\n    url: req.url,\n    method: req.method,\n    userId: (req as any).user?.id,\n  });\n\n  res.status(statusCode).json({\n    success: false,\n    error: {\n      code: errorCode,\n      message,\n      details,\n      trace_id: req.headers[\"x-trace-id\"] || \"unknown\",\n    },\n    metadata: {\n      timestamp: new Date().toISOString(),\n      request_id: req.headers[\"x-request-id\"] || \"unknown\",\n    },\n  });\n};\n</code></pre>"},{"location":"architecture/api/#api-performance-monitoring","title":"API Performance Monitoring","text":""},{"location":"architecture/api/#response-time-middleware","title":"Response Time Middleware","text":"<pre><code>import { Request, Response, NextFunction } from \"express\";\n\nexport const responseTimeMiddleware = (\n  req: Request,\n  res: Response,\n  next: NextFunction\n) =&gt; {\n  const startTime = Date.now();\n\n  // Override res.json to capture response time\n  const originalJson = res.json;\n  res.json = function (body: any) {\n    const responseTime = Date.now() - startTime;\n\n    // Add response time to metadata\n    if (body &amp;&amp; typeof body === \"object\" &amp;&amp; body.metadata) {\n      body.metadata.processing_time_ms = responseTime;\n    }\n\n    // Log slow requests\n    if (responseTime &gt; 1000) {\n      console.warn(\"Slow API request:\", {\n        url: req.url,\n        method: req.method,\n        responseTime,\n        userId: (req as any).user?.id,\n      });\n    }\n\n    return originalJson.call(this, body);\n  };\n\n  next();\n};\n</code></pre>"},{"location":"architecture/api/#health-check-endpoints","title":"Health Check Endpoints","text":"<pre><code>import { Request, Response } from \"express\";\nimport { Pool } from \"pg\";\nimport Redis from \"ioredis\";\n\nconst db = new Pool({ connectionString: process.env.DATABASE_URL });\nconst redis = new Redis(process.env.REDIS_URL);\n\nexport const healthCheck = async (req: Request, res: Response) =&gt; {\n  const startTime = Date.now();\n  const checks = {\n    database: false,\n    redis: false,\n    external_services: false,\n  };\n\n  try {\n    // Database health check\n    await db.query(\"SELECT 1\");\n    checks.database = true;\n  } catch (error) {\n    console.error(\"Database health check failed:\", error);\n  }\n\n  try {\n    // Redis health check\n    await redis.ping();\n    checks.redis = true;\n  } catch (error) {\n    console.error(\"Redis health check failed:\", error);\n  }\n\n  try {\n    // External services health check\n    // Add checks for critical external services\n    checks.external_services = true;\n  } catch (error) {\n    console.error(\"External services health check failed:\", error);\n  }\n\n  const isHealthy = Object.values(checks).every((check) =&gt; check);\n  const responseTime = Date.now() - startTime;\n\n  res.status(isHealthy ? 200 : 503).json({\n    status: isHealthy ? \"healthy\" : \"unhealthy\",\n    timestamp: new Date().toISOString(),\n    response_time_ms: responseTime,\n    checks,\n    version: process.env.API_VERSION || \"1.0.0\",\n    uptime: process.uptime(),\n  });\n};\n</code></pre>"},{"location":"architecture/api/#api-testing-strategy","title":"API Testing Strategy","text":""},{"location":"architecture/api/#unit-tests","title":"Unit Tests","text":"<pre><code>import request from \"supertest\";\nimport { app } from \"../app\";\nimport { createTestUser, generateJWT } from \"../utils/test-helpers\";\n\ndescribe(\"Emergency Requests API\", () =&gt; {\n  let userToken: string;\n  let userId: string;\n\n  beforeEach(async () =&gt; {\n    const user = await createTestUser({ role: \"affected_individual\" });\n    userId = user.id;\n    userToken = generateJWT(user);\n  });\n\n  describe(\"POST /api/v1/requests\", () =&gt; {\n    it(\"should create emergency request with valid data\", async () =&gt; {\n      const requestData = {\n        title: \"Medical emergency - chest pain\",\n        description: \"Experiencing severe chest pain and shortness of breath\",\n        category: \"medical\",\n        severity: \"high\",\n        location: {\n          latitude: 6.9271,\n          longitude: 79.8612,\n          address: \"123 Main Street, Colombo\",\n        },\n      };\n\n      const response = await request(app)\n        .post(\"/api/v1/requests\")\n        .set(\"Authorization\", `Bearer ${userToken}`)\n        .send(requestData)\n        .expect(201);\n\n      expect(response.body.success).toBe(true);\n      expect(response.body.data.title).toBe(requestData.title);\n      expect(response.body.data.user_id).toBe(userId);\n    });\n\n    it(\"should return validation error for invalid data\", async () =&gt; {\n      const invalidData = {\n        title: \"Short\", // Too short\n        description: \"Short description\", // Too short\n        category: \"invalid_category\", // Invalid category\n        severity: \"high\",\n        location: {\n          latitude: 200, // Invalid latitude\n          longitude: 79.8612,\n        },\n      };\n\n      const response = await request(app)\n        .post(\"/api/v1/requests\")\n        .set(\"Authorization\", `Bearer ${userToken}`)\n        .send(invalidData)\n        .expect(400);\n\n      expect(response.body.success).toBe(false);\n      expect(response.body.error.code).toBe(\"VALIDATION_ERROR\");\n    });\n  });\n});\n</code></pre>"},{"location":"architecture/api/#integration-tests","title":"Integration Tests","text":"<pre><code>describe(\"Emergency Request Workflow Integration\", () =&gt; {\n  it(\"should complete full emergency request workflow\", async () =&gt; {\n    // 1. Create emergency request\n    const request = await createEmergencyRequest();\n\n    // 2. AI agent should analyze request\n    await waitForAIAnalysis(request.id);\n\n    // 3. Tasks should be created\n    const tasks = await getTasks(request.id);\n    expect(tasks.length).toBeGreaterThan(0);\n\n    // 4. Resources should be allocated\n    const resources = await getResources(request.id);\n    expect(resources.length).toBeGreaterThan(0);\n\n    // 5. Notifications should be sent\n    const notifications = await getNotifications(request.id);\n    expect(notifications.length).toBeGreaterThan(0);\n  });\n});\n</code></pre>"},{"location":"architecture/api/#api-deployment-considerations","title":"API Deployment Considerations","text":""},{"location":"architecture/api/#environment-configuration","title":"Environment Configuration","text":"<pre><code>export const config = {\n  port: process.env.PORT || 3000,\n  database: {\n    url: process.env.DATABASE_URL!,\n    pool: {\n      min: parseInt(process.env.DB_POOL_MIN || \"2\"),\n      max: parseInt(process.env.DB_POOL_MAX || \"10\"),\n    },\n  },\n  redis: {\n    url: process.env.REDIS_URL!,\n    retryDelayOnFailover: 100,\n    maxRetriesPerRequest: 3,\n  },\n  jwt: {\n    secret: process.env.JWT_SECRET!,\n    expiresIn: process.env.JWT_EXPIRES_IN || \"24h\",\n  },\n  rateLimit: {\n    windowMs: parseInt(process.env.RATE_LIMIT_WINDOW || \"900000\"), // 15 minutes\n    max: parseInt(process.env.RATE_LIMIT_MAX || \"100\"),\n  },\n  cors: {\n    origin: process.env.CORS_ORIGIN?.split(\",\") || [\"http://localhost:3000\"],\n    credentials: true,\n  },\n};\n</code></pre>"},{"location":"architecture/api/#container-deployment","title":"Container Deployment","text":"<pre><code>FROM node:18-alpine\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm ci --only=production\n\nCOPY . .\nRUN npm run build\n\nUSER node\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n</code></pre> <p>This comprehensive API architecture provides a robust foundation for the disaster response coordination system with proper authentication, caching, real-time features, error handling, and monitoring capabilities.</p>"},{"location":"architecture/database/","title":"Database Architecture","text":"<p>This document outlines the database design, schema structure, data relationships, and performance considerations for the disaster response coordination system.</p>"},{"location":"architecture/database/#database-overview","title":"Database Overview","text":""},{"location":"architecture/database/#primary-database-postgresql","title":"Primary Database: PostgreSQL","text":"<p>The system uses PostgreSQL as the primary database for its ACID compliance, advanced features, and excellent performance characteristics.</p> <p>Key Features Used:</p> <ul> <li>JSONB for flexible document storage</li> <li>Full-text search capabilities</li> <li>Geographic data types (PostGIS)</li> <li>Advanced indexing strategies</li> <li>Partitioning for large tables</li> <li>Replication for high availability</li> </ul>"},{"location":"architecture/database/#cache-layer-redis","title":"Cache Layer: Redis","text":"<p>Redis provides high-performance caching and session storage.</p> <p>Use Cases:</p> <ul> <li>Session management</li> <li>API response caching</li> <li>Real-time data caching</li> <li>Message queuing</li> <li>Rate limiting counters</li> </ul>"},{"location":"architecture/database/#database-schema","title":"Database Schema","text":""},{"location":"architecture/database/#core-tables","title":"Core Tables","text":""},{"location":"architecture/database/#users-table","title":"Users Table","text":"<pre><code>CREATE TABLE users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    first_name VARCHAR(100) NOT NULL,\n    last_name VARCHAR(100) NOT NULL,\n    phone VARCHAR(20),\n    role user_role NOT NULL DEFAULT 'affected_individual',\n    status user_status NOT NULL DEFAULT 'active',\n    profile JSONB,\n    settings JSONB,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    last_login TIMESTAMP WITH TIME ZONE,\n    email_verified BOOLEAN DEFAULT FALSE,\n    email_verified_at TIMESTAMP WITH TIME ZONE\n);\n\n-- Indexes\nCREATE INDEX idx_users_email ON users(email);\nCREATE INDEX idx_users_role ON users(role);\nCREATE INDEX idx_users_status ON users(status);\nCREATE INDEX idx_users_created_at ON users(created_at);\nCREATE INDEX idx_users_profile_gin ON users USING GIN(profile);\n</code></pre>"},{"location":"architecture/database/#emergency-requests-table","title":"Emergency Requests Table","text":"<pre><code>CREATE TABLE emergency_requests (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID NOT NULL REFERENCES users(id),\n    title VARCHAR(255) NOT NULL,\n    description TEXT NOT NULL,\n    category emergency_category NOT NULL,\n    severity severity_level NOT NULL,\n    priority INTEGER NOT NULL DEFAULT 50,\n    status request_status NOT NULL DEFAULT 'pending',\n    location POINT NOT NULL,\n    location_address TEXT,\n    contact_info JSONB,\n    media_urls TEXT[],\n    ai_analysis JSONB,\n    assigned_responders UUID[],\n    estimated_resolution TIMESTAMP WITH TIME ZONE,\n    actual_resolution TIMESTAMP WITH TIME ZONE,\n    resolution_notes TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_emergency_requests_user_id ON emergency_requests(user_id);\nCREATE INDEX idx_emergency_requests_category ON emergency_requests(category);\nCREATE INDEX idx_emergency_requests_severity ON emergency_requests(severity);\nCREATE INDEX idx_emergency_requests_status ON emergency_requests(status);\nCREATE INDEX idx_emergency_requests_priority ON emergency_requests(priority DESC);\nCREATE INDEX idx_emergency_requests_created_at ON emergency_requests(created_at DESC);\nCREATE INDEX idx_emergency_requests_location ON emergency_requests USING GIST(location);\nCREATE INDEX idx_emergency_requests_ai_analysis_gin ON emergency_requests USING GIN(ai_analysis);\n\n-- Partitioning by date for performance\nCREATE TABLE emergency_requests_2024_01 PARTITION OF emergency_requests\n    FOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n</code></pre>"},{"location":"architecture/database/#tasks-table","title":"Tasks Table","text":"<pre><code>CREATE TABLE tasks (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    request_id UUID NOT NULL REFERENCES emergency_requests(id),\n    assigned_to UUID REFERENCES users(id),\n    title VARCHAR(255) NOT NULL,\n    description TEXT,\n    task_type task_type NOT NULL,\n    priority INTEGER NOT NULL DEFAULT 50,\n    status task_status NOT NULL DEFAULT 'pending',\n    skills_required TEXT[],\n    location POINT,\n    location_address TEXT,\n    estimated_duration INTERVAL,\n    actual_start_time TIMESTAMP WITH TIME ZONE,\n    actual_completion_time TIMESTAMP WITH TIME ZONE,\n    completion_notes TEXT,\n    rating INTEGER CHECK (rating &gt;= 1 AND rating &lt;= 5),\n    feedback TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    deadline TIMESTAMP WITH TIME ZONE\n);\n\n-- Indexes\nCREATE INDEX idx_tasks_request_id ON tasks(request_id);\nCREATE INDEX idx_tasks_assigned_to ON tasks(assigned_to);\nCREATE INDEX idx_tasks_status ON tasks(status);\nCREATE INDEX idx_tasks_priority ON tasks(priority DESC);\nCREATE INDEX idx_tasks_created_at ON tasks(created_at DESC);\nCREATE INDEX idx_tasks_deadline ON tasks(deadline);\nCREATE INDEX idx_tasks_location ON tasks USING GIST(location);\nCREATE INDEX idx_tasks_skills_gin ON tasks USING GIN(skills_required);\n</code></pre>"},{"location":"architecture/database/#resources-table","title":"Resources Table","text":"<pre><code>CREATE TABLE resources (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    name VARCHAR(255) NOT NULL,\n    type resource_type NOT NULL,\n    category resource_category NOT NULL,\n    status resource_status NOT NULL DEFAULT 'available',\n    location POINT NOT NULL,\n    location_address TEXT,\n    capacity JSONB,\n    specifications JSONB,\n    current_allocation JSONB,\n    availability_schedule JSONB,\n    contact_info JSONB,\n    maintenance_schedule JSONB,\n    last_maintenance TIMESTAMP WITH TIME ZONE,\n    next_maintenance TIMESTAMP WITH TIME ZONE,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_resources_type ON resources(type);\nCREATE INDEX idx_resources_category ON resources(category);\nCREATE INDEX idx_resources_status ON resources(status);\nCREATE INDEX idx_resources_location ON resources USING GIST(location);\nCREATE INDEX idx_resources_capacity_gin ON resources USING GIN(capacity);\nCREATE INDEX idx_resources_specifications_gin ON resources USING GIN(specifications);\n</code></pre>"},{"location":"architecture/database/#resource-allocations-table","title":"Resource Allocations Table","text":"<pre><code>CREATE TABLE resource_allocations (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    resource_id UUID NOT NULL REFERENCES resources(id),\n    request_id UUID REFERENCES emergency_requests(id),\n    task_id UUID REFERENCES tasks(id),\n    allocated_by UUID NOT NULL REFERENCES users(id),\n    allocation_type allocation_type NOT NULL,\n    status allocation_status NOT NULL DEFAULT 'allocated',\n    allocated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    scheduled_start TIMESTAMP WITH TIME ZONE,\n    scheduled_end TIMESTAMP WITH TIME ZONE,\n    actual_start TIMESTAMP WITH TIME ZONE,\n    actual_end TIMESTAMP WITH TIME ZONE,\n    allocation_notes TEXT,\n    performance_metrics JSONB,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_resource_allocations_resource_id ON resource_allocations(resource_id);\nCREATE INDEX idx_resource_allocations_request_id ON resource_allocations(request_id);\nCREATE INDEX idx_resource_allocations_task_id ON resource_allocations(task_id);\nCREATE INDEX idx_resource_allocations_status ON resource_allocations(status);\nCREATE INDEX idx_resource_allocations_allocated_at ON resource_allocations(allocated_at DESC);\n</code></pre>"},{"location":"architecture/database/#supporting-tables","title":"Supporting Tables","text":""},{"location":"architecture/database/#notifications-table","title":"Notifications Table","text":"<pre><code>CREATE TABLE notifications (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID NOT NULL REFERENCES users(id),\n    type notification_type NOT NULL,\n    channel notification_channel NOT NULL,\n    title VARCHAR(255) NOT NULL,\n    message TEXT NOT NULL,\n    data JSONB,\n    status notification_status NOT NULL DEFAULT 'pending',\n    sent_at TIMESTAMP WITH TIME ZONE,\n    delivered_at TIMESTAMP WITH TIME ZONE,\n    read_at TIMESTAMP WITH TIME ZONE,\n    retry_count INTEGER DEFAULT 0,\n    error_message TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_notifications_user_id ON notifications(user_id);\nCREATE INDEX idx_notifications_type ON notifications(type);\nCREATE INDEX idx_notifications_status ON notifications(status);\nCREATE INDEX idx_notifications_created_at ON notifications(created_at DESC);\n\n-- Partitioning by date\nCREATE TABLE notifications_2024_01 PARTITION OF notifications\n    FOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n</code></pre>"},{"location":"architecture/database/#ai-agent-interactions-table","title":"AI Agent Interactions Table","text":"<pre><code>CREATE TABLE ai_agent_interactions (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    agent_type agent_type NOT NULL,\n    request_id UUID REFERENCES emergency_requests(id),\n    task_id UUID REFERENCES tasks(id),\n    user_id UUID REFERENCES users(id),\n    interaction_type interaction_type NOT NULL,\n    input_data JSONB NOT NULL,\n    output_data JSONB,\n    confidence_score DECIMAL(3,2),\n    processing_time_ms INTEGER,\n    status interaction_status NOT NULL DEFAULT 'processing',\n    error_message TEXT,\n    feedback_score INTEGER CHECK (feedback_score &gt;= 1 AND feedback_score &lt;= 5),\n    feedback_notes TEXT,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n    completed_at TIMESTAMP WITH TIME ZONE\n);\n\n-- Indexes\nCREATE INDEX idx_ai_interactions_agent_type ON ai_agent_interactions(agent_type);\nCREATE INDEX idx_ai_interactions_request_id ON ai_agent_interactions(request_id);\nCREATE INDEX idx_ai_interactions_status ON ai_agent_interactions(status);\nCREATE INDEX idx_ai_interactions_created_at ON ai_agent_interactions(created_at DESC);\nCREATE INDEX idx_ai_interactions_input_gin ON ai_agent_interactions USING GIN(input_data);\n</code></pre>"},{"location":"architecture/database/#audit-log-table","title":"Audit Log Table","text":"<pre><code>CREATE TABLE audit_logs (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id UUID REFERENCES users(id),\n    entity_type VARCHAR(50) NOT NULL,\n    entity_id UUID NOT NULL,\n    action audit_action NOT NULL,\n    old_values JSONB,\n    new_values JSONB,\n    metadata JSONB,\n    ip_address INET,\n    user_agent TEXT,\n    timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Indexes\nCREATE INDEX idx_audit_logs_user_id ON audit_logs(user_id);\nCREATE INDEX idx_audit_logs_entity ON audit_logs(entity_type, entity_id);\nCREATE INDEX idx_audit_logs_action ON audit_logs(action);\nCREATE INDEX idx_audit_logs_timestamp ON audit_logs(timestamp DESC);\n\n-- Partitioning by month for audit logs\nCREATE TABLE audit_logs_2024_01 PARTITION OF audit_logs\n    FOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n</code></pre>"},{"location":"architecture/database/#custom-data-types","title":"Custom Data Types","text":""},{"location":"architecture/database/#enumerations","title":"Enumerations","text":"<pre><code>-- User roles\nCREATE TYPE user_role AS ENUM (\n    'affected_individual',\n    'volunteer',\n    'first_responder',\n    'government_admin',\n    'system_admin'\n);\n\n-- User status\nCREATE TYPE user_status AS ENUM (\n    'active',\n    'inactive',\n    'suspended',\n    'pending_verification'\n);\n\n-- Emergency categories\nCREATE TYPE emergency_category AS ENUM (\n    'medical',\n    'fire',\n    'natural_disaster',\n    'accident',\n    'security',\n    'utility_failure',\n    'other'\n);\n\n-- Severity levels\nCREATE TYPE severity_level AS ENUM (\n    'low',\n    'medium',\n    'high',\n    'critical'\n);\n\n-- Request status\nCREATE TYPE request_status AS ENUM (\n    'pending',\n    'assigned',\n    'in_progress',\n    'resolved',\n    'cancelled'\n);\n\n-- Task types\nCREATE TYPE task_type AS ENUM (\n    'rescue',\n    'medical_assistance',\n    'supply_distribution',\n    'evacuation',\n    'damage_assessment',\n    'communication',\n    'coordination',\n    'other'\n);\n\n-- Task status\nCREATE TYPE task_status AS ENUM (\n    'pending',\n    'assigned',\n    'accepted',\n    'in_progress',\n    'completed',\n    'cancelled'\n);\n\n-- Resource types\nCREATE TYPE resource_type AS ENUM (\n    'vehicle',\n    'equipment',\n    'personnel',\n    'supplies',\n    'facility'\n);\n\n-- Resource categories\nCREATE TYPE resource_category AS ENUM (\n    'ambulance',\n    'fire_truck',\n    'rescue_vehicle',\n    'medical_team',\n    'rescue_team',\n    'medical_supplies',\n    'rescue_equipment',\n    'communication_equipment',\n    'shelter',\n    'command_center'\n);\n\n-- Resource status\nCREATE TYPE resource_status AS ENUM (\n    'available',\n    'allocated',\n    'maintenance',\n    'out_of_service'\n);\n\n-- Notification types\nCREATE TYPE notification_type AS ENUM (\n    'emergency_alert',\n    'task_assignment',\n    'status_update',\n    'system_alert',\n    'reminder'\n);\n\n-- Notification channels\nCREATE TYPE notification_channel AS ENUM (\n    'email',\n    'sms',\n    'push_notification',\n    'websocket'\n);\n\n-- Notification status\nCREATE TYPE notification_status AS ENUM (\n    'pending',\n    'sent',\n    'delivered',\n    'failed',\n    'cancelled'\n);\n</code></pre>"},{"location":"architecture/database/#database-relationships","title":"Database Relationships","text":""},{"location":"architecture/database/#entity-relationship-diagram","title":"Entity Relationship Diagram","text":"<pre><code>erDiagram\n    USERS ||--o{ EMERGENCY_REQUESTS : creates\n    USERS ||--o{ TASKS : \"assigned to\"\n    USERS ||--o{ NOTIFICATIONS : receives\n    USERS ||--o{ RESOURCE_ALLOCATIONS : allocates\n    USERS ||--o{ AUDIT_LOGS : performs\n\n    EMERGENCY_REQUESTS ||--o{ TASKS : generates\n    EMERGENCY_REQUESTS ||--o{ RESOURCE_ALLOCATIONS : requires\n    EMERGENCY_REQUESTS ||--o{ AI_AGENT_INTERACTIONS : analyzed_by\n\n    TASKS ||--o{ RESOURCE_ALLOCATIONS : uses\n    TASKS ||--o{ AI_AGENT_INTERACTIONS : processed_by\n\n    RESOURCES ||--o{ RESOURCE_ALLOCATIONS : allocated_in\n\n    USERS {\n        uuid id PK\n        string email UK\n        string password_hash\n        string first_name\n        string last_name\n        string phone\n        user_role role\n        user_status status\n        jsonb profile\n        jsonb settings\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    EMERGENCY_REQUESTS {\n        uuid id PK\n        uuid user_id FK\n        string title\n        text description\n        emergency_category category\n        severity_level severity\n        integer priority\n        request_status status\n        point location\n        text location_address\n        jsonb contact_info\n        text[] media_urls\n        jsonb ai_analysis\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    TASKS {\n        uuid id PK\n        uuid request_id FK\n        uuid assigned_to FK\n        string title\n        text description\n        task_type type\n        integer priority\n        task_status status\n        text[] skills_required\n        point location\n        timestamp created_at\n        timestamp updated_at\n    }\n\n    RESOURCES {\n        uuid id PK\n        string name\n        resource_type type\n        resource_category category\n        resource_status status\n        point location\n        jsonb capacity\n        jsonb specifications\n        timestamp created_at\n        timestamp updated_at\n    }</code></pre>"},{"location":"architecture/database/#performance-optimization","title":"Performance Optimization","text":""},{"location":"architecture/database/#indexing-strategy","title":"Indexing Strategy","text":""},{"location":"architecture/database/#primary-indexes","title":"Primary Indexes","text":"<pre><code>-- Composite indexes for common queries\nCREATE INDEX idx_emergency_requests_status_priority ON emergency_requests(status, priority DESC);\nCREATE INDEX idx_tasks_assigned_status ON tasks(assigned_to, status);\nCREATE INDEX idx_resources_type_status_location ON resources(type, status) INCLUDE (location);\n\n-- Partial indexes for specific conditions\nCREATE INDEX idx_active_emergency_requests ON emergency_requests(created_at DESC)\n    WHERE status IN ('pending', 'assigned', 'in_progress');\n\nCREATE INDEX idx_available_resources ON resources(type, location)\n    WHERE status = 'available';\n\n-- Expression indexes\nCREATE INDEX idx_emergency_requests_location_text ON emergency_requests\n    USING GIN(to_tsvector('english', location_address));\n</code></pre>"},{"location":"architecture/database/#geographic-indexes","title":"Geographic Indexes","text":"<pre><code>-- Spatial indexes for location-based queries\nCREATE INDEX idx_emergency_requests_location_gist ON emergency_requests USING GIST(location);\nCREATE INDEX idx_tasks_location_gist ON tasks USING GIST(location);\nCREATE INDEX idx_resources_location_gist ON resources USING GIST(location);\n\n-- Compound spatial indexes\nCREATE INDEX idx_resources_type_location ON resources USING GIST(type, location);\n</code></pre>"},{"location":"architecture/database/#partitioning-strategy","title":"Partitioning Strategy","text":""},{"location":"architecture/database/#time-based-partitioning","title":"Time-based Partitioning","text":"<pre><code>-- Emergency requests partitioned by month\nCREATE TABLE emergency_requests_y2024m01 PARTITION OF emergency_requests\n    FOR VALUES FROM ('2024-01-01') TO ('2024-02-01');\n\nCREATE TABLE emergency_requests_y2024m02 PARTITION OF emergency_requests\n    FOR VALUES FROM ('2024-02-01') TO ('2024-03-01');\n\n-- Automated partition creation\nCREATE OR REPLACE FUNCTION create_monthly_partition(table_name TEXT, start_date DATE)\nRETURNS VOID AS $$\nDECLARE\n    partition_name TEXT;\n    end_date DATE;\nBEGIN\n    partition_name := table_name || '_y' || EXTRACT(YEAR FROM start_date) || 'm' || LPAD(EXTRACT(MONTH FROM start_date)::TEXT, 2, '0');\n    end_date := start_date + INTERVAL '1 month';\n\n    EXECUTE format('CREATE TABLE %I PARTITION OF %I FOR VALUES FROM (%L) TO (%L)',\n                   partition_name, table_name, start_date, end_date);\nEND;\n$$ LANGUAGE plpgsql;\n</code></pre>"},{"location":"architecture/database/#query-optimization","title":"Query Optimization","text":""},{"location":"architecture/database/#common-query-patterns","title":"Common Query Patterns","text":"<pre><code>-- Nearby emergency requests\nEXPLAIN (ANALYZE, BUFFERS)\nSELECT * FROM emergency_requests\nWHERE ST_DWithin(location, ST_MakePoint(79.8612, 6.9271)::geography, 5000)\n  AND status IN ('pending', 'assigned')\nORDER BY priority DESC, created_at DESC\nLIMIT 10;\n\n-- Available resources by type and location\nEXPLAIN (ANALYZE, BUFFERS)\nSELECT * FROM resources\nWHERE type = 'ambulance'\n  AND status = 'available'\n  AND ST_DWithin(location, ST_MakePoint(79.8612, 6.9271)::geography, 10000)\nORDER BY ST_Distance(location, ST_MakePoint(79.8612, 6.9271)::geography)\nLIMIT 5;\n\n-- User task history with performance metrics\nEXPLAIN (ANALYZE, BUFFERS)\nSELECT t.*, er.title as request_title, er.category\nFROM tasks t\nJOIN emergency_requests er ON t.request_id = er.id\nWHERE t.assigned_to = $1\n  AND t.status = 'completed'\n  AND t.created_at &gt;= NOW() - INTERVAL '30 days'\nORDER BY t.completed_at DESC;\n</code></pre>"},{"location":"architecture/database/#data-management","title":"Data Management","text":""},{"location":"architecture/database/#backup-strategy","title":"Backup Strategy","text":""},{"location":"architecture/database/#automated-backups","title":"Automated Backups","text":"<pre><code>-- Daily full backup\npg_dump --verbose --format=custom --no-owner --no-acl \\\n    --file=/backup/disaster_response_$(date +%Y%m%d).backup \\\n    disaster_response_db\n\n-- Continuous archiving with WAL-E\narchive_command = 'wal-e wal-push %p'\narchive_mode = on\nwal_level = replica\n</code></pre>"},{"location":"architecture/database/#point-in-time-recovery","title":"Point-in-Time Recovery","text":"<pre><code>-- Restore to specific point in time\npg_restore --verbose --clean --no-acl --no-owner \\\n    --dbname=disaster_response_db \\\n    /backup/disaster_response_20240115.backup\n\n-- Apply WAL files up to specific time\nrecovery_target_time = '2024-01-15 14:30:00'\n</code></pre>"},{"location":"architecture/database/#data-retention-policies","title":"Data Retention Policies","text":""},{"location":"architecture/database/#automated-cleanup","title":"Automated Cleanup","text":"<pre><code>-- Delete old notifications (older than 90 days)\nDELETE FROM notifications\nWHERE created_at &lt; NOW() - INTERVAL '90 days'\n  AND status IN ('delivered', 'failed');\n\n-- Archive old emergency requests (older than 2 years)\nINSERT INTO emergency_requests_archive\nSELECT * FROM emergency_requests\nWHERE created_at &lt; NOW() - INTERVAL '2 years';\n\nDELETE FROM emergency_requests\nWHERE created_at &lt; NOW() - INTERVAL '2 years';\n</code></pre>"},{"location":"architecture/database/#data-integrity","title":"Data Integrity","text":""},{"location":"architecture/database/#constraints-and-triggers","title":"Constraints and Triggers","text":"<pre><code>-- Data validation constraints\nALTER TABLE emergency_requests\nADD CONSTRAINT chk_priority_range\nCHECK (priority &gt;= 0 AND priority &lt;= 100);\n\nALTER TABLE tasks\nADD CONSTRAINT chk_rating_range\nCHECK (rating IS NULL OR (rating &gt;= 1 AND rating &lt;= 5));\n\n-- Audit trigger\nCREATE OR REPLACE FUNCTION audit_trigger_function()\nRETURNS TRIGGER AS $$\nBEGIN\n    IF TG_OP = 'INSERT' THEN\n        INSERT INTO audit_logs (entity_type, entity_id, action, new_values)\n        VALUES (TG_TABLE_NAME, NEW.id, 'INSERT', row_to_json(NEW));\n        RETURN NEW;\n    ELSIF TG_OP = 'UPDATE' THEN\n        INSERT INTO audit_logs (entity_type, entity_id, action, old_values, new_values)\n        VALUES (TG_TABLE_NAME, NEW.id, 'UPDATE', row_to_json(OLD), row_to_json(NEW));\n        RETURN NEW;\n    ELSIF TG_OP = 'DELETE' THEN\n        INSERT INTO audit_logs (entity_type, entity_id, action, old_values)\n        VALUES (TG_TABLE_NAME, OLD.id, 'DELETE', row_to_json(OLD));\n        RETURN OLD;\n    END IF;\n    RETURN NULL;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Apply audit trigger to critical tables\nCREATE TRIGGER audit_emergency_requests\n    AFTER INSERT OR UPDATE OR DELETE ON emergency_requests\n    FOR EACH ROW EXECUTE FUNCTION audit_trigger_function();\n</code></pre>"},{"location":"architecture/database/#scaling-considerations","title":"Scaling Considerations","text":""},{"location":"architecture/database/#read-replicas","title":"Read Replicas","text":"<pre><code>-- Read replica configuration\nprimary_conninfo = 'host=primary-db port=5432 user=replicator'\npromote_trigger_file = '/tmp/postgresql.trigger.5432'\nstandby_mode = on\n</code></pre>"},{"location":"architecture/database/#connection-pooling","title":"Connection Pooling","text":"<pre><code>// PgBouncer configuration\n[databases]\ndisaster_response = host=localhost port=5432 dbname=disaster_response_db\n\n[pgbouncer]\npool_mode = transaction\nmax_client_conn = 1000\ndefault_pool_size = 20\nreserve_pool_size = 5\n</code></pre>"},{"location":"architecture/database/#monitoring-and-maintenance","title":"Monitoring and Maintenance","text":""},{"location":"architecture/database/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code>-- Monitor slow queries\nSELECT query, mean_time, calls, total_time\nFROM pg_stat_statements\nORDER BY mean_time DESC\nLIMIT 10;\n\n-- Monitor index usage\nSELECT schemaname, tablename, indexname, idx_scan, idx_tup_read\nFROM pg_stat_user_indexes\nORDER BY idx_scan ASC;\n\n-- Monitor table sizes\nSELECT schemaname, tablename,\n       pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables\nWHERE schemaname = 'public'\nORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;\n</code></pre>"},{"location":"architecture/database/#maintenance-tasks","title":"Maintenance Tasks","text":"<pre><code>-- Automated vacuum and analyze\nvacuum_cost_delay = 20ms\nautovacuum = on\nautovacuum_max_workers = 3\nautovacuum_naptime = 60s\n\n-- Manual maintenance for large tables\nVACUUM ANALYZE emergency_requests;\nREINDEX INDEX CONCURRENTLY idx_emergency_requests_location_gist;\n</code></pre>"},{"location":"architecture/database/#security-considerations","title":"Security Considerations","text":""},{"location":"architecture/database/#row-level-security","title":"Row Level Security","text":"<pre><code>-- Enable RLS on sensitive tables\nALTER TABLE emergency_requests ENABLE ROW LEVEL SECURITY;\n\n-- Policy for users to see only their own requests\nCREATE POLICY user_own_requests ON emergency_requests\n    FOR ALL TO application_user\n    USING (user_id = current_setting('app.current_user_id')::uuid);\n\n-- Policy for first responders to see assigned requests\nCREATE POLICY responder_assigned_requests ON emergency_requests\n    FOR SELECT TO first_responder_role\n    USING (current_setting('app.current_user_id')::uuid = ANY(assigned_responders));\n</code></pre>"},{"location":"architecture/database/#data-encryption","title":"Data Encryption","text":"<pre><code>-- Encrypt sensitive fields\nCREATE EXTENSION IF NOT EXISTS pgcrypto;\n\n-- Store encrypted data\nINSERT INTO users (email, password_hash, phone)\nVALUES ('user@example.com', crypt('password', gen_salt('bf')), pgp_sym_encrypt('phone', 'encryption_key'));\n\n-- Query encrypted data\nSELECT pgp_sym_decrypt(phone::bytea, 'encryption_key') as decrypted_phone\nFROM users WHERE id = $1;\n</code></pre>"},{"location":"architecture/overview/","title":"System Architecture Overview","text":"<p>This document provides a comprehensive overview of the disaster response coordination system architecture, including system components, data flow, integration patterns, and design principles.</p>"},{"location":"architecture/overview/#system-architecture","title":"System Architecture","text":""},{"location":"architecture/overview/#high-level-architecture","title":"High-Level Architecture","text":"<pre><code>graph TB\n    subgraph \"Frontend Layer\"\n        WEB[Web Application]\n        MOBILE[Mobile App]\n        PWA[Progressive Web App]\n    end\n\n    subgraph \"API Gateway\"\n        GATEWAY[API Gateway]\n        AUTH[Authentication Service]\n        RATE[Rate Limiting]\n    end\n\n    subgraph \"Backend Services\"\n        USER[User Service]\n        REQ[Request Service]\n        TASK[Task Service]\n        RES[Resource Service]\n        NOTIF[Notification Service]\n        AI[AI Agent Service]\n    end\n\n    subgraph \"AI &amp; ML Layer\"\n        MCP[MCP Server]\n        ML[ML Models]\n        AGENTS[AI Agents]\n        PREDICT[Prediction Engine]\n    end\n\n    subgraph \"Data Layer\"\n        POSTGRES[(PostgreSQL)]\n        REDIS[(Redis Cache)]\n        S3[(File Storage)]\n        SEARCH[(Search Engine)]\n    end\n\n    subgraph \"External Services\"\n        SMS[SMS Gateway]\n        EMAIL[Email Service]\n        WEATHER[Weather API]\n        MAPS[Mapping Service]\n        EMERGENCY[Emergency Services]\n    end\n\n    subgraph \"Infrastructure\"\n        LB[Load Balancer]\n        MONITOR[Monitoring]\n        LOGS[Logging]\n        BACKUP[Backup Service]\n    end\n\n    WEB --&gt; GATEWAY\n    MOBILE --&gt; GATEWAY\n    PWA --&gt; GATEWAY\n\n    GATEWAY --&gt; AUTH\n    GATEWAY --&gt; RATE\n    GATEWAY --&gt; USER\n    GATEWAY --&gt; REQ\n    GATEWAY --&gt; TASK\n    GATEWAY --&gt; RES\n    GATEWAY --&gt; NOTIF\n    GATEWAY --&gt; AI\n\n    AI --&gt; MCP\n    AI --&gt; ML\n    AI --&gt; AGENTS\n    AI --&gt; PREDICT\n\n    USER --&gt; POSTGRES\n    REQ --&gt; POSTGRES\n    TASK --&gt; POSTGRES\n    RES --&gt; POSTGRES\n\n    USER --&gt; REDIS\n    REQ --&gt; REDIS\n    TASK --&gt; REDIS\n    RES --&gt; REDIS\n\n    NOTIF --&gt; SMS\n    NOTIF --&gt; EMAIL\n\n    AI --&gt; WEATHER\n    AI --&gt; MAPS\n\n    REQ --&gt; EMERGENCY\n\n    LB --&gt; GATEWAY\n    MONITOR --&gt; USER\n    MONITOR --&gt; REQ\n    MONITOR --&gt; TASK\n    MONITOR --&gt; RES\n\n    LOGS --&gt; USER\n    LOGS --&gt; REQ\n    LOGS --&gt; TASK\n    LOGS --&gt; RES</code></pre>"},{"location":"architecture/overview/#system-components","title":"System Components","text":""},{"location":"architecture/overview/#frontend-layer","title":"Frontend Layer","text":"<ul> <li>Web Application: React-based responsive web interface</li> <li>Mobile App: React Native cross-platform mobile application</li> <li>Progressive Web App: PWA capabilities for offline functionality</li> </ul>"},{"location":"architecture/overview/#api-gateway-layer","title":"API Gateway Layer","text":"<ul> <li>API Gateway: Central entry point for all API requests</li> <li>Authentication Service: JWT-based authentication and authorization</li> <li>Rate Limiting: Request rate limiting and throttling</li> </ul>"},{"location":"architecture/overview/#backend-services","title":"Backend Services","text":"<ul> <li>User Service: User management, profiles, and authentication</li> <li>Request Service: Emergency request processing and management</li> <li>Task Service: Task creation, assignment, and tracking</li> <li>Resource Service: Resource allocation and management</li> <li>Notification Service: Multi-channel notification delivery</li> <li>AI Agent Service: AI agent coordination and management</li> </ul>"},{"location":"architecture/overview/#ai-ml-layer","title":"AI &amp; ML Layer","text":"<ul> <li>MCP Server: Model Context Protocol server for AI integration</li> <li>ML Models: Machine learning models for prediction and analysis</li> <li>AI Agents: Specialized AI agents for different tasks</li> <li>Prediction Engine: Predictive analytics and forecasting</li> </ul>"},{"location":"architecture/overview/#data-layer","title":"Data Layer","text":"<ul> <li>PostgreSQL: Primary relational database</li> <li>Redis Cache: In-memory caching and session storage</li> <li>File Storage: S3-compatible object storage for files</li> <li>Search Engine: Elasticsearch for advanced search capabilities</li> </ul>"},{"location":"architecture/overview/#design-principles","title":"Design Principles","text":""},{"location":"architecture/overview/#scalability","title":"Scalability","text":"<ul> <li>Horizontal Scaling: Services designed for horizontal scaling</li> <li>Microservices Architecture: Loosely coupled, independently deployable services</li> <li>Load Distribution: Traffic distribution across multiple instances</li> <li>Database Sharding: Database partitioning for performance</li> </ul>"},{"location":"architecture/overview/#reliability","title":"Reliability","text":"<ul> <li>High Availability: 99.9% uptime target with redundancy</li> <li>Fault Tolerance: Graceful degradation and error handling</li> <li>Data Consistency: ACID transactions and eventual consistency</li> <li>Backup and Recovery: Automated backup and disaster recovery</li> </ul>"},{"location":"architecture/overview/#security","title":"Security","text":"<ul> <li>Zero Trust Architecture: Verify every request and user</li> <li>End-to-End Encryption: Data encryption in transit and at rest</li> <li>Role-Based Access Control: Fine-grained permission system</li> <li>Audit Logging: Comprehensive audit trails</li> </ul>"},{"location":"architecture/overview/#performance","title":"Performance","text":"<ul> <li>Sub-second Response: Target response times under 1 second</li> <li>Caching Strategy: Multi-layer caching for performance</li> <li>CDN Integration: Content delivery network for static assets</li> <li>Database Optimization: Query optimization and indexing</li> </ul>"},{"location":"architecture/overview/#data-flow-architecture","title":"Data Flow Architecture","text":""},{"location":"architecture/overview/#emergency-request-processing-flow","title":"Emergency Request Processing Flow","text":"<pre><code>sequenceDiagram\n    participant U as User\n    participant W as Web App\n    participant G as API Gateway\n    participant R as Request Service\n    participant A as AI Agent\n    participant M as MCP Server\n    participant D as Database\n    participant N as Notification\n\n    U-&gt;&gt;W: Submit Emergency Request\n    W-&gt;&gt;G: POST /api/requests\n    G-&gt;&gt;R: Forward Request\n    R-&gt;&gt;D: Store Request\n    R-&gt;&gt;A: Trigger AI Analysis\n    A-&gt;&gt;M: Request Analysis\n    M-&gt;&gt;A: Return Analysis\n    A-&gt;&gt;R: Return Recommendations\n    R-&gt;&gt;D: Update Request with Analysis\n    R-&gt;&gt;N: Trigger Notifications\n    N-&gt;&gt;U: Send Confirmation\n    R-&gt;&gt;W: Return Response\n    W-&gt;&gt;U: Display Confirmation</code></pre>"},{"location":"architecture/overview/#real-time-communication-flow","title":"Real-time Communication Flow","text":"<pre><code>sequenceDiagram\n    participant C as Client\n    participant W as WebSocket\n    participant S as Service\n    participant R as Redis\n    participant D as Database\n\n    C-&gt;&gt;W: Connect WebSocket\n    W-&gt;&gt;S: Authenticate User\n    S-&gt;&gt;D: Verify Credentials\n    D-&gt;&gt;S: Return User Info\n    S-&gt;&gt;W: Confirm Authentication\n    W-&gt;&gt;C: Connection Established\n\n    S-&gt;&gt;R: Publish Event\n    R-&gt;&gt;W: Event Notification\n    W-&gt;&gt;C: Real-time Update</code></pre>"},{"location":"architecture/overview/#integration-patterns","title":"Integration Patterns","text":""},{"location":"architecture/overview/#api-integration","title":"API Integration","text":"<ul> <li>RESTful APIs: Standard REST endpoints for CRUD operations</li> <li>GraphQL: Flexible query language for complex data fetching</li> <li>WebSocket: Real-time bidirectional communication</li> <li>Webhooks: Event-driven external service integration</li> </ul>"},{"location":"architecture/overview/#message-queue-integration","title":"Message Queue Integration","text":"<pre><code>graph LR\n    subgraph \"Message Queue System\"\n        PRODUCER[Producer Service]\n        QUEUE[Message Queue]\n        CONSUMER[Consumer Service]\n    end\n\n    PRODUCER --&gt; QUEUE\n    QUEUE --&gt; CONSUMER\n\n    subgraph \"Use Cases\"\n        EMAIL[Email Notifications]\n        SMS[SMS Alerts]\n        AI[AI Processing]\n        REPORT[Report Generation]\n    end\n\n    CONSUMER --&gt; EMAIL\n    CONSUMER --&gt; SMS\n    CONSUMER --&gt; AI\n    CONSUMER --&gt; REPORT</code></pre>"},{"location":"architecture/overview/#external-service-integration","title":"External Service Integration","text":"<ul> <li>Weather Services: Real-time weather data integration</li> <li>Mapping Services: Geographic data and routing</li> <li>Emergency Services: Integration with 911/119 systems</li> <li>Government Systems: Inter-agency data sharing</li> </ul>"},{"location":"architecture/overview/#deployment-architecture","title":"Deployment Architecture","text":""},{"location":"architecture/overview/#containerized-deployment","title":"Containerized Deployment","text":"<pre><code>graph TB\n    subgraph \"Kubernetes Cluster\"\n        subgraph \"Frontend Namespace\"\n            WEB_POD[Web App Pods]\n            NGINX[Nginx Ingress]\n        end\n\n        subgraph \"Backend Namespace\"\n            API_POD[API Service Pods]\n            WORKER_POD[Worker Pods]\n            AI_POD[AI Agent Pods]\n        end\n\n        subgraph \"Data Namespace\"\n            DB_POD[Database Pods]\n            CACHE_POD[Cache Pods]\n            STORAGE_POD[Storage Pods]\n        end\n\n        subgraph \"Monitoring Namespace\"\n            PROM[Prometheus]\n            GRAF[Grafana]\n            ALERT[Alertmanager]\n        end\n    end\n\n    subgraph \"External Services\"\n        CDN[Content Delivery Network]\n        DNS[DNS Service]\n        BACKUP[Backup Storage]\n    end\n\n    NGINX --&gt; API_POD\n    API_POD --&gt; DB_POD\n    API_POD --&gt; CACHE_POD\n    WORKER_POD --&gt; STORAGE_POD\n\n    PROM --&gt; API_POD\n    PROM --&gt; DB_POD\n    GRAF --&gt; PROM\n    ALERT --&gt; PROM\n\n    CDN --&gt; WEB_POD\n    DNS --&gt; NGINX</code></pre>"},{"location":"architecture/overview/#multi-environment-strategy","title":"Multi-Environment Strategy","text":"<ul> <li>Development: Local development environment</li> <li>Staging: Pre-production testing environment</li> <li>Production: Live production environment</li> <li>Disaster Recovery: Backup production environment</li> </ul>"},{"location":"architecture/overview/#security-architecture","title":"Security Architecture","text":""},{"location":"architecture/overview/#security-layers","title":"Security Layers","text":"<pre><code>graph TB\n    subgraph \"Network Security\"\n        WAF[Web Application Firewall]\n        DDoS[DDoS Protection]\n        VPC[Virtual Private Cloud]\n    end\n\n    subgraph \"Application Security\"\n        AUTH[Authentication]\n        AUTHZ[Authorization]\n        RBAC[Role-Based Access Control]\n        JWT[JWT Tokens]\n    end\n\n    subgraph \"Data Security\"\n        ENCRYPT[Encryption at Rest]\n        TLS[TLS/SSL]\n        HASH[Password Hashing]\n        AUDIT[Audit Logging]\n    end\n\n    subgraph \"Infrastructure Security\"\n        SECRETS[Secret Management]\n        SCAN[Vulnerability Scanning]\n        MONITOR[Security Monitoring]\n        BACKUP[Secure Backups]\n    end\n\n    WAF --&gt; AUTH\n    AUTH --&gt; ENCRYPT\n    ENCRYPT --&gt; SECRETS</code></pre>"},{"location":"architecture/overview/#authentication-and-authorization-flow","title":"Authentication and Authorization Flow","text":"<pre><code>sequenceDiagram\n    participant U as User\n    participant C as Client\n    participant A as Auth Service\n    participant R as Resource Service\n    participant D as Database\n\n    U-&gt;&gt;C: Login Request\n    C-&gt;&gt;A: Authenticate User\n    A-&gt;&gt;D: Verify Credentials\n    D-&gt;&gt;A: Return User Data\n    A-&gt;&gt;C: Return JWT Token\n    C-&gt;&gt;U: Login Success\n\n    U-&gt;&gt;C: Access Resource\n    C-&gt;&gt;R: Request with JWT\n    R-&gt;&gt;A: Validate Token\n    A-&gt;&gt;R: Token Valid + Permissions\n    R-&gt;&gt;D: Access Resource\n    D-&gt;&gt;R: Return Data\n    R-&gt;&gt;C: Return Response\n    C-&gt;&gt;U: Display Data</code></pre>"},{"location":"architecture/overview/#performance-architecture","title":"Performance Architecture","text":""},{"location":"architecture/overview/#caching-strategy","title":"Caching Strategy","text":"<pre><code>graph TB\n    subgraph \"Client Side\"\n        BROWSER[Browser Cache]\n        LOCAL[Local Storage]\n    end\n\n    subgraph \"CDN Layer\"\n        CDN[Content Delivery Network]\n    end\n\n    subgraph \"Application Layer\"\n        APP_CACHE[Application Cache]\n        SESSION[Session Cache]\n    end\n\n    subgraph \"Database Layer\"\n        QUERY_CACHE[Query Cache]\n        REDIS[Redis Cache]\n    end\n\n    subgraph \"Data Sources\"\n        DB[(Database)]\n        API[External APIs]\n    end\n\n    BROWSER --&gt; CDN\n    CDN --&gt; APP_CACHE\n    APP_CACHE --&gt; REDIS\n    REDIS --&gt; DB\n\n    SESSION --&gt; REDIS\n    QUERY_CACHE --&gt; DB</code></pre>"},{"location":"architecture/overview/#load-balancing-strategy","title":"Load Balancing Strategy","text":"<ul> <li>Round Robin: Equal distribution of requests</li> <li>Least Connections: Route to least busy server</li> <li>Geographic: Route based on user location</li> <li>Health Checks: Automatic failover for unhealthy servers</li> </ul>"},{"location":"architecture/overview/#monitoring-and-observability","title":"Monitoring and Observability","text":""},{"location":"architecture/overview/#monitoring-stack","title":"Monitoring Stack","text":"<pre><code>graph TB\n    subgraph \"Application Metrics\"\n        APP[Application Metrics]\n        CUSTOM[Custom Metrics]\n        BUSINESS[Business Metrics]\n    end\n\n    subgraph \"Infrastructure Metrics\"\n        CPU[CPU Usage]\n        MEMORY[Memory Usage]\n        DISK[Disk I/O]\n        NETWORK[Network Traffic]\n    end\n\n    subgraph \"Collection Layer\"\n        PROM[Prometheus]\n        GRAFANA[Grafana]\n        ALERT[Alertmanager]\n    end\n\n    subgraph \"Alerting\"\n        EMAIL[Email Alerts]\n        SLACK[Slack Notifications]\n        SMS[SMS Alerts]\n        WEBHOOK[Webhook Alerts]\n    end\n\n    APP --&gt; PROM\n    CUSTOM --&gt; PROM\n    BUSINESS --&gt; PROM\n    CPU --&gt; PROM\n    MEMORY --&gt; PROM\n    DISK --&gt; PROM\n    NETWORK --&gt; PROM\n\n    PROM --&gt; GRAFANA\n    PROM --&gt; ALERT\n\n    ALERT --&gt; EMAIL\n    ALERT --&gt; SLACK\n    ALERT --&gt; SMS\n    ALERT --&gt; WEBHOOK</code></pre>"},{"location":"architecture/overview/#logging-strategy","title":"Logging Strategy","text":"<ul> <li>Structured Logging: JSON-formatted logs with metadata</li> <li>Centralized Logging: All logs aggregated in central system</li> <li>Log Levels: Debug, Info, Warning, Error, Critical</li> <li>Log Retention: Configurable retention policies</li> </ul>"},{"location":"architecture/overview/#disaster-recovery","title":"Disaster Recovery","text":""},{"location":"architecture/overview/#backup-strategy","title":"Backup Strategy","text":"<ul> <li>Database Backups: Daily automated database backups</li> <li>File Backups: Regular backup of uploaded files</li> <li>Configuration Backups: System configuration backups</li> <li>Cross-Region Replication: Geographic backup distribution</li> </ul>"},{"location":"architecture/overview/#recovery-procedures","title":"Recovery Procedures","text":"<ol> <li>Assessment: Determine scope and impact of disaster</li> <li>Activation: Activate disaster recovery procedures</li> <li>Recovery: Restore systems from backups</li> <li>Validation: Verify system functionality</li> <li>Communication: Update stakeholders on status</li> </ol>"},{"location":"architecture/overview/#technology-stack","title":"Technology Stack","text":""},{"location":"architecture/overview/#frontend-technologies","title":"Frontend Technologies","text":"<ul> <li>React: User interface framework</li> <li>TypeScript: Type-safe JavaScript</li> <li>Material-UI: Component library</li> <li>Redux: State management</li> <li>React Query: Server state management</li> </ul>"},{"location":"architecture/overview/#backend-technologies","title":"Backend Technologies","text":"<ul> <li>Node.js: Runtime environment</li> <li>Express.js: Web framework</li> <li>TypeScript: Type-safe JavaScript</li> <li>Prisma: Database ORM</li> <li>Socket.io: WebSocket implementation</li> </ul>"},{"location":"architecture/overview/#database-technologies","title":"Database Technologies","text":"<ul> <li>PostgreSQL: Primary database</li> <li>Redis: Caching and sessions</li> <li>Elasticsearch: Search and analytics</li> <li>MinIO: Object storage</li> </ul>"},{"location":"architecture/overview/#aiml-technologies","title":"AI/ML Technologies","text":"<ul> <li>Python: AI/ML development</li> <li>FastAPI: AI service framework</li> <li>OpenAI API: Language model integration</li> <li>scikit-learn: Machine learning library</li> <li>TensorFlow: Deep learning framework</li> </ul>"},{"location":"architecture/overview/#infrastructure-technologies","title":"Infrastructure Technologies","text":"<ul> <li>Docker: Containerization</li> <li>Kubernetes: Container orchestration</li> <li>Helm: Kubernetes package manager</li> <li>Terraform: Infrastructure as code</li> <li>GitHub Actions: CI/CD pipeline</li> </ul>"},{"location":"architecture/overview/#scalability-considerations","title":"Scalability Considerations","text":""},{"location":"architecture/overview/#horizontal-scaling","title":"Horizontal Scaling","text":"<ul> <li>Service Replication: Multiple instances of each service</li> <li>Database Sharding: Horizontal database partitioning</li> <li>Load Distribution: Request distribution across instances</li> <li>Auto-scaling: Automatic scaling based on demand</li> </ul>"},{"location":"architecture/overview/#vertical-scaling","title":"Vertical Scaling","text":"<ul> <li>Resource Optimization: CPU and memory optimization</li> <li>Database Tuning: Query and index optimization</li> <li>Cache Optimization: Efficient caching strategies</li> <li>Connection Pooling: Database connection optimization</li> </ul>"},{"location":"architecture/overview/#future-architecture-considerations","title":"Future Architecture Considerations","text":""},{"location":"architecture/overview/#emerging-technologies","title":"Emerging Technologies","text":"<ul> <li>Edge Computing: Processing closer to data sources</li> <li>5G Integration: Enhanced mobile connectivity</li> <li>IoT Integration: Internet of Things device integration</li> <li>Blockchain: Secure and transparent record keeping</li> </ul>"},{"location":"architecture/overview/#architecture-evolution","title":"Architecture Evolution","text":"<ul> <li>Serverless Computing: Function-as-a-Service adoption</li> <li>Event-Driven Architecture: Enhanced event-driven patterns</li> <li>Multi-Cloud Strategy: Cloud provider diversification</li> <li>API-First Design: API-centric architecture approach</li> </ul>"},{"location":"development/contributing/","title":"Contributing Guide","text":"<p>Welcome to the disaster response coordination web application project! This guide will help you get started with contributing to the codebase.</p>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":""},{"location":"development/contributing/#prerequisites","title":"Prerequisites","text":"<p>Before contributing, ensure you have the following installed:</p> <ul> <li>Node.js (v18 or higher)</li> <li>Python (v3.11 or higher)</li> <li>Docker and Docker Compose</li> <li>Git</li> <li>VS Code (recommended) with suggested extensions</li> </ul>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":"<ol> <li>Fork and Clone</li> </ol> <pre><code>git clone https://github.com/your-username/disaster-response-app.git\ncd disaster-response-app\n</code></pre> <ol> <li>Install Dependencies</li> </ol> <pre><code># Frontend\ncd frontend\nnpm install\n\n# Backend\ncd ../backend\npip install -r requirements.txt\n\n# AI Services\ncd ../ai_services\npip install -r requirements.txt\n</code></pre> <ol> <li>Environment Setup</li> </ol> <pre><code># Copy environment templates\ncp frontend/.env.example frontend/.env\ncp backend/.env.example backend/.env\ncp ai_services/.env.example ai_services/.env\n</code></pre> <ol> <li>Database Setup</li> </ol> <pre><code>cd backend\nalembic upgrade head\n</code></pre> <ol> <li>Start Development Servers</li> </ol> <pre><code># Terminal 1: Frontend\ncd frontend &amp;&amp; npm start\n\n# Terminal 2: Backend\ncd backend &amp;&amp; uvicorn app.main:app --reload\n\n# Terminal 3: AI Services\ncd ai_services &amp;&amp; python run_mcp_server.py\n</code></pre>"},{"location":"development/contributing/#code-style-and-standards","title":"Code Style and Standards","text":""},{"location":"development/contributing/#frontend-typescriptreact","title":"Frontend (TypeScript/React)","text":"<p>We use the following tools for code quality:</p> <ul> <li>ESLint: Code linting</li> <li>Prettier: Code formatting</li> <li>TypeScript: Type checking</li> </ul>"},{"location":"development/contributing/#code-style-rules","title":"Code Style Rules","text":"<pre><code>// \u2705 Good: Use descriptive names\nconst emergencyRequestForm = () =&gt; { ... };\n\n// \u274c Bad: Generic names\nconst form = () =&gt; { ... };\n\n// \u2705 Good: Proper typing\ninterface EmergencyRequest {\n  id: string;\n  type: 'medical' | 'fire' | 'natural_disaster' | 'security';\n  description: string;\n  location: GeoLocation;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n}\n\n// \u2705 Good: Component structure\nconst EmergencyRequestCard: React.FC&lt;{ request: EmergencyRequest }&gt; = ({ request }) =&gt; {\n  return (\n    &lt;div className=\"bg-white shadow-md rounded-lg p-4\"&gt;\n      {/* Component content */}\n    &lt;/div&gt;\n  );\n};\n</code></pre>"},{"location":"development/contributing/#component-guidelines","title":"Component Guidelines","text":"<ol> <li>Functional Components: Use function components with hooks</li> <li>Props Interface: Define interfaces for all component props</li> <li>Custom Hooks: Extract reusable logic into custom hooks</li> <li>Error Boundaries: Wrap components that might throw errors</li> <li>Accessibility: Include proper ARIA labels and semantic HTML</li> </ol>"},{"location":"development/contributing/#backend-pythonfastapi","title":"Backend (Python/FastAPI)","text":"<p>We follow PEP 8 and use the following tools:</p> <ul> <li>Black: Code formatting</li> <li>Flake8: Code linting</li> <li>mypy: Type checking</li> <li>isort: Import sorting</li> </ul>"},{"location":"development/contributing/#code-style-rules_1","title":"Code Style Rules","text":"<pre><code># \u2705 Good: Clear function signatures with type hints\nasync def create_emergency_request(\n    request: EmergencyRequestCreate,\n    current_user: User = Depends(get_current_user),\n    db: Session = Depends(get_db)\n) -&gt; EmergencyRequest:\n    \"\"\"Create a new emergency request.\"\"\"\n    # Implementation here\n    pass\n\n# \u2705 Good: Proper error handling\nfrom app.core.exceptions import ValidationError\n\nasync def validate_request_data(data: dict) -&gt; dict:\n    try:\n        # Validation logic\n        return validated_data\n    except ValueError as e:\n        raise ValidationError(f\"Invalid request data: {str(e)}\")\n\n# \u2705 Good: Dependency injection\nclass EmergencyRequestService:\n    def __init__(self, db: Session, ai_service: AIService):\n        self.db = db\n        self.ai_service = ai_service\n\n    async def process_request(self, request: EmergencyRequestCreate) -&gt; EmergencyRequest:\n        # Service implementation\n        pass\n</code></pre>"},{"location":"development/contributing/#api-guidelines","title":"API Guidelines","text":"<ol> <li>RESTful Design: Follow REST principles for API endpoints</li> <li>Response Models: Use Pydantic models for all responses</li> <li>Error Handling: Implement consistent error response format</li> <li>Authentication: Secure endpoints with proper authentication</li> <li>Documentation: Use docstrings and OpenAPI annotations</li> </ol>"},{"location":"development/contributing/#ai-services-python","title":"AI Services (Python)","text":""},{"location":"development/contributing/#ai-code-guidelines","title":"AI Code Guidelines","text":"<pre><code># \u2705 Good: Agent base class implementation\nfrom abc import ABC, abstractmethod\nfrom typing import Dict, List, Any\n\nclass BaseAgent(ABC):\n    \"\"\"Base class for all AI agents.\"\"\"\n\n    def __init__(self, name: str, capabilities: List[str]):\n        self.name = name\n        self.capabilities = capabilities\n\n    @abstractmethod\n    async def process(self, input_data: Dict[str, Any]) -&gt; Dict[str, Any]:\n        \"\"\"Process input and return response.\"\"\"\n        pass\n\n    async def validate_input(self, input_data: Dict[str, Any]) -&gt; bool:\n        \"\"\"Validate input data before processing.\"\"\"\n        required_fields = self.get_required_fields()\n        return all(field in input_data for field in required_fields)\n\n# \u2705 Good: MCP tool implementation\nfrom mcp import Tool\n\nclass EmergencyResponseTool(Tool):\n    \"\"\"Tool for processing emergency responses.\"\"\"\n\n    name = \"process_emergency_request\"\n    description = \"Process and prioritize emergency requests\"\n\n    async def run(self, request_data: dict) -&gt; dict:\n        \"\"\"Execute the emergency response processing.\"\"\"\n        # Tool implementation\n        return {\"status\": \"processed\", \"priority\": \"high\"}\n</code></pre>"},{"location":"development/contributing/#git-workflow","title":"Git Workflow","text":""},{"location":"development/contributing/#branch-naming-convention","title":"Branch Naming Convention","text":"<ul> <li><code>feature/description</code> - New features</li> <li><code>bugfix/description</code> - Bug fixes</li> <li><code>hotfix/description</code> - Critical fixes</li> <li><code>docs/description</code> - Documentation updates</li> <li><code>refactor/description</code> - Code refactoring</li> </ul>"},{"location":"development/contributing/#commit-message-format","title":"Commit Message Format","text":"<p>We follow the Conventional Commits specification:</p> <pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre>"},{"location":"development/contributing/#types","title":"Types","text":"<ul> <li><code>feat</code>: New feature</li> <li><code>fix</code>: Bug fix</li> <li><code>docs</code>: Documentation changes</li> <li><code>style</code>: Code style changes (formatting, etc.)</li> <li><code>refactor</code>: Code refactoring</li> <li><code>test</code>: Adding or modifying tests</li> <li><code>chore</code>: Maintenance tasks</li> </ul>"},{"location":"development/contributing/#examples","title":"Examples","text":"<pre><code># Good commit messages\nfeat(auth): add JWT token refresh functionality\nfix(websocket): resolve connection timeout issues\ndocs(api): update authentication endpoint documentation\ntest(agents): add unit tests for emergency agent\nrefactor(database): optimize query performance\n\n# Bad commit messages\nfix: bug fix\nupdate code\nchanges\n</code></pre>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Create Feature Branch</li> </ol> <pre><code>git checkout -b feature/emergency-request-ui\n</code></pre> <ol> <li>Make Changes and Commit</li> </ol> <pre><code>git add .\ngit commit -m \"feat(ui): add emergency request form component\"\n</code></pre> <ol> <li>Push and Create PR</li> </ol> <pre><code>git push origin feature/emergency-request-ui\n</code></pre> <ol> <li>PR Template</li> </ol> <pre><code>## Description\n\nBrief description of changes made.\n\n## Type of Change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n\n## Testing\n\n- [ ] Unit tests pass\n- [ ] Integration tests pass\n- [ ] Manual testing completed\n\n## Checklist\n\n- [ ] Code follows style guidelines\n- [ ] Self-review completed\n- [ ] Documentation updated\n- [ ] No console errors or warnings\n</code></pre>"},{"location":"development/contributing/#testing-requirements","title":"Testing Requirements","text":""},{"location":"development/contributing/#before-submitting-pr","title":"Before Submitting PR","text":"<ol> <li>Run All Tests</li> </ol> <pre><code># Frontend tests\ncd frontend &amp;&amp; npm test\n\n# Backend tests\ncd backend &amp;&amp; pytest\n\n# AI service tests\ncd ai_services &amp;&amp; pytest\n</code></pre> <ol> <li> <p>Code Coverage</p> </li> <li> <p>Maintain minimum 80% code coverage</p> </li> <li>Add tests for new features</li> <li> <p>Update tests for modified functionality</p> </li> <li> <p>Manual Testing</p> </li> <li>Test the specific feature/fix</li> <li>Verify no regression in existing functionality</li> <li>Test across different user roles</li> </ol>"},{"location":"development/contributing/#documentation-standards","title":"Documentation Standards","text":""},{"location":"development/contributing/#code-documentation","title":"Code Documentation","text":"<ol> <li>Function Documentation</li> </ol> <pre><code>async def process_emergency_request(\n    request: EmergencyRequestCreate,\n    db: Session\n) -&gt; EmergencyRequest:\n    \"\"\"\n    Process a new emergency request.\n\n    Args:\n        request: The emergency request data to process\n        db: Database session for data persistence\n\n    Returns:\n        EmergencyRequest: The created emergency request object\n\n    Raises:\n        ValidationError: If request data is invalid\n        DatabaseError: If database operation fails\n    \"\"\"\n</code></pre> <ol> <li>Component Documentation <pre><code>/**\n * Emergency request form component for affected individuals.\n *\n * Allows users to submit emergency requests with location,\n * type, description, and priority information.\n *\n * @param onSubmit - Callback function called when form is submitted\n * @param initialData - Optional initial form data for editing\n */\ninterface EmergencyRequestFormProps {\n  onSubmit: (data: EmergencyRequestData) =&gt; void;\n  initialData?: Partial&lt;EmergencyRequestData&gt;;\n}\n</code></pre></li> </ol>"},{"location":"development/contributing/#readme-updates","title":"README Updates","text":"<p>When adding new features or making significant changes:</p> <ol> <li>Update relevant README sections</li> <li>Add/update setup instructions if needed</li> <li>Update feature list and descriptions</li> <li>Include new environment variables</li> </ol>"},{"location":"development/contributing/#code-review-guidelines","title":"Code Review Guidelines","text":""},{"location":"development/contributing/#for-authors","title":"For Authors","text":"<ol> <li>Self-Review: Review your own code before submitting</li> <li>Small PRs: Keep PRs focused and reasonably sized</li> <li>Clear Description: Explain what and why, not just how</li> <li>Testing: Include relevant tests and manual testing notes</li> </ol>"},{"location":"development/contributing/#for-reviewers","title":"For Reviewers","text":"<ol> <li>Constructive Feedback: Be helpful and specific</li> <li>Test the Changes: Pull and test significant changes</li> <li>Ask Questions: If something is unclear, ask for clarification</li> <li>Approve Thoughtfully: Ensure code meets quality standards</li> </ol>"},{"location":"development/contributing/#issue-reporting","title":"Issue Reporting","text":""},{"location":"development/contributing/#bug-reports","title":"Bug Reports","text":"<p>Use this template for bug reports:</p> <pre><code>**Bug Description**\nA clear description of what the bug is.\n\n**Steps to Reproduce**\n\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected Behavior**\nWhat you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots.\n\n**Environment**\n\n- OS: [e.g. macOS, Windows, Linux]\n- Browser: [e.g. Chrome, Firefox, Safari]\n- Version: [e.g. 22]\n\n**Additional Context**\nAny other context about the problem.\n</code></pre>"},{"location":"development/contributing/#feature-requests","title":"Feature Requests","text":"<p>Use this template for feature requests:</p> <pre><code>**Feature Description**\nA clear description of the feature you'd like to see.\n\n**Use Case**\nDescribe the problem this feature would solve.\n\n**Proposed Solution**\nDescribe how you envision this feature working.\n\n**Alternative Solutions**\nAny alternative approaches you've considered.\n\n**Additional Context**\nAny other context or screenshots about the feature request.\n</code></pre>"},{"location":"development/contributing/#development-environment","title":"Development Environment","text":""},{"location":"development/contributing/#recommended-vs-code-extensions","title":"Recommended VS Code Extensions","text":"<pre><code>{\n  \"recommendations\": [\n    \"ms-python.python\",\n    \"ms-python.black-formatter\",\n    \"ms-python.flake8\",\n    \"bradlc.vscode-tailwindcss\",\n    \"esbenp.prettier-vscode\",\n    \"ms-vscode.vscode-typescript-next\",\n    \"ms-vscode.vscode-eslint\",\n    \"ms-python.mypy-type-checker\"\n  ]\n}\n</code></pre>"},{"location":"development/contributing/#docker-development","title":"Docker Development","text":"<p>For consistent development environment:</p> <pre><code># Build and start all services\ndocker-compose up --build\n\n# Start specific service\ndocker-compose up frontend\n\n# Run tests in containers\ndocker-compose run frontend npm test\ndocker-compose run backend pytest\n</code></pre>"},{"location":"development/contributing/#release-process","title":"Release Process","text":""},{"location":"development/contributing/#version-numbering","title":"Version Numbering","text":"<p>We use Semantic Versioning:</p> <ul> <li>MAJOR: Breaking changes</li> <li>MINOR: New features (backward compatible)</li> <li>PATCH: Bug fixes (backward compatible)</li> </ul>"},{"location":"development/contributing/#release-checklist","title":"Release Checklist","text":"<ol> <li>[ ] All tests pass</li> <li>[ ] Documentation updated</li> <li>[ ] CHANGELOG.md updated</li> <li>[ ] Version numbers updated</li> <li>[ ] Create release tag</li> <li>[ ] Deploy to staging</li> <li>[ ] Manual testing on staging</li> <li>[ ] Deploy to production</li> </ol>"},{"location":"development/contributing/#getting-help","title":"Getting Help","text":"<ul> <li>Documentation: Check the <code>/docs</code> directory</li> <li>Discussions: Use GitHub Discussions for questions</li> <li>Issues: Create an issue for bugs or feature requests</li> <li>Code Review: Request review from maintainers</li> </ul>"},{"location":"development/contributing/#license","title":"License","text":"<p>By contributing to this project, you agree that your contributions will be licensed under the same license as the project.</p> <p>Thank you for contributing to the disaster response coordination system! Your efforts help make emergency response more effective and save lives.</p>"},{"location":"development/deployment/","title":"Deployment Guide","text":"<p>This document provides comprehensive guidance for deploying the disaster response coordination web application to production environments.</p>"},{"location":"development/deployment/#deployment-overview","title":"Deployment Overview","text":"<p>The application supports multiple deployment strategies:</p> <ul> <li>Docker Compose: Simple single-server deployment</li> <li>Kubernetes: Scalable container orchestration</li> <li>Azure Container Apps: Cloud-native deployment</li> <li>Manual Deployment: Traditional server setup</li> </ul>"},{"location":"development/deployment/#prerequisites","title":"Prerequisites","text":""},{"location":"development/deployment/#system-requirements","title":"System Requirements","text":"<ul> <li>CPU: 2+ cores for production workloads</li> <li>Memory: 4GB+ RAM (8GB+ recommended)</li> <li>Storage: 20GB+ available disk space</li> <li>Network: Stable internet connection with proper firewall configuration</li> </ul>"},{"location":"development/deployment/#required-services","title":"Required Services","text":"<ul> <li>Database: PostgreSQL 13+ or SQLite for development</li> <li>Cache: Redis 6+ for session management and real-time features</li> <li>Message Queue: Redis or RabbitMQ for background tasks</li> <li>File Storage: Local filesystem or cloud storage (AWS S3, Azure Blob)</li> </ul>"},{"location":"development/deployment/#environment-configuration","title":"Environment Configuration","text":""},{"location":"development/deployment/#production-environment-variables","title":"Production Environment Variables","text":"<p>Create production environment files:</p> <pre><code># ai_services/.env.production\nDATABASE_URL=postgresql://user:password@localhost:5432/disaster_response_prod\nREDIS_URL=redis://localhost:6379/0\nSECRET_KEY=your-super-secure-secret-key-here\nENVIRONMENT=production\nDEBUG=false\nCORS_ORIGINS=[\"https://yourdomain.com\"]\nJWT_SECRET_KEY=your-jwt-secret-key\nJWT_ALGORITHM=HS256\nJWT_EXPIRE_MINUTES=1440\n\n# AI Service Configuration\nOPENAI_API_KEY=your-openai-api-key\nAZURE_OPENAI_ENDPOINT=your-azure-openai-endpoint\nAZURE_OPENAI_API_KEY=your-azure-openai-key\nMCP_SERVER_HOST=0.0.0.0\nMCP_SERVER_PORT=8001\n\n# Logging\nLOG_LEVEL=INFO\nLOG_FORMAT=json\n\n# Security\nALLOWED_HOSTS=[\"yourdomain.com\", \"www.yourdomain.com\"]\nSECURE_COOKIES=true\n</code></pre> <pre><code># frontend/.env.production\nVITE_API_BASE_URL=https://api.yourdomain.com\nVITE_WS_BASE_URL=wss://api.yourdomain.com\nVITE_ENVIRONMENT=production\nVITE_SENTRY_DSN=your-sentry-dsn\nVITE_GOOGLE_MAPS_API_KEY=your-google-maps-key\n</code></pre>"},{"location":"development/deployment/#docker-deployment","title":"Docker Deployment","text":""},{"location":"development/deployment/#production-docker-compose","title":"Production Docker Compose","text":"<pre><code># docker-compose.prod.yml\nversion: \"3.8\"\n\nservices:\n  # Database\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: disaster_response_prod\n      POSTGRES_USER: disaster_user\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n      - ./ai_services/database/migrations:/docker-entrypoint-initdb.d\n    restart: unless-stopped\n    networks:\n      - backend\n\n  # Cache and Message Queue\n  redis:\n    image: redis:7-alpine\n    command: redis-server --appendonly yes\n    volumes:\n      - redis_data:/data\n    restart: unless-stopped\n    networks:\n      - backend\n\n  # Backend API\n  backend:\n    build:\n      context: ./ai_services\n      dockerfile: Dockerfile\n    environment:\n      - DATABASE_URL=postgresql://disaster_user:${POSTGRES_PASSWORD}@postgres:5432/disaster_response_prod\n      - REDIS_URL=redis://redis:6379/0\n    depends_on:\n      - postgres\n      - redis\n    restart: unless-stopped\n    networks:\n      - backend\n      - frontend\n    volumes:\n      - ./ai_services/logs:/app/logs\n\n  # Frontend\n  frontend:\n    build:\n      context: ./frontend\n      dockerfile: Dockerfile\n    depends_on:\n      - backend\n    restart: unless-stopped\n    networks:\n      - frontend\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/ssl:/etc/nginx/ssl:ro\n\n  # Load Balancer / Reverse Proxy\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./nginx/ssl:/etc/ssl:ro\n    depends_on:\n      - frontend\n      - backend\n    restart: unless-stopped\n    networks:\n      - frontend\n\nvolumes:\n  postgres_data:\n  redis_data:\n\nnetworks:\n  frontend:\n  backend:\n</code></pre>"},{"location":"development/deployment/#nginx-configuration","title":"Nginx Configuration","text":"<pre><code># nginx/nginx.conf\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    upstream backend {\n        server backend:8000;\n    }\n\n    upstream frontend {\n        server frontend:3000;\n    }\n\n    # Redirect HTTP to HTTPS\n    server {\n        listen 80;\n        server_name yourdomain.com www.yourdomain.com;\n        return 301 https://$server_name$request_uri;\n    }\n\n    # HTTPS Frontend\n    server {\n        listen 443 ssl http2;\n        server_name yourdomain.com www.yourdomain.com;\n\n        ssl_certificate /etc/ssl/certs/yourdomain.crt;\n        ssl_certificate_key /etc/ssl/private/yourdomain.key;\n        ssl_protocols TLSv1.2 TLSv1.3;\n        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;\n\n        location / {\n            proxy_pass http://frontend;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        }\n\n        location /api/ {\n            proxy_pass http://backend;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        }\n\n        location /ws {\n            proxy_pass http://backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"upgrade\";\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n        }\n    }\n}\n</code></pre>"},{"location":"development/deployment/#deploy-with-docker-compose","title":"Deploy with Docker Compose","text":"<pre><code># Production deployment\nexport POSTGRES_PASSWORD=your-secure-password\n\n# Build and start services\ndocker-compose -f docker-compose.prod.yml up -d --build\n\n# View logs\ndocker-compose -f docker-compose.prod.yml logs -f\n\n# Scale services\ndocker-compose -f docker-compose.prod.yml up -d --scale backend=3\n</code></pre>"},{"location":"development/deployment/#kubernetes-deployment","title":"Kubernetes Deployment","text":""},{"location":"development/deployment/#kubernetes-manifests","title":"Kubernetes Manifests","text":"<pre><code># k8s/namespace.yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: disaster-response\n---\n# k8s/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\n  namespace: disaster-response\ndata:\n  DATABASE_HOST: postgres-service\n  REDIS_HOST: redis-service\n  ENVIRONMENT: production\n---\n# k8s/secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secrets\n  namespace: disaster-response\ntype: Opaque\nstringData:\n  DATABASE_PASSWORD: your-database-password\n  SECRET_KEY: your-secret-key\n  JWT_SECRET_KEY: your-jwt-secret\n  OPENAI_API_KEY: your-openai-key\n---\n# k8s/postgres.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\n  namespace: disaster-response\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n        - name: postgres\n          image: postgres:15-alpine\n          env:\n            - name: POSTGRES_DB\n              value: disaster_response_prod\n            - name: POSTGRES_USER\n              value: disaster_user\n            - name: POSTGRES_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: app-secrets\n                  key: DATABASE_PASSWORD\n          ports:\n            - containerPort: 5432\n          volumeMounts:\n            - name: postgres-storage\n              mountPath: /var/lib/postgresql/data\n      volumes:\n        - name: postgres-storage\n          persistentVolumeClaim:\n            claimName: postgres-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres-service\n  namespace: disaster-response\nspec:\n  selector:\n    app: postgres\n  ports:\n    - port: 5432\n      targetPort: 5432\n</code></pre>"},{"location":"development/deployment/#deploy-to-kubernetes","title":"Deploy to Kubernetes","text":"<pre><code># Apply manifests\nkubectl apply -f k8s/\n\n# Check deployment status\nkubectl get pods -n disaster-response\n\n# View logs\nkubectl logs -f deployment/backend -n disaster-response\n\n# Scale deployment\nkubectl scale deployment backend --replicas=3 -n disaster-response\n</code></pre>"},{"location":"development/deployment/#azure-deployment","title":"Azure Deployment","text":""},{"location":"development/deployment/#azure-container-apps","title":"Azure Container Apps","text":"<pre><code># Install Azure CLI\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# Login to Azure\naz login\n\n# Create resource group\naz group create --name disaster-response-rg --location eastus\n\n# Create container app environment\naz containerapp env create \\\n  --name disaster-response-env \\\n  --resource-group disaster-response-rg \\\n  --location eastus\n\n# Deploy backend\naz containerapp create \\\n  --name disaster-response-api \\\n  --resource-group disaster-response-rg \\\n  --environment disaster-response-env \\\n  --image your-registry/disaster-response-backend:latest \\\n  --target-port 8000 \\\n  --ingress external \\\n  --env-vars DATABASE_URL=secretref:database-url \\\n  --secrets database-url=\"postgresql://...\"\n\n# Deploy frontend\naz containerapp create \\\n  --name disaster-response-frontend \\\n  --resource-group disaster-response-rg \\\n  --environment disaster-response-env \\\n  --image your-registry/disaster-response-frontend:latest \\\n  --target-port 80 \\\n  --ingress external\n</code></pre>"},{"location":"development/deployment/#database-setup","title":"Database Setup","text":""},{"location":"development/deployment/#production-database-migration","title":"Production Database Migration","text":"<pre><code># Run database migrations\ndocker-compose exec backend alembic upgrade head\n\n# Create initial admin user\ndocker-compose exec backend python -c \"\nfrom app.core.database import get_db\nfrom app.services.auth_service import create_user\nfrom app.schemas.user import UserCreate\nfrom app.models.user import UserRole\n\ndb = next(get_db())\nadmin_user = UserCreate(\n    email='admin@yourdomain.com',\n    password='secure-admin-password',\n    full_name='System Administrator',\n    role=UserRole.GOVERNMENT\n)\ncreate_user(db, admin_user)\nprint('Admin user created successfully')\n\"\n</code></pre>"},{"location":"development/deployment/#database-backup-and-restore","title":"Database Backup and Restore","text":"<pre><code># Backup database\ndocker-compose exec postgres pg_dump -U disaster_user disaster_response_prod &gt; backup_$(date +%Y%m%d_%H%M%S).sql\n\n# Restore database\ndocker-compose exec -T postgres psql -U disaster_user disaster_response_prod &lt; backup_20241201_120000.sql\n\n# Automated backup script\ncat &gt; backup.sh &lt;&lt; 'EOF'\n#!/bin/bash\nBACKUP_DIR=\"/backups\"\nDATE=$(date +%Y%m%d_%H%M%S)\ndocker-compose exec postgres pg_dump -U disaster_user disaster_response_prod &gt; $BACKUP_DIR/backup_$DATE.sql\nfind $BACKUP_DIR -name \"backup_*.sql\" -mtime +7 -delete\nEOF\nchmod +x backup.sh\n</code></pre>"},{"location":"development/deployment/#monitoring-and-logging","title":"Monitoring and Logging","text":""},{"location":"development/deployment/#application-monitoring","title":"Application Monitoring","text":"<pre><code># monitoring/docker-compose.yml\nversion: \"3.8\"\n\nservices:\n  prometheus:\n    image: prom/prometheus\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n    networks:\n      - monitoring\n\n  grafana:\n    image: grafana/grafana\n    ports:\n      - \"3001:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n    volumes:\n      - grafana_data:/var/lib/grafana\n    networks:\n      - monitoring\n\n  node-exporter:\n    image: prom/node-exporter\n    ports:\n      - \"9100:9100\"\n    networks:\n      - monitoring\n\nvolumes:\n  grafana_data:\n\nnetworks:\n  monitoring:\n</code></pre>"},{"location":"development/deployment/#log-aggregation","title":"Log Aggregation","text":"<pre><code># Install Filebeat for log shipping\ndocker run -d \\\n  --name filebeat \\\n  --user root \\\n  --volume=\"$(pwd)/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro\" \\\n  --volume=\"/var/lib/docker/containers:/var/lib/docker/containers:ro\" \\\n  --volume=\"/var/run/docker.sock:/var/run/docker.sock:ro\" \\\n  docker.elastic.co/beats/filebeat:8.8.0\n</code></pre>"},{"location":"development/deployment/#security-configuration","title":"Security Configuration","text":""},{"location":"development/deployment/#ssltls-setup","title":"SSL/TLS Setup","text":"<pre><code># Generate SSL certificate with Let's Encrypt\ncertbot certonly --standalone -d yourdomain.com -d www.yourdomain.com\n\n# Copy certificates to nginx volume\ncp /etc/letsencrypt/live/yourdomain.com/fullchain.pem nginx/ssl/yourdomain.crt\ncp /etc/letsencrypt/live/yourdomain.com/privkey.pem nginx/ssl/yourdomain.key\n</code></pre>"},{"location":"development/deployment/#firewall-configuration","title":"Firewall Configuration","text":"<pre><code># Configure UFW firewall\nsudo ufw allow ssh\nsudo ufw allow 80\nsudo ufw allow 443\nsudo ufw enable\n\n# Block unnecessary ports\nsudo ufw deny 5432  # PostgreSQL\nsudo ufw deny 6379  # Redis\n</code></pre>"},{"location":"development/deployment/#performance-optimization","title":"Performance Optimization","text":""},{"location":"development/deployment/#database-optimization","title":"Database Optimization","text":"<pre><code>-- Create database indexes for better performance\nCREATE INDEX idx_requests_status ON requests(status);\nCREATE INDEX idx_requests_priority ON requests(priority);\nCREATE INDEX idx_requests_created_at ON requests(created_at);\nCREATE INDEX idx_tasks_assigned_to ON tasks(assigned_to);\nCREATE INDEX idx_users_role ON users(role);\nCREATE INDEX idx_resources_type ON resources(type);\n\n-- Analyze query performance\nEXPLAIN ANALYZE SELECT * FROM requests WHERE status = 'pending';\n</code></pre>"},{"location":"development/deployment/#caching-strategy","title":"Caching Strategy","text":"<pre><code># Redis caching configuration\nCACHE_CONFIG = {\n    \"user_sessions\": {\"ttl\": 3600},      # 1 hour\n    \"dashboard_stats\": {\"ttl\": 300},     # 5 minutes\n    \"resource_status\": {\"ttl\": 600},     # 10 minutes\n    \"agent_responses\": {\"ttl\": 1800},    # 30 minutes\n}\n</code></pre>"},{"location":"development/deployment/#health-checks-and-monitoring","title":"Health Checks and Monitoring","text":""},{"location":"development/deployment/#application-health-checks","title":"Application Health Checks","text":"<pre><code># Backend health check\ncurl -f http://localhost:8000/health || exit 1\n\n# Frontend health check\ncurl -f http://localhost:3000/ || exit 1\n\n# Database health check\ndocker-compose exec postgres pg_isready -U disaster_user\n</code></pre>"},{"location":"development/deployment/#automated-deployment-script","title":"Automated Deployment Script","text":"<pre><code>#!/bin/bash\n# deploy.sh - Production deployment script\n\nset -e\n\necho \"\ud83d\ude80 Starting production deployment...\"\n\n# Backup current database\necho \"\ud83d\udce6 Creating database backup...\"\n./backup.sh\n\n# Pull latest images\necho \"\ud83d\udce5 Pulling latest images...\"\ndocker-compose -f docker-compose.prod.yml pull\n\n# Stop services gracefully\necho \"\u23f9\ufe0f Stopping services...\"\ndocker-compose -f docker-compose.prod.yml down\n\n# Start services\necho \"\u25b6\ufe0f Starting services...\"\ndocker-compose -f docker-compose.prod.yml up -d\n\n# Wait for services to be healthy\necho \"\ud83d\udd0d Waiting for services to be healthy...\"\nsleep 30\n\n# Run health checks\necho \"\ud83c\udfe5 Running health checks...\"\n./health-check.sh\n\necho \"\u2705 Deployment completed successfully!\"\n</code></pre>"},{"location":"development/deployment/#troubleshooting-deployment-issues","title":"Troubleshooting Deployment Issues","text":""},{"location":"development/deployment/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<ol> <li>Container fails to start</li> </ol> <pre><code># Check container logs\ndocker-compose logs backend\n\n# Check resource usage\ndocker stats\n</code></pre> <ol> <li>Database connection issues</li> </ol> <pre><code># Test database connectivity\ndocker-compose exec backend python -c \"\nfrom app.core.database import engine\nwith engine.connect() as conn:\n    print('Database connection successful')\n\"\n</code></pre> <ol> <li>WebSocket connection problems</li> </ol> <pre><code># Check WebSocket endpoint\nwscat -c ws://localhost:8000/ws\n</code></pre> <ol> <li>High memory usage <pre><code># Monitor memory usage\ndocker-compose exec backend python -c \"\nimport psutil\nprint(f'Memory usage: {psutil.virtual_memory().percent}%')\n\"\n</code></pre></li> </ol>"},{"location":"development/deployment/#maintenance","title":"Maintenance","text":""},{"location":"development/deployment/#regular-maintenance-tasks","title":"Regular Maintenance Tasks","text":"<pre><code># Weekly maintenance script\n#!/bin/bash\n# maintenance.sh\n\necho \"\ud83e\uddf9 Starting maintenance tasks...\"\n\n# Clean up old logs\nfind /var/log/disaster-response -name \"*.log\" -mtime +30 -delete\n\n# Database maintenance\ndocker-compose exec postgres vacuumdb -U disaster_user disaster_response_prod\n\n# Update system packages\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Restart services for memory cleanup\ndocker-compose restart\n\necho \"\u2705 Maintenance completed!\"\n</code></pre> <p>This deployment guide ensures your disaster response coordination system is production-ready with proper security, monitoring, and maintenance procedures.</p>"},{"location":"development/structure/","title":"Project Structure","text":"<p>This document outlines the organization and structure of the disaster response coordination web application.</p>"},{"location":"development/structure/#overview","title":"Overview","text":"<p>The project follows a modern full-stack architecture with clear separation of concerns:</p> <pre><code>disaster-response-app/\n\u251c\u2500\u2500 frontend/           # React TypeScript frontend\n\u251c\u2500\u2500 backend/           # FastAPI Python backend\n\u251c\u2500\u2500 ai_services/       # AI agents and MCP integration\n\u251c\u2500\u2500 docs/             # MkDocs documentation\n\u251c\u2500\u2500 docker/           # Docker configuration\n\u2514\u2500\u2500 README.md         # Project overview\n</code></pre>"},{"location":"development/structure/#frontend-structure-frontend","title":"Frontend Structure (<code>/frontend</code>)","text":"<pre><code>frontend/\n\u251c\u2500\u2500 public/                    # Static assets\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 components/           # Reusable UI components\n\u2502   \u2502   \u251c\u2500\u2500 common/          # Shared components\n\u2502   \u2502   \u251c\u2500\u2500 dashboard/       # Dashboard components\n\u2502   \u2502   \u251c\u2500\u2500 forms/           # Form components\n\u2502   \u2502   \u2514\u2500\u2500 WebSocketProvider.tsx\n\u2502   \u251c\u2500\u2500 pages/               # Page components by role\n\u2502   \u2502   \u251c\u2500\u2500 FirstResponder/\n\u2502   \u2502   \u251c\u2500\u2500 Volunteer/\n\u2502   \u2502   \u251c\u2500\u2500 AffectedIndividual/\n\u2502   \u2502   \u2514\u2500\u2500 Government/\n\u2502   \u251c\u2500\u2500 hooks/               # Custom React hooks\n\u2502   \u251c\u2500\u2500 services/            # API and service layer\n\u2502   \u251c\u2500\u2500 types/               # TypeScript type definitions\n\u2502   \u251c\u2500\u2500 utils/               # Utility functions\n\u2502   \u251c\u2500\u2500 styles/              # Global styles and themes\n\u2502   \u251c\u2500\u2500 App.tsx              # Main application component\n\u2502   \u2514\u2500\u2500 index.tsx            # Application entry point\n\u251c\u2500\u2500 package.json             # Dependencies and scripts\n\u251c\u2500\u2500 tsconfig.json           # TypeScript configuration\n\u2514\u2500\u2500 tailwind.config.js      # Tailwind CSS configuration\n</code></pre>"},{"location":"development/structure/#key-frontend-features","title":"Key Frontend Features","text":"<ul> <li>Role-based Routing: Separate pages and components for each user role</li> <li>Real-time Updates: WebSocket integration for live coordination</li> <li>Responsive Design: Mobile-first approach with Tailwind CSS</li> <li>Type Safety: Full TypeScript implementation</li> <li>Component Library: Reusable UI components with consistent styling</li> </ul>"},{"location":"development/structure/#backend-structure-backend","title":"Backend Structure (<code>/backend</code>)","text":"<pre><code>backend/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 api/                 # API route handlers\n\u2502   \u2502   \u251c\u2500\u2500 v1/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 auth.py      # Authentication endpoints\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 requests.py  # Emergency request management\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 tasks.py     # Task coordination\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 resources.py # Resource management\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 users.py     # User management\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 websocket.py # WebSocket handlers\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 core/                # Core application logic\n\u2502   \u2502   \u251c\u2500\u2500 config.py        # Configuration management\n\u2502   \u2502   \u251c\u2500\u2500 security.py      # Authentication &amp; authorization\n\u2502   \u2502   \u251c\u2500\u2500 database.py      # Database connection\n\u2502   \u2502   \u2514\u2500\u2500 websocket_manager.py\n\u2502   \u251c\u2500\u2500 models/              # Database models\n\u2502   \u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2502   \u251c\u2500\u2500 request.py\n\u2502   \u2502   \u251c\u2500\u2500 task.py\n\u2502   \u2502   \u2514\u2500\u2500 resource.py\n\u2502   \u251c\u2500\u2500 schemas/             # Pydantic schemas\n\u2502   \u2502   \u251c\u2500\u2500 user.py\n\u2502   \u2502   \u251c\u2500\u2500 request.py\n\u2502   \u2502   \u251c\u2500\u2500 task.py\n\u2502   \u2502   \u2514\u2500\u2500 resource.py\n\u2502   \u251c\u2500\u2500 services/            # Business logic layer\n\u2502   \u2502   \u251c\u2500\u2500 auth_service.py\n\u2502   \u2502   \u251c\u2500\u2500 request_service.py\n\u2502   \u2502   \u251c\u2500\u2500 task_service.py\n\u2502   \u2502   \u2514\u2500\u2500 ai_service.py\n\u2502   \u2514\u2500\u2500 main.py              # FastAPI application\n\u251c\u2500\u2500 tests/                   # Test suite\n\u2502   \u251c\u2500\u2500 unit/\n\u2502   \u251c\u2500\u2500 integration/\n\u2502   \u2514\u2500\u2500 conftest.py\n\u251c\u2500\u2500 requirements.txt         # Python dependencies\n\u2514\u2500\u2500 alembic/                # Database migrations\n</code></pre>"},{"location":"development/structure/#key-backend-features","title":"Key Backend Features","text":"<ul> <li>FastAPI Framework: Modern, fast Python web framework</li> <li>SQLAlchemy ORM: Database abstraction and modeling</li> <li>Pydantic Validation: Request/response data validation</li> <li>JWT Authentication: Secure token-based authentication</li> <li>WebSocket Support: Real-time bidirectional communication</li> <li>Role-based Access Control: Granular permission system</li> </ul>"},{"location":"development/structure/#ai-services-structure-ai_services","title":"AI Services Structure (<code>/ai_services</code>)","text":"<pre><code>ai_services/\n\u251c\u2500\u2500 agents/                  # AI agent implementations\n\u2502   \u251c\u2500\u2500 emergency_agent.py   # Emergency response coordination\n\u2502   \u251c\u2500\u2500 resource_agent.py    # Resource allocation optimization\n\u2502   \u251c\u2500\u2500 volunteer_agent.py   # Volunteer coordination\n\u2502   \u2514\u2500\u2500 base_agent.py        # Base agent class\n\u251c\u2500\u2500 mcp_integration/         # Model Context Protocol\n\u2502   \u251c\u2500\u2500 server.py           # MCP server implementation\n\u2502   \u251c\u2500\u2500 tools.py            # MCP tool definitions\n\u2502   \u2514\u2500\u2500 __init__.py\n\u251c\u2500\u2500 models/                  # AI model configurations\n\u2502   \u251c\u2500\u2500 llm_config.py       # Language model setup\n\u2502   \u2514\u2500\u2500 embeddings.py       # Vector embedding models\n\u251c\u2500\u2500 utils/                   # AI utility functions\n\u2502   \u251c\u2500\u2500 text_processing.py\n\u2502   \u2514\u2500\u2500 multimodal.py\n\u251c\u2500\u2500 run_mcp_server.py       # MCP server runner\n\u2514\u2500\u2500 requirements.txt        # AI service dependencies\n</code></pre>"},{"location":"development/structure/#ai-services-features","title":"AI Services Features","text":"<ul> <li>Multi-Agent System: Specialized agents for different coordination tasks</li> <li>MCP Integration: Standardized tool and resource access</li> <li>Multimodal Processing: Text, image, and audio input handling</li> <li>Real-time Decision Making: Intelligent task prioritization and assignment</li> </ul>"},{"location":"development/structure/#documentation-structure-docs","title":"Documentation Structure (<code>/docs</code>)","text":"<pre><code>docs/\n\u251c\u2500\u2500 index.md                 # Documentation homepage\n\u251c\u2500\u2500 getting-started/         # Setup and configuration\n\u2502   \u251c\u2500\u2500 quick-setup.md\n\u2502   \u251c\u2500\u2500 environment.md\n\u2502   \u2514\u2500\u2500 docker.md\n\u251c\u2500\u2500 api/                     # API documentation\n\u2502   \u251c\u2500\u2500 authentication.md\n\u2502   \u251c\u2500\u2500 requests.md\n\u2502   \u251c\u2500\u2500 tasks.md\n\u2502   \u251c\u2500\u2500 resources.md\n\u2502   \u251c\u2500\u2500 users.md\n\u2502   \u251c\u2500\u2500 websocket.md\n\u2502   \u2514\u2500\u2500 agents.md\n\u251c\u2500\u2500 user-guides/             # Role-based user guides\n\u2502   \u251c\u2500\u2500 affected-individuals.md\n\u2502   \u251c\u2500\u2500 volunteers.md\n\u2502   \u251c\u2500\u2500 first-responders.md\n\u2502   \u2514\u2500\u2500 administrators.md\n\u251c\u2500\u2500 architecture/            # System architecture\n\u2502   \u251c\u2500\u2500 overview.md\n\u2502   \u251c\u2500\u2500 ai-agents.md\n\u2502   \u251c\u2500\u2500 database.md\n\u2502   \u2514\u2500\u2500 api.md\n\u251c\u2500\u2500 development/             # Development guides\n\u2502   \u251c\u2500\u2500 structure.md         # This file\n\u2502   \u251c\u2500\u2500 testing.md\n\u2502   \u251c\u2500\u2500 contributing.md\n\u2502   \u2514\u2500\u2500 deployment.md\n\u251c\u2500\u2500 mcp/                     # MCP documentation\n\u2502   \u251c\u2500\u2500 overview.md\n\u2502   \u251c\u2500\u2500 tools.md\n\u2502   \u2514\u2500\u2500 setup.md\n\u2514\u2500\u2500 troubleshooting.md       # Common issues and solutions\n</code></pre>"},{"location":"development/structure/#configuration-files","title":"Configuration Files","text":""},{"location":"development/structure/#frontend-configuration","title":"Frontend Configuration","text":"<ul> <li><code>package.json</code>: Dependencies, scripts, and project metadata</li> <li><code>tsconfig.json</code>: TypeScript compiler configuration</li> <li><code>tailwind.config.js</code>: Tailwind CSS customization</li> <li><code>.env</code>: Environment variables for development</li> </ul>"},{"location":"development/structure/#backend-configuration","title":"Backend Configuration","text":"<ul> <li><code>requirements.txt</code>: Python package dependencies</li> <li><code>alembic.ini</code>: Database migration configuration</li> <li><code>.env</code>: Environment variables and secrets</li> <li><code>pyproject.toml</code>: Python project configuration</li> </ul>"},{"location":"development/structure/#ai-services-configuration","title":"AI Services Configuration","text":"<ul> <li><code>requirements.txt</code>: AI-specific Python dependencies</li> <li><code>config.yaml</code>: AI model and service configuration</li> <li><code>.env</code>: API keys and model endpoints</li> </ul>"},{"location":"development/structure/#development-workflow","title":"Development Workflow","text":"<ol> <li>Frontend Development: React components with TypeScript</li> <li>Backend Development: FastAPI endpoints with automatic documentation</li> <li>AI Integration: Agent development and MCP tool creation</li> <li>Testing: Unit and integration tests across all layers</li> <li>Documentation: MkDocs for comprehensive documentation</li> <li>Deployment: Docker containers with orchestration</li> </ol>"},{"location":"development/structure/#best-practices","title":"Best Practices","text":"<ul> <li>Separation of Concerns: Clear boundaries between layers</li> <li>Type Safety: TypeScript and Pydantic for type validation</li> <li>Error Handling: Comprehensive error handling across all services</li> <li>Logging: Structured logging for debugging and monitoring</li> <li>Testing: Automated testing at multiple levels</li> <li>Documentation: Living documentation that stays current with code</li> </ul>"},{"location":"development/testing/","title":"Testing Guide","text":"<p>This document provides comprehensive guidance for testing the disaster response coordination web application.</p>"},{"location":"development/testing/#testing-philosophy","title":"Testing Philosophy","text":"<p>Our testing strategy follows the testing pyramid approach:</p> <ul> <li>Unit Tests: Fast, isolated tests for individual functions and components</li> <li>Integration Tests: Tests for interactions between components</li> <li>End-to-End Tests: Full workflow tests simulating real user scenarios</li> </ul>"},{"location":"development/testing/#testing-stack","title":"Testing Stack","text":""},{"location":"development/testing/#frontend-testing","title":"Frontend Testing","text":"<ul> <li>Jest: JavaScript testing framework</li> <li>React Testing Library: React component testing utilities</li> <li>MSW (Mock Service Worker): API mocking for tests</li> <li>Cypress: End-to-end testing framework</li> </ul>"},{"location":"development/testing/#backend-testing","title":"Backend Testing","text":"<ul> <li>pytest: Python testing framework</li> <li>pytest-asyncio: Async test support</li> <li>httpx: Async HTTP client for API testing</li> <li>SQLAlchemy Testing: Database testing utilities</li> </ul>"},{"location":"development/testing/#ai-services-testing","title":"AI Services Testing","text":"<ul> <li>pytest: Python testing framework</li> <li>unittest.mock: Mocking for AI model calls</li> <li>MCP Testing: Custom testing utilities for MCP tools</li> </ul>"},{"location":"development/testing/#running-tests","title":"Running Tests","text":""},{"location":"development/testing/#frontend-tests","title":"Frontend Tests","text":"<pre><code># Navigate to frontend directory\ncd frontend\n\n# Run all tests\nnpm test\n\n# Run tests in watch mode\nnpm run test:watch\n\n# Run tests with coverage\nnpm run test:coverage\n\n# Run specific test file\nnpm test -- UserDashboard.test.tsx\n\n# Run E2E tests\nnpm run test:e2e\n</code></pre>"},{"location":"development/testing/#backend-tests","title":"Backend Tests","text":"<pre><code># Navigate to backend directory\ncd backend\n\n# Run all tests\npytest\n\n# Run with coverage\npytest --cov=app\n\n# Run specific test file\npytest tests/test_auth.py\n\n# Run tests with verbose output\npytest -v\n\n# Run integration tests only\npytest tests/integration/\n</code></pre>"},{"location":"development/testing/#ai-services-tests","title":"AI Services Tests","text":"<pre><code># Navigate to AI services directory\ncd ai_services\n\n# Run all tests\npytest\n\n# Run with coverage\npytest --cov=agents --cov=mcp_integration\n\n# Run specific test module\npytest tests/test_emergency_agent.py\n</code></pre>"},{"location":"development/testing/#test-structure","title":"Test Structure","text":""},{"location":"development/testing/#frontend-test-organization","title":"Frontend Test Organization","text":"<pre><code>frontend/src/\n\u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 __tests__/           # Component tests\n\u2502   \u2502   \u251c\u2500\u2500 Dashboard.test.tsx\n\u2502   \u2502   \u251c\u2500\u2500 RequestForm.test.tsx\n\u2502   \u2502   \u2514\u2500\u2500 UserProfile.test.tsx\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 services/\n\u2502   \u251c\u2500\u2500 __tests__/           # Service tests\n\u2502   \u2502   \u251c\u2500\u2500 api.test.ts\n\u2502   \u2502   \u2514\u2500\u2500 websocket.test.ts\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 __tests__/           # Utility tests\n\u2502   \u2502   \u2514\u2500\u2500 helpers.test.ts\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 __tests__/               # Integration tests\n    \u251c\u2500\u2500 App.test.tsx\n    \u2514\u2500\u2500 routing.test.tsx\n</code></pre>"},{"location":"development/testing/#backend-test-organization","title":"Backend Test Organization","text":"<pre><code>backend/tests/\n\u251c\u2500\u2500 unit/                    # Unit tests\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u251c\u2500\u2500 test_auth.py\n\u2502   \u2502   \u251c\u2500\u2500 test_requests.py\n\u2502   \u2502   \u2514\u2500\u2500 test_tasks.py\n\u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u251c\u2500\u2500 test_auth_service.py\n\u2502   \u2502   \u2514\u2500\u2500 test_request_service.py\n\u2502   \u2514\u2500\u2500 models/\n\u2502       \u251c\u2500\u2500 test_user.py\n\u2502       \u2514\u2500\u2500 test_request.py\n\u251c\u2500\u2500 integration/             # Integration tests\n\u2502   \u251c\u2500\u2500 test_api_integration.py\n\u2502   \u251c\u2500\u2500 test_websocket_integration.py\n\u2502   \u2514\u2500\u2500 test_database_integration.py\n\u251c\u2500\u2500 e2e/                     # End-to-end tests\n\u2502   \u251c\u2500\u2500 test_emergency_workflow.py\n\u2502   \u2514\u2500\u2500 test_volunteer_workflow.py\n\u251c\u2500\u2500 fixtures/                # Test data and fixtures\n\u2502   \u251c\u2500\u2500 users.py\n\u2502   \u251c\u2500\u2500 requests.py\n\u2502   \u2514\u2500\u2500 tasks.py\n\u2514\u2500\u2500 conftest.py             # Pytest configuration\n</code></pre>"},{"location":"development/testing/#writing-tests","title":"Writing Tests","text":""},{"location":"development/testing/#frontend-component-tests","title":"Frontend Component Tests","text":"<pre><code>// components/__tests__/EmergencyRequestForm.test.tsx\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport { EmergencyRequestForm } from \"../EmergencyRequestForm\";\n\ndescribe(\"EmergencyRequestForm\", () =&gt; {\n  it(\"should submit emergency request with valid data\", async () =&gt; {\n    const mockSubmit = jest.fn();\n    render(&lt;EmergencyRequestForm onSubmit={mockSubmit} /&gt;);\n\n    // Fill form fields\n    fireEvent.change(screen.getByLabelText(/emergency type/i), {\n      target: { value: \"medical\" },\n    });\n\n    fireEvent.change(screen.getByLabelText(/description/i), {\n      target: { value: \"Medical emergency at location\" },\n    });\n\n    // Submit form\n    fireEvent.click(screen.getByRole(\"button\", { name: /submit/i }));\n\n    await waitFor(() =&gt; {\n      expect(mockSubmit).toHaveBeenCalledWith({\n        type: \"medical\",\n        description: \"Medical emergency at location\",\n      });\n    });\n  });\n\n  it(\"should display validation errors for invalid input\", async () =&gt; {\n    render(&lt;EmergencyRequestForm onSubmit={jest.fn()} /&gt;);\n\n    // Submit without filling required fields\n    fireEvent.click(screen.getByRole(\"button\", { name: /submit/i }));\n\n    await waitFor(() =&gt; {\n      expect(\n        screen.getByText(/emergency type is required/i)\n      ).toBeInTheDocument();\n    });\n  });\n});\n</code></pre>"},{"location":"development/testing/#backend-api-tests","title":"Backend API Tests","text":"<pre><code># tests/unit/api/test_requests.py\nimport pytest\nfrom httpx import AsyncClient\nfrom app.main import app\n\n@pytest.mark.asyncio\nasync def test_create_emergency_request():\n    \"\"\"Test creating a new emergency request.\"\"\"\n    async with AsyncClient(app=app, base_url=\"http://test\") as client:\n        request_data = {\n            \"type\": \"medical\",\n            \"description\": \"Medical emergency\",\n            \"location\": {\n                \"latitude\": 40.7128,\n                \"longitude\": -74.0060\n            },\n            \"priority\": \"high\"\n        }\n\n        response = await client.post(\"/api/v1/requests\", json=request_data)\n\n        assert response.status_code == 201\n        data = response.json()\n        assert data[\"type\"] == \"medical\"\n        assert data[\"status\"] == \"pending\"\n        assert \"id\" in data\n\n@pytest.mark.asyncio\nasync def test_get_requests_requires_authentication():\n    \"\"\"Test that getting requests requires authentication.\"\"\"\n    async with AsyncClient(app=app, base_url=\"http://test\") as client:\n        response = await client.get(\"/api/v1/requests\")\n        assert response.status_code == 401\n</code></pre>"},{"location":"development/testing/#ai-agent-tests","title":"AI Agent Tests","text":"<pre><code># tests/unit/agents/test_emergency_agent.py\nimport pytest\nfrom unittest.mock import Mock, patch\nfrom ai_services.agents.emergency_agent import EmergencyAgent\n\n@pytest.fixture\ndef emergency_agent():\n    return EmergencyAgent()\n\n@pytest.mark.asyncio\nasync def test_process_emergency_request(emergency_agent):\n    \"\"\"Test emergency request processing.\"\"\"\n    request_data = {\n        \"type\": \"fire\",\n        \"description\": \"Building fire on Main Street\",\n        \"location\": {\"latitude\": 40.7128, \"longitude\": -74.0060},\n        \"priority\": \"critical\"\n    }\n\n    with patch.object(emergency_agent, '_analyze_severity') as mock_analyze:\n        mock_analyze.return_value = {\"severity\": 9, \"resources_needed\": [\"fire_truck\", \"ambulance\"]}\n\n        result = await emergency_agent.process_request(request_data)\n\n        assert result[\"priority\"] == \"critical\"\n        assert \"fire_truck\" in result[\"resources_needed\"]\n        mock_analyze.assert_called_once()\n\n@pytest.mark.asyncio\nasync def test_resource_allocation(emergency_agent):\n    \"\"\"Test resource allocation logic.\"\"\"\n    available_resources = [\n        {\"id\": 1, \"type\": \"fire_truck\", \"location\": {\"lat\": 40.7130, \"lng\": -74.0055}},\n        {\"id\": 2, \"type\": \"ambulance\", \"location\": {\"lat\": 40.7125, \"lng\": -74.0065}}\n    ]\n\n    request_location = {\"latitude\": 40.7128, \"longitude\": -74.0060}\n\n    allocation = await emergency_agent.allocate_resources(\n        available_resources,\n        request_location,\n        [\"fire_truck\", \"ambulance\"]\n    )\n\n    assert len(allocation) == 2\n    assert allocation[0][\"type\"] in [\"fire_truck\", \"ambulance\"]\n</code></pre>"},{"location":"development/testing/#test-data-management","title":"Test Data Management","text":""},{"location":"development/testing/#database-test-setup","title":"Database Test Setup","text":"<pre><code># tests/conftest.py\nimport pytest\nimport asyncio\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\nfrom app.core.database import Base, get_db\nfrom app.main import app\n\n# Test database URL\nTEST_DATABASE_URL = \"sqlite:///./test.db\"\n\n@pytest.fixture(scope=\"session\")\ndef event_loop():\n    \"\"\"Create an instance of the default event loop for the test session.\"\"\"\n    loop = asyncio.get_event_loop_policy().new_event_loop()\n    yield loop\n    loop.close()\n\n@pytest.fixture(scope=\"session\")\nasync def test_db():\n    \"\"\"Create test database.\"\"\"\n    engine = create_engine(TEST_DATABASE_URL, connect_args={\"check_same_thread\": False})\n    Base.metadata.create_all(bind=engine)\n    yield engine\n    Base.metadata.drop_all(bind=engine)\n\n@pytest.fixture\nasync def db_session(test_db):\n    \"\"\"Create database session for tests.\"\"\"\n    TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=test_db)\n    session = TestingSessionLocal()\n    try:\n        yield session\n    finally:\n        session.close()\n</code></pre>"},{"location":"development/testing/#test-fixtures","title":"Test Fixtures","text":"<pre><code># tests/fixtures/users.py\nimport pytest\nfrom app.models.user import User\n\n@pytest.fixture\ndef sample_user():\n    return {\n        \"email\": \"test@example.com\",\n        \"password\": \"testpassword123\",\n        \"full_name\": \"Test User\",\n        \"role\": \"volunteer\"\n    }\n\n@pytest.fixture\ndef first_responder_user():\n    return {\n        \"email\": \"responder@emergency.gov\",\n        \"password\": \"securepassword123\",\n        \"full_name\": \"Emergency Responder\",\n        \"role\": \"first_responder\",\n        \"organization\": \"City Emergency Services\"\n    }\n</code></pre>"},{"location":"development/testing/#mocking-and-stubbing","title":"Mocking and Stubbing","text":""},{"location":"development/testing/#api-mocking-with-msw","title":"API Mocking with MSW","text":"<pre><code>// src/__tests__/mocks/handlers.ts\nimport { rest } from \"msw\";\n\nexport const handlers = [\n  // Mock authentication\n  rest.post(\"/api/v1/auth/login\", (req, res, ctx) =&gt; {\n    return res(\n      ctx.json({\n        access_token: \"mock-token\",\n        token_type: \"bearer\",\n        user: {\n          id: 1,\n          email: \"test@example.com\",\n          role: \"volunteer\",\n        },\n      })\n    );\n  }),\n\n  // Mock emergency requests\n  rest.get(\"/api/v1/requests\", (req, res, ctx) =&gt; {\n    return res(\n      ctx.json([\n        {\n          id: 1,\n          type: \"medical\",\n          description: \"Medical emergency\",\n          status: \"pending\",\n          priority: \"high\",\n        },\n      ])\n    );\n  }),\n];\n</code></pre>"},{"location":"development/testing/#ai-model-mocking","title":"AI Model Mocking","text":"<pre><code># tests/mocks/ai_mocks.py\nfrom unittest.mock import Mock\n\ndef mock_llm_response():\n    \"\"\"Mock language model response.\"\"\"\n    mock_response = Mock()\n    mock_response.choices = [\n        Mock(message=Mock(content='{\"priority\": \"high\", \"resources\": [\"ambulance\"]}'))\n    ]\n    return mock_response\n\ndef mock_embedding_response():\n    \"\"\"Mock embedding model response.\"\"\"\n    return [0.1, 0.2, 0.3, 0.4, 0.5] * 200  # 1000-dimensional vector\n</code></pre>"},{"location":"development/testing/#end-to-end-testing","title":"End-to-End Testing","text":""},{"location":"development/testing/#cypress-e2e-tests","title":"Cypress E2E Tests","text":"<pre><code>// cypress/e2e/emergency-workflow.cy.ts\ndescribe(\"Emergency Request Workflow\", () =&gt; {\n  beforeEach(() =&gt; {\n    // Login as affected individual\n    cy.login(\"affected@example.com\", \"password\");\n  });\n\n  it(\"should complete full emergency request workflow\", () =&gt; {\n    // Submit emergency request\n    cy.visit(\"/emergency-request\");\n    cy.get(\"[data-cy=emergency-type]\").select(\"medical\");\n    cy.get(\"[data-cy=description]\").type(\"Chest pain and difficulty breathing\");\n    cy.get(\"[data-cy=location-button]\").click();\n    cy.get(\"[data-cy=submit-request]\").click();\n\n    // Verify request was created\n    cy.get(\"[data-cy=request-confirmation]\").should(\"be.visible\");\n    cy.get(\"[data-cy=request-id]\").should(\"contain\", \"REQ-\");\n\n    // Check request status\n    cy.visit(\"/my-requests\");\n    cy.get(\"[data-cy=request-list]\").should(\"contain\", \"medical\");\n    cy.get(\"[data-cy=request-status]\").should(\"contain\", \"pending\");\n  });\n});\n</code></pre>"},{"location":"development/testing/#backend-e2e-tests","title":"Backend E2E Tests","text":"<pre><code># tests/e2e/test_emergency_workflow.py\nimport pytest\nfrom httpx import AsyncClient\nfrom app.main import app\n\n@pytest.mark.asyncio\nasync def test_complete_emergency_workflow():\n    \"\"\"Test complete emergency response workflow.\"\"\"\n    async with AsyncClient(app=app, base_url=\"http://test\") as client:\n        # 1. User registers\n        user_data = {\n            \"email\": \"emergency@test.com\",\n            \"password\": \"testpass123\",\n            \"full_name\": \"Emergency User\",\n            \"role\": \"affected_individual\"\n        }\n        response = await client.post(\"/api/v1/auth/register\", json=user_data)\n        assert response.status_code == 201\n\n        # 2. User logs in\n        login_data = {\"email\": \"emergency@test.com\", \"password\": \"testpass123\"}\n        response = await client.post(\"/api/v1/auth/login\", data=login_data)\n        assert response.status_code == 200\n        token = response.json()[\"access_token\"]\n\n        headers = {\"Authorization\": f\"Bearer {token}\"}\n\n        # 3. User submits emergency request\n        request_data = {\n            \"type\": \"medical\",\n            \"description\": \"Medical emergency\",\n            \"location\": {\"latitude\": 40.7128, \"longitude\": -74.0060},\n            \"priority\": \"high\"\n        }\n        response = await client.post(\"/api/v1/requests\", json=request_data, headers=headers)\n        assert response.status_code == 201\n        request_id = response.json()[\"id\"]\n\n        # 4. Check request status\n        response = await client.get(f\"/api/v1/requests/{request_id}\", headers=headers)\n        assert response.status_code == 200\n        assert response.json()[\"status\"] == \"pending\"\n</code></pre>"},{"location":"development/testing/#continuous-integration","title":"Continuous Integration","text":""},{"location":"development/testing/#github-actions-workflow","title":"GitHub Actions Workflow","text":"<pre><code># .github/workflows/test.yml\nname: Test Suite\n\non: [push, pull_request]\n\njobs:\n  frontend-tests:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \"18\"\n      - name: Install dependencies\n        working-directory: ./frontend\n        run: npm ci\n      - name: Run tests\n        working-directory: ./frontend\n        run: npm test -- --coverage --watchAll=false\n      - name: Upload coverage\n        uses: codecov/codecov-action@v3\n\n  backend-tests:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: \"3.11\"\n      - name: Install dependencies\n        working-directory: ./backend\n        run: |\n          pip install -r requirements.txt\n          pip install pytest-cov\n      - name: Run tests\n        working-directory: ./backend\n        run: pytest --cov=app --cov-report=xml\n      - name: Upload coverage\n        uses: codecov/codecov-action@v3\n</code></pre>"},{"location":"development/testing/#test-best-practices","title":"Test Best Practices","text":"<ol> <li>Test Naming: Use descriptive names that explain what is being tested</li> <li>Test Organization: Group related tests and use consistent structure</li> <li>Test Data: Use fixtures and factories for consistent test data</li> <li>Mocking: Mock external dependencies and services</li> <li>Coverage: Aim for high test coverage but focus on critical paths</li> <li>Performance: Keep tests fast and independent</li> <li>Maintenance: Keep tests updated with code changes</li> </ol>"},{"location":"development/testing/#debugging-tests","title":"Debugging Tests","text":""},{"location":"development/testing/#frontend-test-debugging","title":"Frontend Test Debugging","text":"<pre><code># Run tests in debug mode\nnpm test -- --detectOpenHandles --verbose\n\n# Run single test file in debug mode\nnpm test -- --testNamePattern=\"should submit emergency request\" --verbose\n</code></pre>"},{"location":"development/testing/#backend-test-debugging","title":"Backend Test Debugging","text":"<pre><code># Run tests with detailed output\npytest -v -s\n\n# Run specific test with debugging\npytest tests/test_auth.py::test_login -v -s --pdb\n</code></pre> <p>This comprehensive testing guide ensures the reliability and quality of the disaster response coordination system across all components.</p>"},{"location":"getting-started/docker/","title":"Docker Setup Guide","text":"<p>Complete guide for running the Disaster Response Coordination System with Docker.</p>"},{"location":"getting-started/docker/#prerequisites","title":"\ud83d\udc33 Prerequisites","text":"<p>Ensure you have the following installed:</p> <ul> <li>Docker: Version 20.10 or higher</li> <li>Docker Compose: Version 2.0 or higher</li> <li>Make: For convenience commands (optional)</li> </ul>"},{"location":"getting-started/docker/#installation-links","title":"Installation Links","text":"<ul> <li>Docker Desktop (Windows/Mac)</li> <li>Docker Engine (Linux)</li> </ul>"},{"location":"getting-started/docker/#docker-architecture","title":"\ud83d\udcc1 Docker Architecture","text":"<pre><code>graph TB\n    subgraph \"Docker Network: disaster_network\"\n        subgraph \"Frontend Services\"\n            NGINX[Nginx&lt;br/&gt;Port: 80]\n            REACT[React Dev&lt;br/&gt;Port: 3000]\n        end\n\n        subgraph \"Backend Services\"\n            API[FastAPI&lt;br/&gt;Port: 8000]\n            AI[AI Agents&lt;br/&gt;AGNO Workers]\n        end\n\n        subgraph \"Data Services\"\n            PG[(PostgreSQL&lt;br/&gt;Port: 5432)]\n            REDIS[(Redis&lt;br/&gt;Port: 6379)]\n        end\n\n        subgraph \"Management Tools\"\n            PGADMIN[pgAdmin&lt;br/&gt;Port: 5050]\n            REDISCOM[Redis Commander&lt;br/&gt;Port: 8081]\n            FLOWER[Flower&lt;br/&gt;Port: 5555]\n        end\n    end\n\n    NGINX --&gt; API\n    REACT --&gt; API\n    API --&gt; PG\n    API --&gt; REDIS\n    AI --&gt; PG\n    AI --&gt; REDIS\n\n    PGADMIN --&gt; PG\n    REDISCOM --&gt; REDIS\n    FLOWER --&gt; AI</code></pre>"},{"location":"getting-started/docker/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"getting-started/docker/#1-environment-setup","title":"1. Environment Setup","text":"<pre><code># Clone repository\ngit clone &lt;repository-url&gt;\ncd IntelliHack-2025-Final-Round-Challenge\n\n# Create environment file\ncp ai_services/.env.example ai_services/.env\n</code></pre> <p>Edit <code>ai_services/.env</code> with your OpenAI API key:</p> <pre><code>OPENAI_API_KEY=your-openai-api-key-here\n</code></pre>"},{"location":"getting-started/docker/#2-start-all-services","title":"2. Start All Services","text":"<pre><code># Using Make (recommended)\nmake docker-up\n\n# Or directly with Docker Compose\ndocker-compose up -d\n</code></pre>"},{"location":"getting-started/docker/#3-initialize-database","title":"3. Initialize Database","text":"<pre><code># Run migrations and seed data\nmake db-setup\n\n# Or manually\ndocker-compose exec api python database/init_db.py\n</code></pre>"},{"location":"getting-started/docker/#docker-services","title":"\ud83d\udee0\ufe0f Docker Services","text":""},{"location":"getting-started/docker/#core-application-services","title":"Core Application Services","text":"Service Description Port Health Check <code>frontend</code> React development server 3000 http://localhost:3000 <code>api</code> FastAPI backend 8000 http://localhost:8000/health <code>ai_services</code> AGNO AI agents - Internal <code>nginx</code> Reverse proxy 80 http://localhost"},{"location":"getting-started/docker/#data-services","title":"Data Services","text":"Service Description Port Credentials <code>postgres</code> PostgreSQL database 5432 postgres/password <code>redis</code> Redis cache &amp; sessions 6379 No password"},{"location":"getting-started/docker/#management-tools","title":"Management Tools","text":"Service Description Port Access <code>pgadmin</code> Database management 5050 admin@admin.com/admin <code>redis-commander</code> Redis management 8081 No auth <code>flower</code> Task monitoring 5555 No auth"},{"location":"getting-started/docker/#docker-commands","title":"\ud83d\udccb Docker Commands","text":""},{"location":"getting-started/docker/#service-management","title":"Service Management","text":"<pre><code># Start all services\nmake docker-up\n# or\ndocker-compose up -d\n\n# Stop all services\nmake docker-down\n# or\ndocker-compose down\n\n# Restart services\nmake docker-restart\n# or\ndocker-compose restart\n\n# View logs\nmake docker-logs\n# or\ndocker-compose logs -f\n\n# Check service status\ndocker-compose ps\n</code></pre>"},{"location":"getting-started/docker/#development-commands","title":"Development Commands","text":"<pre><code># Start in development mode (with file watching)\nmake docker-dev\n\n# Rebuild services after code changes\nmake docker-build\n# or\ndocker-compose build\n\n# Start specific service\ndocker-compose up -d postgres redis\ndocker-compose up frontend\n\n# Execute commands in containers\ndocker-compose exec api bash\ndocker-compose exec postgres psql -U postgres disaster_response\n</code></pre>"},{"location":"getting-started/docker/#database-operations","title":"Database Operations","text":"<pre><code># Initialize database\nmake db-setup\n\n# Reset database (destructive!)\nmake db-reset\n\n# Backup database\nmake db-backup\n\n# Restore database\nmake db-restore backup.sql\n\n# Run migrations only\ndocker-compose exec api alembic upgrade head\n</code></pre>"},{"location":"getting-started/docker/#troubleshooting-commands","title":"Troubleshooting Commands","text":"<pre><code># View detailed logs for specific service\ndocker-compose logs -f api\ndocker-compose logs -f postgres\n\n# Check container health\ndocker-compose exec api curl http://localhost:8000/health\n\n# Inspect network\ndocker network inspect intellihack-2025-final-round-challenge_disaster_network\n\n# Clean up (remove containers, networks, volumes)\nmake docker-clean\n# or\ndocker-compose down -v --remove-orphans\ndocker system prune -f\n</code></pre>"},{"location":"getting-started/docker/#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"getting-started/docker/#docker-compose-override","title":"Docker Compose Override","text":"<p>Create <code>docker-compose.override.yml</code> for local customizations:</p> <pre><code>version: \"3.8\"\n\nservices:\n  api:\n    ports:\n      - \"8000:8000\"\n    environment:\n      DEBUG: \"true\"\n      LOG_LEVEL: \"DEBUG\"\n    volumes:\n      - ./ai_services:/app:cached\n\n  frontend:\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - ./frontend:/app:cached\n      - /app/node_modules\n    environment:\n      FAST_REFRESH: \"true\"\n</code></pre>"},{"location":"getting-started/docker/#environment-variables","title":"Environment Variables","text":"<p>Docker services use these environment files:</p> <ul> <li><code>ai_services/.env</code> - Backend configuration</li> <li><code>.env</code> - Docker Compose variables (optional)</li> </ul> <p>Key Docker-specific variables:</p> <pre><code># Docker Compose settings\nCOMPOSE_PROJECT_NAME=disaster-response\nCOMPOSE_FILE=docker-compose.yml:docker-compose.override.yml\n\n# Database\nPOSTGRES_DB=disaster_response\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=password\n\n# Redis\nREDIS_PASSWORD=\n\n# Network\nDISASTER_NETWORK_SUBNET=172.20.0.0/16\n</code></pre>"},{"location":"getting-started/docker/#volume-mounts","title":"Volume Mounts","text":"<p>The system uses these volumes:</p> <pre><code>volumes:\n  postgres_data: # Database persistence\n  redis_data: # Redis persistence\n  node_modules: # Frontend dependencies\n  ai_services_cache: # Python cache\n</code></pre>"},{"location":"getting-started/docker/#network-configuration","title":"\ud83c\udf10 Network Configuration","text":""},{"location":"getting-started/docker/#port-mapping","title":"Port Mapping","text":"<p>Default port mapping:</p> <ul> <li>80 \u2192 Nginx (production entry point)</li> <li>3000 \u2192 React development server</li> <li>8000 \u2192 FastAPI backend</li> <li>5432 \u2192 PostgreSQL database</li> <li>6379 \u2192 Redis</li> <li>5050 \u2192 pgAdmin</li> <li>8081 \u2192 Redis Commander</li> <li>5555 \u2192 Flower task monitor</li> </ul>"},{"location":"getting-started/docker/#custom-ports","title":"Custom Ports","text":"<p>To avoid conflicts, modify <code>docker-compose.yml</code>:</p> <pre><code>services:\n  frontend:\n    ports:\n      - \"3001:3000\" # Use port 3001 instead\n\n  api:\n    ports:\n      - \"8001:8000\" # Use port 8001 instead\n</code></pre>"},{"location":"getting-started/docker/#development-workflow","title":"\ud83c\udfd7\ufe0f Development Workflow","text":""},{"location":"getting-started/docker/#code-changes","title":"Code Changes","text":"<ol> <li>Frontend changes: Auto-reload via React dev server</li> <li>Backend changes: Auto-reload via uvicorn</li> <li>Database changes: Restart required</li> </ol> <pre><code># Apply database migrations\nmake db-migrate\n\n# Restart backend after schema changes\ndocker-compose restart api ai_services\n</code></pre>"},{"location":"getting-started/docker/#debugging","title":"Debugging","text":"<pre><code># Enter container for debugging\ndocker-compose exec api bash\ndocker-compose exec frontend sh\n\n# View real-time logs\ndocker-compose logs -f api frontend\n\n# Debug database\ndocker-compose exec postgres psql -U postgres disaster_response\n</code></pre>"},{"location":"getting-started/docker/#testing-in-docker","title":"Testing in Docker","text":"<pre><code># Run backend tests\ndocker-compose exec api pytest\n\n# Run frontend tests\ndocker-compose exec frontend npm test\n\n# Run tests with coverage\ndocker-compose exec api pytest --cov=./ --cov-report=html\n</code></pre>"},{"location":"getting-started/docker/#production-deployment","title":"\ud83d\ude80 Production Deployment","text":""},{"location":"getting-started/docker/#production-docker-compose","title":"Production Docker Compose","text":"<p>Create <code>docker-compose.prod.yml</code>:</p> <pre><code>version: \"3.8\"\n\nservices:\n  frontend:\n    build:\n      context: ./frontend\n      dockerfile: Dockerfile\n    environment:\n      NODE_ENV: production\n\n  api:\n    build:\n      context: ./ai_services\n      dockerfile: Dockerfile\n    environment:\n      ENVIRONMENT: production\n      DEBUG: \"false\"\n\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/prod.conf:/etc/nginx/nginx.conf\n      - ./ssl:/etc/nginx/ssl\n</code></pre>"},{"location":"getting-started/docker/#ssl-configuration","title":"SSL Configuration","text":"<pre><code># Generate SSL certificates\nmkdir ssl\nopenssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\n    -keyout ssl/private.key \\\n    -out ssl/certificate.crt\n</code></pre>"},{"location":"getting-started/docker/#health-checks","title":"\ud83d\udd0d Health Checks","text":"<p>All services include health checks:</p> <pre><code># Check all service health\ndocker-compose ps\n\n# Manual health checks\ncurl http://localhost:8000/health\ncurl http://localhost:3000\ncurl http://localhost/health\n</code></pre> <p>Health check endpoints:</p> <ul> <li>API: <code>/health</code> - Returns system status</li> <li>Frontend: <code>/</code> - React app loads</li> <li>Database: Connection test</li> <li>Redis: Ping command</li> </ul>"},{"location":"getting-started/docker/#next-steps","title":"\ud83d\udcda Next Steps","text":"<ul> <li>Environment Configuration - Configure variables</li> <li>Quick Setup - Alternative setup methods</li> <li>Troubleshooting - Common Docker issues</li> </ul> <p>Need help with Docker? Check our Troubleshooting Guide for common solutions.</p>"},{"location":"getting-started/environment/","title":"Environment Configuration","text":"<p>Configure your environment variables for optimal system performance and security.</p>"},{"location":"getting-started/environment/#required-configuration","title":"\ud83d\udccb Required Configuration","text":""},{"location":"getting-started/environment/#openai-api-configuration","title":"OpenAI API Configuration","text":"<p>The AI agents require OpenAI API access:</p> <pre><code># Required for AI Agents\nOPENAI_API_KEY=your-openai-api-key-here\nOPENAI_MODEL=gpt-4o-mini\nOPENAI_MAX_TOKENS=1000\n</code></pre> <p>Getting OpenAI API Key</p> <ol> <li>Visit OpenAI Platform</li> <li>Create an account or sign in</li> <li>Navigate to API Keys section</li> <li>Create a new API key</li> <li>Copy and paste into your <code>.env</code> file</li> </ol>"},{"location":"getting-started/environment/#database-configuration","title":"Database Configuration","text":"<p>Local SQLite database is used by default:</p> <pre><code>DATABASE_URL=sqlite:///./disaster_response.db\n</code></pre>"},{"location":"getting-started/environment/#authentication-security","title":"Authentication &amp; Security","text":"<pre><code># JWT Configuration\nJWT_SECRET=your-super-secret-jwt-key-here-must-be-long-and-random\nJWT_ALGORITHM=HS256\nJWT_EXPIRE_MINUTES=1440\n\n# Session configuration\nSESSION_SECRET=your-session-secret-key\n</code></pre> <p>Security Best Practices</p> <ul> <li>Use strong, random secrets (minimum 32 characters)</li> <li>Never commit <code>.env</code> files to version control</li> <li>Rotate secrets regularly in production</li> <li>Use different secrets for each environment</li> </ul>"},{"location":"getting-started/environment/#optional-configuration","title":"\ud83d\udd27 Optional Configuration","text":""},{"location":"getting-started/environment/#redis-configuration","title":"Redis Configuration","text":"<p>For caching and session storage:</p> <pre><code># Redis configuration\nREDIS_URL=redis://localhost:6379/0\nREDIS_PASSWORD=\nREDIS_DB=0\n</code></pre>"},{"location":"getting-started/environment/#email-sms-services","title":"Email &amp; SMS Services","text":"<p>For notifications (optional):</p> <pre><code># Email configuration (SendGrid example)\nSENDGRID_API_KEY=your-sendgrid-api-key\nFROM_EMAIL=noreply@disaster-response.com\n\n# SMS configuration (Twilio example)\nTWILIO_ACCOUNT_SID=your-twilio-account-sid\nTWILIO_AUTH_TOKEN=your-twilio-auth-token\nTWILIO_PHONE_NUMBER=+1234567890\n</code></pre>"},{"location":"getting-started/environment/#external-apis","title":"External APIs","text":"<p>Integration with external services:</p> <pre><code># Weather API\nWEATHER_API_KEY=your-weather-api-key\n\n# Maps &amp; Geocoding\nGOOGLE_MAPS_API_KEY=your-google-maps-api-key\n\n# Emergency Services API\nEMERGENCY_API_ENDPOINT=https://api.emergency-services.gov\nEMERGENCY_API_KEY=your-emergency-api-key\n</code></pre>"},{"location":"getting-started/environment/#environment-specific-settings","title":"\ud83c\udf0d Environment-Specific Settings","text":""},{"location":"getting-started/environment/#development-environment","title":"Development Environment","text":"<pre><code># Development settings\nENVIRONMENT=development\nDEBUG=true\nLOG_LEVEL=DEBUG\n\n# CORS settings for development\nCORS_ORIGINS=[\"http://localhost:3000\", \"http://localhost:5173\"]\n\n# Database debug\nDATABASE_ECHO=true\n</code></pre>"},{"location":"getting-started/environment/#production-environment","title":"Production Environment","text":"<pre><code># Production settings\nENVIRONMENT=production\nDEBUG=false\nLOG_LEVEL=INFO\n\n# Security settings\nCORS_ORIGINS=[\"https://your-domain.com\"]\nSECURE_COOKIES=true\nHTTPS_ONLY=true\n\n# Performance settings\nDATABASE_POOL_SIZE=20\nDATABASE_MAX_OVERFLOW=30\nREDIS_MAX_CONNECTIONS=100\n</code></pre>"},{"location":"getting-started/environment/#testing-environment","title":"Testing Environment","text":"<pre><code># Testing settings\nENVIRONMENT=testing\nDATABASE_URL=postgresql://postgres:password@localhost:5432/disaster_response_test\nREDIS_URL=redis://localhost:6379/1\n\n# Disable external services in tests\nDISABLE_NOTIFICATIONS=true\nMOCK_EXTERNAL_APIS=true\n</code></pre>"},{"location":"getting-started/environment/#configuration-files","title":"\ud83d\udcc1 Configuration Files","text":""},{"location":"getting-started/environment/#main-environment-file","title":"Main Environment File","text":"<p>Create <code>ai_services/.env</code>:</p> <pre><code>cp ai_services/.env.example ai_services/.env\n</code></pre> <p>Edit with your configuration:</p> <pre><code># Core Configuration\nENVIRONMENT=development\nDEBUG=true\n\n# OpenAI Configuration\nOPENAI_API_KEY=sk-your-openai-api-key-here\nOPENAI_MODEL=gpt-4o-mini\n\n# Database\nDATABASE_URL=postgresql://postgres:password@postgres:5432/disaster_response\n\n# Security\nJWT_SECRET=your-very-long-random-secret-key-here\nSESSION_SECRET=another-random-secret-key\n\n# Redis\nREDIS_URL=redis://redis:6379/0\n\n# API Configuration\nAPI_HOST=0.0.0.0\nAPI_PORT=8000\nAPI_WORKERS=4\n\n# CORS\nCORS_ORIGINS=[\"http://localhost:3000\", \"http://localhost:5173\"]\n\n# Logging\nLOG_LEVEL=INFO\nLOG_FORMAT=json\n</code></pre>"},{"location":"getting-started/environment/#docker-environment","title":"Docker Environment","text":"<p>For Docker Compose, also create <code>docker.env</code>:</p> <pre><code># Docker-specific overrides\nPOSTGRES_DB=disaster_response\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=password\n\nREDIS_PASSWORD=\n</code></pre>"},{"location":"getting-started/environment/#environment-validation","title":"\ud83d\udd0d Environment Validation","text":"<p>The system validates environment configuration on startup:</p> <pre><code># Check configuration\nmake validate-env\n\n# Or manually\ncd ai_services\nuv run python -c \"from core.config import settings; print('\u2705 Configuration valid')\"\n</code></pre>"},{"location":"getting-started/environment/#common-validation-errors","title":"Common Validation Errors","text":"<p>Missing OpenAI API Key</p> <pre><code>Error: OPENAI_API_KEY is required\n</code></pre> <p>Solution: Add your OpenAI API key to <code>.env</code> file</p> <p>Invalid Database URL</p> <pre><code>Error: Cannot connect to database\n</code></pre> <p>Solution: Verify database is running and URL is correct</p> <p>Weak JWT Secret</p> <pre><code>Warning: JWT_SECRET should be at least 32 characters\n</code></pre> <p>Solution: Generate a longer random secret</p>"},{"location":"getting-started/environment/#quick-setup-commands","title":"\ud83d\ude80 Quick Setup Commands","text":"<pre><code># Generate random secrets\nopenssl rand -hex 32  # For JWT_SECRET\nopenssl rand -hex 24  # For SESSION_SECRET\n\n# Test database connection\npsql $DATABASE_URL -c \"SELECT version();\"\n\n# Test Redis connection\nredis-cli -u $REDIS_URL ping\n\n# Validate OpenAI API\ncurl -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n     https://api.openai.com/v1/models | jq '.data[0].id'\n</code></pre>"},{"location":"getting-started/environment/#next-steps","title":"\ud83d\udcda Next Steps","text":"<ul> <li>Docker Setup - Container configuration</li> <li>Quick Setup - Get running quickly</li> <li>API Reference - API configuration options</li> </ul> <p>Need help? Check the Troubleshooting Guide for common configuration issues.</p>"},{"location":"getting-started/quick-setup/","title":"Quick Setup Guide","text":"<p>Get the Disaster Response Coordination System running in minutes with Docker.</p>"},{"location":"getting-started/quick-setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker and Docker Compose installed</li> <li>OpenAI API key (for AI agents)</li> </ul>"},{"location":"getting-started/quick-setup/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"getting-started/quick-setup/#1-clone-and-navigate","title":"1. Clone and Navigate","text":"<pre><code>git clone &lt;repository-url&gt;\ncd IntelliHack-2025-Final-Round-Challenge\n</code></pre>"},{"location":"getting-started/quick-setup/#2-environment-setup","title":"2. Environment Setup","text":"<p>Copy the environment template:</p> <pre><code>cp ai_services/.env.example ai_services/.env\n</code></pre> <p>Edit <code>ai_services/.env</code> with your configuration:</p> <pre><code># Required for AI Agents\nOPENAI_API_KEY=your-openai-api-key-here\n\n# Local SQLite database\nDATABASE_URL=sqlite:///./disaster_response.db\n\n# JWT Configuration\nJWT_SECRET=your-super-secret-jwt-key-here\n</code></pre>"},{"location":"getting-started/quick-setup/#3-start-the-system","title":"3. Start the System","text":"<pre><code># Start all services\nmake up\n\n# Or manually with docker-compose\ndocker-compose up -d\n</code></pre>"},{"location":"getting-started/quick-setup/#4-initialize-database","title":"4. Initialize Database","text":"<pre><code># Run database migrations and seed data\nmake db-setup\n</code></pre>"},{"location":"getting-started/quick-setup/#5-access-the-application","title":"5. Access the Application","text":"<ul> <li>Frontend: http://localhost:3000</li> <li>API: http://localhost:8000</li> <li>API Docs: http://localhost:8000/docs</li> </ul>"},{"location":"getting-started/quick-setup/#test-accounts","title":"\ud83d\udcf1 Test Accounts","text":"<p>Login with these pre-configured accounts:</p> Affected IndividualVolunteerFirst ResponderAdministrator <pre><code>Email: affected@test.com\nPassword: testpass123\n</code></pre> <pre><code>Email: volunteer@test.com\nPassword: testpass123\n</code></pre> <pre><code>Email: responder@test.com\nPassword: testpass123\n</code></pre> <pre><code>Email: admin@test.com\nPassword: testpass123\n</code></pre>"},{"location":"getting-started/quick-setup/#development-commands","title":"\ud83d\udd27 Development Commands","text":"<p>All commands available via Makefile:</p> <pre><code># Development\nmake dev           # Start in development mode\nmake logs          # View logs\nmake restart       # Restart services\n\n# Database\nmake db-setup      # Initialize database\nmake db-reset      # Reset database\nmake db-backup     # Backup database\n\n# Testing\nmake test          # Run all tests\nmake test-backend  # Backend tests only\nmake test-frontend # Frontend tests only\n\n# Maintenance\nmake down          # Stop all services\nmake clean         # Clean up containers and volumes\n</code></pre>"},{"location":"getting-started/quick-setup/#troubleshooting","title":"\ud83d\udc1b Troubleshooting","text":""},{"location":"getting-started/quick-setup/#common-issues","title":"Common Issues","text":"<p>Port Already in Use</p> <p>If ports 3000 or 8000 are in use:</p> <pre><code># Check what's using the port\nlsof -i :3000\nlsof -i :8000\n\n# Kill the process or change ports in docker-compose.yml\n</code></pre> <p>Database Connection Failed</p> <p>Ensure PostgreSQL is running:</p> <pre><code># Check container status\ndocker-compose ps\n\n# View database logs\ndocker-compose logs postgres\n</code></pre> <p>AI Agents Not Working</p> <p>Verify OpenAI API key:</p> <pre><code># Test API key\ncurl -H \"Authorization: Bearer $OPENAI_API_KEY\" \\\n     https://api.openai.com/v1/models\n</code></pre>"},{"location":"getting-started/quick-setup/#getting-help","title":"Getting Help","text":"<ul> <li>Check the Troubleshooting Guide</li> <li>View application logs: <code>make logs</code></li> <li>Check service health: <code>docker-compose ps</code></li> </ul>"},{"location":"getting-started/quick-setup/#next-steps","title":"\u2705 Next Steps","text":"<p>Once the system is running:</p> <ol> <li>Explore User Interfaces - Learn about role-based dashboards</li> <li>Understand AI Agents - How the AI workflow processes requests</li> <li>API Integration - Integrate with external systems</li> <li>MCP Setup - Connect to LLM applications</li> </ol> <p>Need more detailed setup? Check the Environment Configuration guide.</p>"},{"location":"mcp/overview/","title":"MCP Integration Overview","text":"<p>The Disaster Response Coordination System supports the Model Context Protocol (MCP), enabling seamless integration with Large Language Model applications and AI assistants.</p>"},{"location":"mcp/overview/#what-is-mcp","title":"\ud83d\udd17 What is MCP?","text":"<p>Model Context Protocol (MCP) is a universal standard for connecting AI assistants to external tools and data sources. Our MCP server exposes disaster response capabilities as standardized tools that can be used by any MCP-compatible LLM application.</p>"},{"location":"mcp/overview/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":"<pre><code>graph TB\n    subgraph \"LLM Applications\"\n        A[Claude Desktop]\n        B[Custom AI Assistant]\n        C[Other MCP Clients]\n    end\n\n    subgraph \"MCP Server\"\n        D[Disaster Response MCP Server]\n        E[Tool Handlers]\n        F[Resource Providers]\n    end\n\n    subgraph \"Disaster Response System\"\n        G[AGNO Agents]\n        H[Database]\n        I[WebSocket System]\n        J[Resource Management]\n    end\n\n    A --&gt; D\n    B --&gt; D\n    C --&gt; D\n\n    D --&gt; E\n    D --&gt; F\n\n    E --&gt; G\n    E --&gt; H\n    F --&gt; H\n    F --&gt; J</code></pre>"},{"location":"mcp/overview/#available-tools","title":"\ud83d\udee0\ufe0f Available Tools","text":"<p>The MCP server exposes these disaster response tools:</p>"},{"location":"mcp/overview/#emergency-request-processing","title":"Emergency Request Processing","text":"<p>Tool: <code>process_emergency_request</code></p> <p>Process an emergency help request through the complete AGNO agent pipeline.</p> <pre><code>{\n  \"name\": \"process_emergency_request\",\n  \"description\": \"Process an emergency help request through the AGNO agent pipeline\",\n  \"inputSchema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"title\": {\n        \"type\": \"string\",\n        \"description\": \"Brief title of the emergency request\"\n      },\n      \"description\": {\n        \"type\": \"string\",\n        \"description\": \"Detailed description of the emergency situation\"\n      },\n      \"location\": {\n        \"type\": \"string\",\n        \"description\": \"Location of the emergency (optional)\"\n      },\n      \"contact_info\": {\n        \"type\": \"string\",\n        \"description\": \"Contact information for the requester (optional)\"\n      }\n    },\n    \"required\": [\"title\", \"description\"]\n  }\n}\n</code></pre> <p>Example Usage:</p> <pre><code>Human: Process this emergency: \"Building collapse at 123 Main Street, people trapped\"\n\nAI Response: I'll process this emergency request through the disaster response system.\n\n{\n  \"success\": true,\n  \"request_id\": \"req_20240115_103045_001\",\n  \"message\": \"Emergency request processed successfully\",\n  \"processing_result\": {\n    \"intake\": {\n      \"needs\": [\"rescue\", \"medical\"],\n      \"priority\": \"critical\",\n      \"extracted_location\": \"123 Main Street\"\n    },\n    \"assignment\": {\n      \"assigned_teams\": [\"rescue_team_1\", \"medical_team_2\"],\n      \"estimated_response_time\": \"8 minutes\"\n    }\n  }\n}\n</code></pre>"},{"location":"mcp/overview/#system-status-monitoring","title":"System Status Monitoring","text":"<p>Tool: <code>get_agent_status</code></p> <p>Get current status of the disaster response AI agent system.</p> <pre><code>{\n  \"name\": \"get_agent_status\",\n  \"description\": \"Get current status of the disaster response AI agent system\",\n  \"inputSchema\": {\n    \"type\": \"object\",\n    \"properties\": {}\n  }\n}\n</code></pre>"},{"location":"mcp/overview/#active-request-management","title":"Active Request Management","text":"<p>Tool: <code>get_active_requests</code></p> <p>Retrieve active disaster response requests with filtering options.</p> <pre><code>{\n  \"name\": \"get_active_requests\",\n  \"description\": \"Retrieve active disaster response requests with their status\",\n  \"inputSchema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"status\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"PENDING\",\n          \"PROCESSING\",\n          \"ASSIGNED\",\n          \"IN_PROGRESS\",\n          \"COMPLETED\"\n        ],\n        \"description\": \"Filter requests by status (optional)\"\n      },\n      \"priority\": {\n        \"type\": \"string\",\n        \"enum\": [\"CRITICAL\", \"HIGH\", \"MEDIUM\", \"LOW\"],\n        \"description\": \"Filter requests by priority (optional)\"\n      },\n      \"limit\": {\n        \"type\": \"integer\",\n        \"description\": \"Maximum number of requests to return (default: 10)\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"mcp/overview/#available-resources","title":"\ud83d\udcca Available Resources","text":"<p>The MCP server provides access to real-time disaster response data:</p>"},{"location":"mcp/overview/#active-emergency-requests","title":"Active Emergency Requests","text":"<p>Resource: <code>disaster://requests/active</code></p> <p>Real-time access to all active emergency requests in the system.</p>"},{"location":"mcp/overview/#agent-system-status","title":"Agent System Status","text":"<p>Resource: <code>disaster://agents/status</code></p> <p>Current status and metrics of the AI agent system.</p>"},{"location":"mcp/overview/#resource-inventory","title":"Resource Inventory","text":"<p>Resource: <code>disaster://resources/inventory</code></p> <p>Current inventory of disaster response resources (supplies, equipment, personnel).</p>"},{"location":"mcp/overview/#available-volunteers","title":"Available Volunteers","text":"<p>Resource: <code>disaster://volunteers/available</code></p> <p>List of available volunteers and their skills/locations.</p>"},{"location":"mcp/overview/#real-time-integration","title":"\ud83d\udd04 Real-time Integration","text":"<p>The MCP server provides real-time access to the disaster response system:</p> <pre><code>sequenceDiagram\n    participant LLM as LLM Application\n    participant MCP as MCP Server\n    participant System as Disaster Response System\n\n    LLM-&gt;&gt;MCP: Request tool execution\n    MCP-&gt;&gt;System: Execute operation\n    System-&gt;&gt;System: Process through agents\n    System-&gt;&gt;MCP: Return results\n    MCP-&gt;&gt;LLM: Formatted response\n\n    Note over System: Real-time WebSocket updates\n    System--&gt;&gt;MCP: Status notifications\n    MCP--&gt;&gt;LLM: Live updates</code></pre>"},{"location":"mcp/overview/#use-cases","title":"\ud83c\udfaf Use Cases","text":""},{"location":"mcp/overview/#emergency-response-coordination","title":"Emergency Response Coordination","text":"<pre><code>Human: \"What active emergencies need immediate attention?\"\n\nAI: Let me check the current emergency status.\n\n[Calls get_active_requests with priority=\"CRITICAL\"]\n\nCurrently there are 3 critical emergencies requiring immediate attention:\n1. Building collapse at 123 Main St - Rescue team dispatched, ETA 5 minutes\n2. Medical emergency at City Park - Ambulance en route\n3. Gas leak at Oak Avenue - Hazmat team responding\n</code></pre>"},{"location":"mcp/overview/#resource-management","title":"Resource Management","text":"<pre><code>Human: \"Do we have enough medical supplies for a mass casualty event?\"\n\nAI: I'll check the current resource inventory.\n\n[Calls disaster://resources/inventory]\n\nCurrent medical supply status:\n- First aid kits: 45 available (above minimum threshold)\n- Emergency medications: 23 units (low stock alert)\n- Stretchers: 12 available\n- Medical oxygen: 8 tanks (adequate for current operations)\n\nRecommendation: Restock emergency medications before next deployment.\n</code></pre>"},{"location":"mcp/overview/#volunteer-coordination","title":"Volunteer Coordination","text":"<pre><code>Human: \"I need to assign volunteers with medical training to a new emergency\"\n\nAI: Let me find available volunteers with medical skills.\n\n[Calls disaster://volunteers/available with medical skill filter]\n\nFound 7 volunteers with medical training currently available:\n- Dr. Sarah Johnson (Emergency Medicine) - Downtown area\n- Nurse Mike Chen (ICU) - North district\n- EMT Lisa Rodriguez (Paramedic) - Central area\n...\n\nWould you like me to assign specific volunteers to the emergency?\n</code></pre>"},{"location":"mcp/overview/#benefits","title":"\ud83d\ude80 Benefits","text":""},{"location":"mcp/overview/#for-llm-applications","title":"For LLM Applications","text":"<ul> <li>Direct Emergency Response: Submit and track emergency requests</li> <li>Real-time Monitoring: Access live system status and updates</li> <li>Resource Awareness: Check availability before making assignments</li> <li>Workflow Integration: Incorporate disaster response into broader AI workflows</li> </ul>"},{"location":"mcp/overview/#for-emergency-managers","title":"For Emergency Managers","text":"<ul> <li>AI-Assisted Coordination: Use AI assistants to manage complex response scenarios</li> <li>Natural Language Interface: Query system status using plain English</li> <li>Automated Reporting: Generate status reports and summaries</li> <li>Decision Support: Get AI-powered recommendations for resource allocation</li> </ul>"},{"location":"mcp/overview/#for-developers","title":"For Developers","text":"<ul> <li>Standardized Integration: Use MCP instead of custom API integrations</li> <li>Tool Composition: Combine disaster response tools with other MCP tools</li> <li>Event-Driven Updates: Receive real-time notifications through MCP</li> <li>Easy Testing: Use any MCP client to test and validate integrations</li> </ul>"},{"location":"mcp/overview/#technical-implementation","title":"\ud83d\udd27 Technical Implementation","text":"<p>The MCP server is implemented using the official MCP Python SDK:</p> <pre><code>from mcp.server import Server\nfrom mcp.server.stdio import stdio_server\n\nclass DisasterResponseMCPServer:\n    def __init__(self):\n        self.server = Server(\"disaster-response-mcp\")\n        self.agent_coordinator = AgentCoordinator()\n        self._setup_tools()\n        self._setup_resources()\n</code></pre> <p>Key features:</p> <ul> <li>Async Support: All operations are asynchronous for better performance</li> <li>Error Handling: Comprehensive error handling with informative messages</li> <li>Type Safety: Full type annotations and schema validation</li> <li>Logging: Detailed logging for debugging and monitoring</li> </ul>"},{"location":"mcp/overview/#performance-considerations","title":"\ud83d\udcc8 Performance Considerations","text":""},{"location":"mcp/overview/#caching","title":"Caching","text":"<ul> <li>Resource data is cached for 30 seconds to reduce database load</li> <li>Agent status is cached for 10 seconds for real-time responsiveness</li> <li>Request data is never cached to ensure accuracy</li> </ul>"},{"location":"mcp/overview/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Maximum 100 requests per minute per client</li> <li>Bulk operations limited to 50 items per request</li> <li>Long-running operations use background processing</li> </ul>"},{"location":"mcp/overview/#scalability","title":"Scalability","text":"<ul> <li>MCP server can handle multiple concurrent clients</li> <li>Database queries are optimized with proper indexing</li> <li>WebSocket connections are managed efficiently</li> </ul> <p>Next: Available Tools | Setup Guide</p>"},{"location":"mcp/setup/","title":"MCP Setup and Configuration","text":"<p>Complete setup guide for the Model Context Protocol (MCP) integration in the Disaster Response Coordination System.</p>"},{"location":"mcp/setup/#quick-setup","title":"\ud83d\ude80 Quick Setup","text":""},{"location":"mcp/setup/#1-environment-configuration","title":"1. Environment Configuration","text":"<p>Create or update your <code>.env</code> file with MCP-specific settings:</p> <pre><code># MCP Server Configuration\nMCP_SERVER_HOST=localhost\nMCP_SERVER_PORT=8001\nMCP_SERVER_LOG_LEVEL=INFO\n\n# AI Services Configuration\nOPENAI_API_KEY=your_openai_api_key_here\nANTHROPIC_API_KEY=your_anthropic_api_key_here\n\n# Database Configuration (for MCP resource providers)\nDATABASE_URL=postgresql://user:password@localhost:5432/disaster_response\nREDIS_URL=redis://localhost:6379/0\n\n# Supabase Configuration\nSUPABASE_URL=your_supabase_url\nSUPABASE_KEY=your_supabase_anon_key\n</code></pre>"},{"location":"mcp/setup/#2-install-dependencies","title":"2. Install Dependencies","text":"<pre><code># Install MCP-specific dependencies\ncd ai_services\npip install -r requirements.txt\n\n# Additional MCP dependencies\npip install mcp openai anthropic websockets\n</code></pre>"},{"location":"mcp/setup/#3-start-mcp-server","title":"3. Start MCP Server","text":""},{"location":"mcp/setup/#option-a-standalone-mcp-server","title":"Option A: Standalone MCP Server","text":"<pre><code># Run the standalone MCP server\ncd ai_services\npython run_mcp_server.py\n</code></pre>"},{"location":"mcp/setup/#option-b-integrated-with-main-api","title":"Option B: Integrated with Main API","text":"<pre><code># Start the main FastAPI server (includes MCP integration)\ncd ai_services\nuvicorn main:app --reload --host 0.0.0.0 --port 8000\n</code></pre>"},{"location":"mcp/setup/#4-verify-mcp-connection","title":"4. Verify MCP Connection","text":"<p>Test the MCP server is running:</p> <pre><code># Check if MCP server is responding\ncurl http://localhost:8001/health\n\n# Test MCP tools availability\ncurl http://localhost:8001/tools\n</code></pre>"},{"location":"mcp/setup/#advanced-configuration","title":"\ud83d\udd27 Advanced Configuration","text":""},{"location":"mcp/setup/#mcp-server-configuration","title":"MCP Server Configuration","text":"<p>The MCP server can be configured through environment variables or a configuration file:</p> <pre><code># ai_services/config/mcp_config.py\nimport os\n\nMCP_CONFIG = {\n    \"server\": {\n        \"host\": os.getenv(\"MCP_SERVER_HOST\", \"localhost\"),\n        \"port\": int(os.getenv(\"MCP_SERVER_PORT\", 8001)),\n        \"log_level\": os.getenv(\"MCP_SERVER_LOG_LEVEL\", \"INFO\"),\n    },\n    \"tools\": {\n        \"process_emergency_request\": {\n            \"enabled\": True,\n            \"timeout\": 30,\n            \"priority\": \"high\"\n        },\n        \"get_agent_status\": {\n            \"enabled\": True,\n            \"cache_ttl\": 60,\n        },\n        \"assign_volunteer_to_task\": {\n            \"enabled\": True,\n            \"auto_notify\": True,\n        }\n    },\n    \"resources\": {\n        \"database_provider\": {\n            \"connection_pool_size\": 10,\n            \"query_timeout\": 30,\n        },\n        \"cache_provider\": {\n            \"default_ttl\": 300,\n            \"max_keys\": 10000,\n        }\n    }\n}\n</code></pre>"},{"location":"mcp/setup/#custom-tool-development","title":"Custom Tool Development","text":"<p>Add custom MCP tools for specific disaster response scenarios:</p> <pre><code># ai_services/mcp_integration/custom_tools.py\nfrom mcp_integration.server import DisasterResponseMCPServer\nfrom typing import Dict, Any\n\nasync def custom_evacuation_planner(\n    location: str,\n    population: int,\n    threat_type: str\n) -&gt; Dict[str, Any]:\n    \"\"\"\n    Custom tool for evacuation route planning\n    \"\"\"\n    # Implementation for evacuation planning logic\n    return {\n        \"evacuation_routes\": [],\n        \"estimated_time\": \"30 minutes\",\n        \"safe_zones\": [],\n        \"transportation_needed\": True\n    }\n\n# Register custom tool\nmcp_server = DisasterResponseMCPServer()\nmcp_server.register_tool(\n    \"plan_evacuation\",\n    custom_evacuation_planner,\n    description=\"Plan evacuation routes for disaster response\"\n)\n</code></pre>"},{"location":"mcp/setup/#docker-setup","title":"\ud83d\udc33 Docker Setup","text":""},{"location":"mcp/setup/#mcp-server-dockerfile","title":"MCP Server Dockerfile","text":"<pre><code># Dockerfile.mcp\nFROM python:3.11-slim\n\nWORKDIR /app\n\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\nCOPY ai_services/ ./ai_services/\nCOPY config/ ./config/\n\nEXPOSE 8001\n\nCMD [\"python\", \"ai_services/run_mcp_server.py\"]\n</code></pre>"},{"location":"mcp/setup/#docker-compose-integration","title":"Docker Compose Integration","text":"<pre><code># docker-compose.yml (MCP service addition)\nservices:\n  mcp-server:\n    build:\n      context: .\n      dockerfile: Dockerfile.mcp\n    ports:\n      - \"8001:8001\"\n    environment:\n      - MCP_SERVER_HOST=0.0.0.0\n      - MCP_SERVER_PORT=8001\n      - DATABASE_URL=${DATABASE_URL}\n      - REDIS_URL=${REDIS_URL}\n    depends_on:\n      - postgres\n      - redis\n    networks:\n      - disaster-response-network\n    restart: unless-stopped\n</code></pre>"},{"location":"mcp/setup/#client-integration","title":"\ud83d\udd0c Client Integration","text":""},{"location":"mcp/setup/#frontend-mcp-integration","title":"Frontend MCP Integration","text":"<pre><code>// frontend/src/services/mcpService.ts\nclass MCPService {\n  private baseURL = process.env.REACT_APP_MCP_URL || \"http://localhost:8001\";\n\n  async processEmergencyRequest(requestData: any) {\n    const response = await fetch(\n      `${this.baseURL}/tools/process_emergency_request`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n        body: JSON.stringify(requestData),\n      }\n    );\n\n    return response.json();\n  }\n\n  async getAgentStatus() {\n    const response = await fetch(`${this.baseURL}/tools/get_agent_status`);\n    return response.json();\n  }\n\n  async assignVolunteer(taskId: string, volunteerId: string) {\n    return fetch(`${this.baseURL}/tools/assign_volunteer_to_task`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ task_id: taskId, volunteer_id: volunteerId }),\n    });\n  }\n}\n\nexport const mcpService = new MCPService();\n</code></pre>"},{"location":"mcp/setup/#python-client-example","title":"Python Client Example","text":"<pre><code># scripts/mcp_client_example.py\nimport asyncio\nimport aiohttp\nimport json\n\nclass MCPClient:\n    def __init__(self, base_url: str = \"http://localhost:8001\"):\n        self.base_url = base_url\n\n    async def call_tool(self, tool_name: str, **kwargs):\n        async with aiohttp.ClientSession() as session:\n            async with session.post(\n                f\"{self.base_url}/tools/{tool_name}\",\n                json=kwargs\n            ) as response:\n                return await response.json()\n\n    async def process_emergency(self, description: str, location: str):\n        return await self.call_tool(\n            \"process_emergency_request\",\n            description=description,\n            location=location,\n            priority=\"high\"\n        )\n\n# Usage example\nasync def main():\n    client = MCPClient()\n    result = await client.process_emergency(\n        \"Medical emergency at downtown\",\n        \"123 Main St, Downtown\"\n    )\n    print(json.dumps(result, indent=2))\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"mcp/setup/#monitoring-and-debugging","title":"\ud83d\udd0d Monitoring and Debugging","text":""},{"location":"mcp/setup/#mcp-server-logs","title":"MCP Server Logs","text":"<pre><code># View MCP server logs\ntail -f ai_services/logs/mcp_server.log\n\n# Debug mode\nMCP_SERVER_LOG_LEVEL=DEBUG python ai_services/run_mcp_server.py\n</code></pre>"},{"location":"mcp/setup/#health-checks","title":"Health Checks","text":"<pre><code># Basic health check\ncurl http://localhost:8001/health\n\n# Detailed status\ncurl http://localhost:8001/status\n\n# Tool availability\ncurl http://localhost:8001/tools\n</code></pre>"},{"location":"mcp/setup/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code># ai_services/mcp_integration/monitoring.py\nimport time\nimport logging\nfrom functools import wraps\n\ndef monitor_tool_performance(func):\n    @wraps(func)\n    async def wrapper(*args, **kwargs):\n        start_time = time.time()\n        try:\n            result = await func(*args, **kwargs)\n            execution_time = time.time() - start_time\n            logging.info(f\"Tool {func.__name__} executed in {execution_time:.2f}s\")\n            return result\n        except Exception as e:\n            execution_time = time.time() - start_time\n            logging.error(f\"Tool {func.__name__} failed after {execution_time:.2f}s: {e}\")\n            raise\n    return wrapper\n</code></pre>"},{"location":"mcp/setup/#troubleshooting","title":"\ud83d\udea8 Troubleshooting","text":""},{"location":"mcp/setup/#common-issues","title":"Common Issues","text":""},{"location":"mcp/setup/#mcp-server-wont-start","title":"MCP Server Won't Start","text":"<pre><code># Check if port is already in use\nnetstat -tulpn | grep :8001\n\n# Kill existing process\nsudo fuser -k 8001/tcp\n\n# Check environment variables\nenv | grep MCP\n</code></pre>"},{"location":"mcp/setup/#database-connection-issues","title":"Database Connection Issues","text":"<pre><code># Test database connectivity\nfrom core.database import supabase\n\ntry:\n    result = supabase.table(\"help_requests\").select(\"count\").execute()\n    print(\"Database connection: OK\")\nexcept Exception as e:\n    print(f\"Database error: {e}\")\n</code></pre>"},{"location":"mcp/setup/#tool-registration-failures","title":"Tool Registration Failures","text":"<pre><code># Verify tool registration\ncurl http://localhost:8001/tools | jq '.tools[].name'\n\n# Check tool-specific logs\ngrep \"process_emergency_request\" ai_services/logs/mcp_server.log\n</code></pre>"},{"location":"mcp/setup/#performance-optimization","title":"Performance Optimization","text":""},{"location":"mcp/setup/#caching-configuration","title":"Caching Configuration","text":"<pre><code># ai_services/mcp_integration/cache_config.py\nCACHE_CONFIG = {\n    \"agent_status\": {\"ttl\": 60, \"max_size\": 100},\n    \"resource_availability\": {\"ttl\": 300, \"max_size\": 1000},\n    \"active_requests\": {\"ttl\": 30, \"max_size\": 500},\n}\n</code></pre>"},{"location":"mcp/setup/#connection-pooling","title":"Connection Pooling","text":"<pre><code># ai_services/core/database.py\nimport asyncpg\nfrom functools import lru_cache\n\n@lru_cache(maxsize=1)\nasync def get_connection_pool():\n    return await asyncpg.create_pool(\n        dsn=DATABASE_URL,\n        min_size=5,\n        max_size=20,\n        command_timeout=30\n    )\n</code></pre>"},{"location":"mcp/setup/#integration-testing","title":"\ud83d\udd04 Integration Testing","text":""},{"location":"mcp/setup/#end-to-end-test","title":"End-to-End Test","text":"<pre><code># tests/test_mcp_integration.py\nimport pytest\nimport asyncio\nfrom mcp_integration.server import DisasterResponseMCPServer\n\n@pytest.mark.asyncio\nasync def test_full_emergency_workflow():\n    mcp_server = DisasterResponseMCPServer()\n\n    # Test emergency request processing\n    result = await mcp_server.process_emergency_request(\n        description=\"Fire at 123 Main St\",\n        location=\"123 Main St\",\n        priority=\"high\"\n    )\n\n    assert result[\"status\"] == \"processed\"\n    assert \"request_id\" in result\n\n    # Test agent status\n    status = await mcp_server.get_agent_status()\n    assert status[\"active_agents\"] &gt; 0\n\n    # Test volunteer assignment\n    assignment = await mcp_server.assign_volunteer_to_task(\n        task_id=result[\"task_id\"],\n        volunteer_id=\"test_volunteer\"\n    )\n\n    assert assignment[\"status\"] == \"assigned\"\n</code></pre>"},{"location":"mcp/setup/#load-testing","title":"Load Testing","text":"<pre><code># Install load testing tool\npip install locust\n\n# Run load test\nlocust -f tests/load_test_mcp.py --host=http://localhost:8001\n</code></pre>"},{"location":"mcp/setup/#additional-resources","title":"\ud83d\udcda Additional Resources","text":"<ul> <li>MCP Protocol Specification</li> <li>Tool Development Guide</li> <li>Architecture Overview</li> <li>API Documentation</li> <li>Troubleshooting Guide</li> </ul>"},{"location":"mcp/setup/#contributing","title":"\ud83e\udd1d Contributing","text":"<p>When adding new MCP tools or modifying existing ones:</p> <ol> <li>Follow naming conventions: Use descriptive, action-oriented names</li> <li>Add comprehensive documentation: Include usage examples and parameter descriptions</li> <li>Implement error handling: Graceful failure with informative error messages</li> <li>Add tests: Unit tests and integration tests for all new tools</li> <li>Update documentation: Keep this setup guide and tool reference up to date</li> </ol> <p>For more detailed information about specific tools and their usage, see the MCP Tools Reference.</p>"},{"location":"mcp/tools/","title":"MCP Tools Reference","text":"<p>This document provides detailed information about the Model Context Protocol (MCP) tools available in the disaster response coordination system.</p>"},{"location":"mcp/tools/#overview","title":"Overview","text":"<p>The MCP server exposes 6 specialized tools for disaster response coordination. Each tool is designed to handle specific aspects of emergency management, from initial request processing to resource allocation.</p>"},{"location":"mcp/tools/#available-tools","title":"Available Tools","text":""},{"location":"mcp/tools/#1-process_emergency_request","title":"1. process_emergency_request","text":"<p>Purpose: Process and analyze incoming emergency requests using AI-powered triage and prioritization.</p> <p>Input Schema:</p> <pre><code>{\n  \"request_data\": {\n    \"title\": \"string\",\n    \"description\": \"string\",\n    \"location\": \"string\",\n    \"people_count\": \"number\",\n    \"contact_phone\": \"string (optional)\",\n    \"special_requirements\": \"string (optional)\",\n    \"needs\": [\"array of strings\"]\n  }\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"request_id\": \"string\",\n  \"priority\": \"critical|high|medium|low\",\n  \"severity_score\": \"number (1-10)\",\n  \"estimated_response_time\": \"string\",\n  \"recommended_resources\": [\"array of resource types\"],\n  \"assigned_responders\": [\"array of responder IDs\"],\n  \"ai_analysis\": {\n    \"risk_factors\": [\"array of identified risks\"],\n    \"urgency_indicators\": [\"array of urgency markers\"],\n    \"resource_requirements\": \"object\"\n  },\n  \"next_actions\": [\"array of recommended actions\"]\n}\n</code></pre> <p>Usage Example:</p> <pre><code>result = await mcp_client.call_tool(\"process_emergency_request\", {\n  \"request_data\": {\n    \"title\": \"Building Fire on Main Street\",\n    \"description\": \"Large fire at residential building, multiple people trapped\",\n    \"location\": \"123 Main Street, Downtown\",\n    \"people_count\": 15,\n    \"contact_phone\": \"+1234567890\",\n    \"needs\": [\"fire_suppression\", \"medical_assistance\", \"evacuation\"]\n  }\n})\n</code></pre> <p>AI Processing Logic:</p> <ul> <li>Analyzes description for severity indicators</li> <li>Extracts location and resource requirements</li> <li>Calculates priority based on multiple factors</li> <li>Suggests optimal resource allocation</li> <li>Estimates response timeframes</li> </ul>"},{"location":"mcp/tools/#2-get_agent_status","title":"2. get_agent_status","text":"<p>Purpose: Retrieve real-time status information for all AI agents in the system.</p> <p>Input Schema:</p> <pre><code>{\n  \"agent_names\": [\"array of agent names (optional)\"],\n  \"include_metrics\": \"boolean (default: true)\"\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"agents\": {\n    \"agent_name\": {\n      \"status\": \"active|idle|busy|error\",\n      \"current_task\": \"string\",\n      \"last_activity\": \"ISO datetime\",\n      \"processed_requests\": \"number\",\n      \"success_rate\": \"number (0-1)\",\n      \"average_processing_time\": \"number (seconds)\",\n      \"active_assignments\": \"number\",\n      \"capabilities\": [\"array of capabilities\"],\n      \"performance_metrics\": {\n        \"requests_per_hour\": \"number\",\n        \"error_rate\": \"number\",\n        \"response_time_p95\": \"number\"\n      }\n    }\n  },\n  \"system_health\": {\n    \"total_active_agents\": \"number\",\n    \"system_load\": \"number\",\n    \"queue_length\": \"number\"\n  }\n}\n</code></pre> <p>Usage Example:</p> <pre><code>status = await mcp_client.call_tool(\"get_agent_status\", {\n  \"agent_names\": [\"emergency_agent\", \"resource_agent\"],\n  \"include_metrics\": True\n})\n</code></pre>"},{"location":"mcp/tools/#3-get_active_requests","title":"3. get_active_requests","text":"<p>Purpose: Retrieve and filter active emergency requests based on various criteria.</p> <p>Input Schema:</p> <pre><code>{\n  \"filters\": {\n    \"status\": [\"pending\", \"in_progress\", \"assigned\"],\n    \"priority\": [\"critical\", \"high\", \"medium\", \"low\"],\n    \"location\": \"string (optional)\",\n    \"request_type\": [\"medical\", \"fire\", \"natural_disaster\", \"security\"],\n    \"assigned_to\": \"string (user_id, optional)\",\n    \"created_after\": \"ISO datetime (optional)\",\n    \"created_before\": \"ISO datetime (optional)\"\n  },\n  \"sort_by\": \"priority|created_at|location\",\n  \"sort_order\": \"asc|desc\",\n  \"limit\": \"number (default: 50)\",\n  \"include_analytics\": \"boolean (default: false)\"\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"requests\": [\n    {\n      \"id\": \"string\",\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"status\": \"string\",\n      \"priority\": \"string\",\n      \"location\": \"string\",\n      \"people_count\": \"number\",\n      \"created_at\": \"ISO datetime\",\n      \"updated_at\": \"ISO datetime\",\n      \"assigned_responders\": [\"array of user objects\"],\n      \"required_resources\": [\"array of resource types\"],\n      \"estimated_completion\": \"ISO datetime\",\n      \"progress_percentage\": \"number\"\n    }\n  ],\n  \"total_count\": \"number\",\n  \"analytics\": {\n    \"priority_distribution\": \"object\",\n    \"status_distribution\": \"object\",\n    \"average_response_time\": \"number\",\n    \"critical_requests_count\": \"number\"\n  }\n}\n</code></pre> <p>Usage Example:</p> <pre><code>active_requests = await mcp_client.call_tool(\"get_active_requests\", {\n  \"filters\": {\n    \"status\": [\"pending\", \"in_progress\"],\n    \"priority\": [\"critical\", \"high\"]\n  },\n  \"sort_by\": \"priority\",\n  \"sort_order\": \"desc\",\n  \"limit\": 20,\n  \"include_analytics\": True\n})\n</code></pre>"},{"location":"mcp/tools/#4-assign_volunteer_to_task","title":"4. assign_volunteer_to_task","text":"<p>Purpose: Intelligently assign volunteers to tasks based on skills, availability, location, and workload.</p> <p>Input Schema:</p> <pre><code>{\n  \"task_id\": \"string\",\n  \"volunteer_criteria\": {\n    \"required_skills\": [\"array of skill names\"],\n    \"location_radius\": \"number (km, optional)\",\n    \"availability_required\": \"boolean (default: true)\",\n    \"experience_level\": \"beginner|intermediate|advanced|expert\",\n    \"max_current_tasks\": \"number (default: 3)\"\n  },\n  \"assignment_preferences\": {\n    \"prefer_nearby\": \"boolean (default: true)\",\n    \"prefer_experienced\": \"boolean (default: true)\",\n    \"load_balance\": \"boolean (default: true)\"\n  },\n  \"auto_assign\": \"boolean (default: false)\"\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"recommended_volunteers\": [\n    {\n      \"volunteer_id\": \"string\",\n      \"user\": {\n        \"id\": \"string\",\n        \"full_name\": \"string\",\n        \"email\": \"string\",\n        \"skills\": [\"array of skills\"],\n        \"experience_level\": \"string\",\n        \"location\": \"string\"\n      },\n      \"match_score\": \"number (0-100)\",\n      \"distance_km\": \"number\",\n      \"current_task_count\": \"number\",\n      \"availability_status\": \"boolean\",\n      \"match_reasons\": [\"array of matching criteria\"],\n      \"estimated_travel_time\": \"number (minutes)\"\n    }\n  ],\n  \"assignment_result\": {\n    \"assigned\": \"boolean\",\n    \"assigned_to\": \"string (volunteer_id if assigned)\",\n    \"assignment_reason\": \"string\",\n    \"estimated_start_time\": \"ISO datetime\"\n  },\n  \"assignment_analytics\": {\n    \"total_candidates\": \"number\",\n    \"top_match_score\": \"number\",\n    \"average_distance\": \"number\"\n  }\n}\n</code></pre> <p>Usage Example:</p> <pre><code>assignment = await mcp_client.call_tool(\"assign_volunteer_to_task\", {\n  \"task_id\": \"task_123\",\n  \"volunteer_criteria\": {\n    \"required_skills\": [\"first_aid\", \"search_rescue\"],\n    \"location_radius\": 10,\n    \"experience_level\": \"intermediate\"\n  },\n  \"assignment_preferences\": {\n    \"prefer_nearby\": True,\n    \"load_balance\": True\n  },\n  \"auto_assign\": True\n})\n</code></pre>"},{"location":"mcp/tools/#5-get_available_resources","title":"5. get_available_resources","text":"<p>Purpose: Query and analyze available resources for emergency response with real-time inventory tracking.</p> <p>Input Schema:</p> <pre><code>{\n  \"resource_filters\": {\n    \"types\": [\"medical\", \"food\", \"shelter\", \"transportation\", \"equipment\"],\n    \"location\": \"string (optional)\",\n    \"location_radius\": \"number (km, optional)\",\n    \"minimum_quantity\": \"number (optional)\",\n    \"available_only\": \"boolean (default: true)\"\n  },\n  \"include_details\": {\n    \"consumption_history\": \"boolean (default: false)\",\n    \"supplier_info\": \"boolean (default: false)\",\n    \"expiry_tracking\": \"boolean (default: true)\"\n  },\n  \"sort_by\": \"quantity|distance|expiry_date|last_updated\",\n  \"group_by\": \"type|location|supplier\"\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"resources\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"type\": \"string\",\n      \"description\": \"string\",\n      \"quantity\": \"number\",\n      \"unit\": \"string\",\n      \"location\": \"string\",\n      \"status\": \"available|low_stock|out_of_stock|reserved\",\n      \"last_updated\": \"ISO datetime\",\n      \"expiry_date\": \"ISO datetime (optional)\",\n      \"cost_per_unit\": \"number\",\n      \"supplier\": \"string\",\n      \"distance_km\": \"number (if location filter provided)\"\n    }\n  ],\n  \"resource_summary\": {\n    \"total_resources\": \"number\",\n    \"by_type\": \"object\",\n    \"by_status\": \"object\",\n    \"low_stock_alerts\": [\"array of resource IDs\"],\n    \"expiring_soon\": [\"array of resource IDs\"]\n  },\n  \"allocation_suggestions\": [\n    {\n      \"resource_id\": \"string\",\n      \"suggested_allocation\": \"number\",\n      \"reason\": \"string\",\n      \"urgency\": \"high|medium|low\"\n    }\n  ]\n}\n</code></pre> <p>Usage Example:</p> <pre><code>resources = await mcp_client.call_tool(\"get_available_resources\", {\n  \"resource_filters\": {\n    \"types\": [\"medical\", \"food\"],\n    \"location\": \"downtown\",\n    \"location_radius\": 15,\n    \"available_only\": True\n  },\n  \"include_details\": {\n    \"expiry_tracking\": True,\n    \"supplier_info\": True\n  },\n  \"sort_by\": \"quantity\",\n  \"group_by\": \"type\"\n})\n</code></pre>"},{"location":"mcp/tools/#6-prioritize_requests","title":"6. prioritize_requests","text":"<p>Purpose: Re-evaluate and prioritize emergency requests using advanced AI algorithms and current system state.</p> <p>Input Schema:</p> <pre><code>{\n  \"request_ids\": [\n    \"array of request IDs (optional - if empty, processes all active)\"\n  ],\n  \"prioritization_criteria\": {\n    \"urgency_weight\": \"number (0-1, default: 0.4)\",\n    \"severity_weight\": \"number (0-1, default: 0.3)\",\n    \"resource_availability_weight\": \"number (0-1, default: 0.2)\",\n    \"response_capacity_weight\": \"number (0-1, default: 0.1)\"\n  },\n  \"context_factors\": {\n    \"current_time\": \"ISO datetime\",\n    \"weather_conditions\": \"string (optional)\",\n    \"available_responders\": \"number\",\n    \"system_load\": \"number (0-1)\"\n  },\n  \"update_priorities\": \"boolean (default: true)\"\n}\n</code></pre> <p>Output Schema:</p> <pre><code>{\n  \"prioritized_requests\": [\n    {\n      \"request_id\": \"string\",\n      \"original_priority\": \"string\",\n      \"new_priority\": \"string\",\n      \"priority_score\": \"number (0-100)\",\n      \"urgency_score\": \"number\",\n      \"severity_score\": \"number\",\n      \"resource_availability_score\": \"number\",\n      \"response_capacity_score\": \"number\",\n      \"priority_change_reason\": \"string\",\n      \"estimated_wait_time\": \"number (minutes)\",\n      \"recommended_actions\": [\"array of actions\"]\n    }\n  ],\n  \"prioritization_summary\": {\n    \"total_requests_processed\": \"number\",\n    \"priority_changes\": \"number\",\n    \"critical_requests\": \"number\",\n    \"average_priority_score\": \"number\",\n    \"system_recommendations\": [\"array of system-level recommendations\"]\n  },\n  \"resource_allocation_impact\": {\n    \"over_allocated_resources\": [\"array of resource types\"],\n    \"under_allocated_resources\": [\"array of resource types\"],\n    \"optimization_suggestions\": [\"array of suggestions\"]\n  }\n}\n</code></pre> <p>Usage Example:</p> <pre><code>prioritization = await mcp_client.call_tool(\"prioritize_requests\", {\n  \"prioritization_criteria\": {\n    \"urgency_weight\": 0.5,\n    \"severity_weight\": 0.3,\n    \"resource_availability_weight\": 0.2\n  },\n  \"context_factors\": {\n    \"current_time\": \"2024-01-15T14:30:00Z\",\n    \"available_responders\": 25,\n    \"system_load\": 0.7\n  },\n  \"update_priorities\": True\n})\n</code></pre>"},{"location":"mcp/tools/#tool-integration-examples","title":"Tool Integration Examples","text":""},{"location":"mcp/tools/#complete-emergency-response-workflow","title":"Complete Emergency Response Workflow","text":"<pre><code>async def handle_emergency_workflow(request_data):\n    # 1. Process initial request\n    processed_request = await mcp_client.call_tool(\"process_emergency_request\", {\n        \"request_data\": request_data\n    })\n\n    # 2. Get current system status\n    agent_status = await mcp_client.call_tool(\"get_agent_status\", {\n        \"include_metrics\": True\n    })\n\n    # 3. Check available resources\n    resources = await mcp_client.call_tool(\"get_available_resources\", {\n        \"resource_filters\": {\n            \"types\": processed_request[\"recommended_resources\"],\n            \"available_only\": True\n        }\n    })\n\n    # 4. Assign volunteers if tasks are created\n    if processed_request.get(\"tasks_created\"):\n        for task_id in processed_request[\"tasks_created\"]:\n            assignment = await mcp_client.call_tool(\"assign_volunteer_to_task\", {\n                \"task_id\": task_id,\n                \"auto_assign\": True\n            })\n\n    # 5. Re-prioritize all requests\n    prioritization = await mcp_client.call_tool(\"prioritize_requests\", {\n        \"update_priorities\": True\n    })\n\n    return {\n        \"request\": processed_request,\n        \"resources\": resources,\n        \"prioritization\": prioritization\n    }\n</code></pre>"},{"location":"mcp/tools/#real-time-monitoring-dashboard","title":"Real-time Monitoring Dashboard","text":"<pre><code>async def get_dashboard_data():\n    # Get all active requests\n    active_requests = await mcp_client.call_tool(\"get_active_requests\", {\n        \"include_analytics\": True,\n        \"limit\": 100\n    })\n\n    # Get agent status\n    agents = await mcp_client.call_tool(\"get_agent_status\", {\n        \"include_metrics\": True\n    })\n\n    # Get resource status\n    resources = await mcp_client.call_tool(\"get_available_resources\", {\n        \"include_details\": {\n            \"expiry_tracking\": True\n        },\n        \"group_by\": \"type\"\n    })\n\n    return {\n        \"requests\": active_requests,\n        \"agents\": agents,\n        \"resources\": resources,\n        \"timestamp\": datetime.utcnow().isoformat()\n    }\n</code></pre>"},{"location":"mcp/tools/#error-handling","title":"Error Handling","text":""},{"location":"mcp/tools/#common-error-responses","title":"Common Error Responses","text":"<pre><code>{\n  \"error\": true,\n  \"error_code\": \"INVALID_INPUT\",\n  \"message\": \"Invalid request data provided\",\n  \"details\": {\n    \"field\": \"request_data.people_count\",\n    \"issue\": \"Must be a positive integer\"\n  }\n}\n</code></pre>"},{"location":"mcp/tools/#error-codes","title":"Error Codes","text":"<ul> <li><code>INVALID_INPUT</code>: Input validation failed</li> <li><code>RESOURCE_NOT_FOUND</code>: Requested resource doesn't exist</li> <li><code>AGENT_UNAVAILABLE</code>: Required AI agent is not responding</li> <li><code>DATABASE_ERROR</code>: Database operation failed</li> <li><code>RATE_LIMIT_EXCEEDED</code>: Too many requests in time window</li> <li><code>PERMISSION_DENIED</code>: Insufficient permissions for operation</li> </ul>"},{"location":"mcp/tools/#performance-considerations","title":"Performance Considerations","text":""},{"location":"mcp/tools/#caching-strategy","title":"Caching Strategy","text":"<ul> <li>Agent status cached for 30 seconds</li> <li>Resource data cached for 5 minutes</li> <li>Request prioritization cached for 2 minutes</li> <li>Tool responses include cache timestamps</li> </ul>"},{"location":"mcp/tools/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Maximum 100 requests per minute per client</li> <li>Burst limit of 20 requests per 10 seconds</li> <li>Priority tools have higher rate limits</li> </ul>"},{"location":"mcp/tools/#optimization-tips","title":"Optimization Tips","text":"<ul> <li>Use filters to limit data returned</li> <li>Enable caching for frequently accessed data</li> <li>Batch operations when possible</li> <li>Monitor tool performance metrics</li> </ul> <p>This comprehensive tool reference enables effective integration and usage of the MCP server in disaster response scenarios.</p>"},{"location":"user-guides/administrators/","title":"Administrators Guide","text":"<p>This comprehensive guide is designed for government administrators and system managers responsible for overseeing the disaster response coordination system, including user management, system configuration, performance monitoring, and policy enforcement.</p>"},{"location":"user-guides/administrators/#overview","title":"Overview","text":"<p>Administrators have full system access and are responsible for:</p> <ul> <li>User Management: Managing user accounts, roles, and permissions</li> <li>System Configuration: Configuring system settings and policies</li> <li>Performance Monitoring: Monitoring system performance and analytics</li> <li>Policy Enforcement: Implementing and enforcing system policies</li> <li>Emergency Coordination: Coordinating large-scale emergency responses</li> <li>Inter-agency Collaboration: Managing relationships with partner agencies</li> </ul>"},{"location":"user-guides/administrators/#getting-started","title":"Getting Started","text":""},{"location":"user-guides/administrators/#admin-account-setup","title":"Admin Account Setup","text":"<ol> <li>Super Admin Assignment: Receive super administrator credentials</li> <li>Security Configuration: Set up multi-factor authentication</li> <li>Dashboard Configuration: Customize administrative dashboard</li> <li>Notification Setup: Configure administrative alerts and reports</li> </ol>"},{"location":"user-guides/administrators/#initial-system-setup","title":"Initial System Setup","text":"<pre><code>Admin Portal: https://disaster-response.example.com/admin\nUsername: Your administrative credentials\nPassword: Secure password with MFA required\n</code></pre> <p>First-time Setup Checklist:</p> <ul> <li>[ ] Complete security profile setup</li> <li>[ ] Configure system-wide settings</li> <li>[ ] Set up user role templates</li> <li>[ ] Configure notification systems</li> <li>[ ] Establish reporting schedules</li> <li>[ ] Set up audit logging</li> </ul>"},{"location":"user-guides/administrators/#administrative-dashboard","title":"Administrative Dashboard","text":""},{"location":"user-guides/administrators/#system-overview","title":"System Overview","text":""},{"location":"user-guides/administrators/#real-time-system-status","title":"Real-time System Status","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 SYSTEM STATUS - 2024-01-15 12:00:00     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Active Users: 1,247                     \u2502\n\u2502 Active Incidents: 23                    \u2502\n\u2502 Response Teams Deployed: 45             \u2502\n\u2502 System Uptime: 99.7%                   \u2502\n\u2502 Average Response Time: 8.2 minutes      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#performance-metrics","title":"Performance Metrics","text":"<ul> <li>System Performance: Response times, uptime, error rates</li> <li>User Activity: Active users, session duration, feature usage</li> <li>Incident Statistics: Resolution times, success rates, resource utilization</li> <li>Resource Efficiency: Allocation effectiveness, utilization rates</li> </ul>"},{"location":"user-guides/administrators/#geographic-overview","title":"Geographic Overview","text":"<ul> <li>Regional Activity: Activity levels by geographic region</li> <li>Resource Distribution: Resource allocation across regions</li> <li>Response Coverage: Geographic response coverage analysis</li> <li>Hotspot Identification: Areas requiring additional attention</li> </ul>"},{"location":"user-guides/administrators/#user-management","title":"User Management","text":""},{"location":"user-guides/administrators/#user-account-administration","title":"User Account Administration","text":""},{"location":"user-guides/administrators/#create-user-accounts","title":"Create User Accounts","text":"<pre><code>POST /admin/users/create\nContent-Type: application/json\n\n{\n  \"email\": \"new.user@department.gov\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"role\": \"first_responder\",\n  \"department\": \"Fire Department\",\n  \"permissions\": [\"incident_management\", \"resource_allocation\"],\n  \"notifications\": {\n    \"email\": true,\n    \"sms\": true,\n    \"administrative_alerts\": true\n  }\n}\n</code></pre>"},{"location":"user-guides/administrators/#user-role-management","title":"User Role Management","text":"<pre><code>Available Roles:\n\u251c\u2500\u2500 affected_individual (Basic emergency request access)\n\u251c\u2500\u2500 volunteer (Task assignment and completion)\n\u251c\u2500\u2500 first_responder (Professional response capabilities)\n\u251c\u2500\u2500 department_admin (Department-level administration)\n\u251c\u2500\u2500 system_admin (Full system administration)\n\u2514\u2500\u2500 super_admin (Complete system control)\n</code></pre>"},{"location":"user-guides/administrators/#bulk-user-operations","title":"Bulk User Operations","text":"<ul> <li>Import Users: CSV/Excel import for multiple users</li> <li>Role Assignment: Bulk role changes and updates</li> <li>Deactivation: Bulk account deactivation</li> <li>Credential Reset: Mass password reset operations</li> </ul>"},{"location":"user-guides/administrators/#user-monitoring-and-analytics","title":"User Monitoring and Analytics","text":""},{"location":"user-guides/administrators/#user-activity-dashboard","title":"User Activity Dashboard","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 USER ACTIVITY - LAST 30 DAYS              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Total Users: 1,247                         \u2502\n\u2502 Active Users (Daily): 423                  \u2502\n\u2502 New Registrations: 89                      \u2502\n\u2502 Account Deactivations: 12                  \u2502\n\u2502 Average Session Duration: 28 minutes       \u2502\n\u2502 Peak Usage: 14:00-16:00 daily             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#performance-tracking","title":"Performance Tracking","text":"<ul> <li>Response Rates: User response rates to assignments</li> <li>Completion Rates: Task and incident completion statistics</li> <li>Efficiency Metrics: User performance and productivity</li> <li>Training Compliance: Continuing education and certification status</li> </ul>"},{"location":"user-guides/administrators/#system-configuration","title":"System Configuration","text":""},{"location":"user-guides/administrators/#global-settings","title":"Global Settings","text":""},{"location":"user-guides/administrators/#system-parameters","title":"System Parameters","text":"<pre><code>{\n  \"system_settings\": {\n    \"emergency_response\": {\n      \"auto_assignment_enabled\": true,\n      \"max_response_time\": 600,\n      \"priority_thresholds\": {\n        \"critical\": 90,\n        \"high\": 70,\n        \"medium\": 50,\n        \"low\": 30\n      }\n    },\n    \"resource_management\": {\n      \"auto_allocation\": true,\n      \"utilization_threshold\": 0.8,\n      \"rebalancing_interval\": 3600\n    },\n    \"notifications\": {\n      \"emergency_alert_timeout\": 300,\n      \"escalation_interval\": 600,\n      \"max_retry_attempts\": 3\n    }\n  }\n}\n</code></pre>"},{"location":"user-guides/administrators/#geographic-configuration","title":"Geographic Configuration","text":"<ul> <li>Service Areas: Define geographic service boundaries</li> <li>Response Zones: Configure response zone assignments</li> <li>Resource Staging: Set strategic resource positioning</li> <li>Coverage Analysis: Monitor and optimize geographic coverage</li> </ul>"},{"location":"user-guides/administrators/#policy-configuration","title":"Policy Configuration","text":""},{"location":"user-guides/administrators/#response-policies","title":"Response Policies","text":"<pre><code>Emergency Response Policies:\n\u251c\u2500\u2500 Auto-assignment rules\n\u251c\u2500\u2500 Resource allocation priorities\n\u251c\u2500\u2500 Escalation procedures\n\u251c\u2500\u2500 Inter-agency coordination protocols\n\u2514\u2500\u2500 Performance standards\n</code></pre>"},{"location":"user-guides/administrators/#user-policies","title":"User Policies","text":"<ul> <li>Account Security: Password policies, MFA requirements</li> <li>Access Control: Role-based access restrictions</li> <li>Data Privacy: Personal information handling policies</li> <li>Training Requirements: Mandatory training and certification</li> </ul>"},{"location":"user-guides/administrators/#integration-management","title":"Integration Management","text":""},{"location":"user-guides/administrators/#third-party-integrations","title":"Third-party Integrations","text":"<ul> <li>Weather Services: Meteorological data integration</li> <li>Emergency Services: 911/119 system integration</li> <li>Government Systems: Inter-agency system connections</li> <li>Communication Platforms: SMS, email service providers</li> </ul>"},{"location":"user-guides/administrators/#api-management","title":"API Management","text":"<ul> <li>Rate Limiting: Configure API usage limits</li> <li>Authentication: Manage API keys and tokens</li> <li>Monitoring: Track API usage and performance</li> <li>Documentation: Maintain API documentation</li> </ul>"},{"location":"user-guides/administrators/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"user-guides/administrators/#system-analytics","title":"System Analytics","text":""},{"location":"user-guides/administrators/#performance-dashboard","title":"Performance Dashboard","text":"<pre><code>SYSTEM PERFORMANCE - REAL-TIME\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Response Time: 1.2s avg                 \u2502\n\u2502 Throughput: 1,247 req/min              \u2502\n\u2502 Error Rate: 0.03%                      \u2502\n\u2502 Database Performance: Optimal           \u2502\n\u2502 AI Agent Status: 4/4 Active            \u2502\n\u2502 WebSocket Connections: 423 active       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#historical-analytics","title":"Historical Analytics","text":"<ul> <li>Trend Analysis: Performance trends over time</li> <li>Capacity Planning: System growth and scaling needs</li> <li>Bottleneck Identification: Performance bottleneck analysis</li> <li>Optimization Opportunities: System improvement recommendations</li> </ul>"},{"location":"user-guides/administrators/#incident-analytics","title":"Incident Analytics","text":""},{"location":"user-guides/administrators/#response-effectiveness","title":"Response Effectiveness","text":"<pre><code>INCIDENT RESPONSE ANALYTICS - MONTHLY\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Total Incidents: 1,247                  \u2502\n\u2502 Average Response Time: 8.2 minutes      \u2502\n\u2502 Success Rate: 94.7%                    \u2502\n\u2502 Resource Utilization: 76.3%            \u2502\n\u2502 Volunteer Participation: 68.4%          \u2502\n\u2502 Inter-agency Coordination: 89.2%        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#geographic-performance","title":"Geographic Performance","text":"<ul> <li>Regional Statistics: Performance by geographic region</li> <li>Hotspot Analysis: Areas with high incident rates</li> <li>Coverage Gaps: Underserved geographic areas</li> <li>Resource Distribution: Resource allocation effectiveness</li> </ul>"},{"location":"user-guides/administrators/#emergency-management","title":"Emergency Management","text":""},{"location":"user-guides/administrators/#large-scale-incident-coordination","title":"Large-Scale Incident Coordination","text":""},{"location":"user-guides/administrators/#multi-agency-coordination","title":"Multi-Agency Coordination","text":"<ol> <li>Activation Procedures: Emergency operations center activation</li> <li>Resource Mobilization: Large-scale resource deployment</li> <li>Communication Coordination: Multi-agency communication setup</li> <li>Public Information: Coordinated public messaging</li> </ol>"},{"location":"user-guides/administrators/#system-scaling","title":"System Scaling","text":"<ul> <li>Capacity Expansion: Temporary system capacity increases</li> <li>User Surge Management: Handle increased user activity</li> <li>Resource Reallocation: Emergency resource redistribution</li> <li>Communication Prioritization: Critical communication prioritization</li> </ul>"},{"location":"user-guides/administrators/#crisis-management","title":"Crisis Management","text":""},{"location":"user-guides/administrators/#system-emergency-procedures","title":"System Emergency Procedures","text":"<pre><code>CRISIS RESPONSE LEVELS\n\u251c\u2500\u2500 Level 1: Normal Operations\n\u251c\u2500\u2500 Level 2: Elevated Activity\n\u251c\u2500\u2500 Level 3: High Impact Incident\n\u251c\u2500\u2500 Level 4: Major Emergency\n\u2514\u2500\u2500 Level 5: Catastrophic Event\n</code></pre>"},{"location":"user-guides/administrators/#emergency-protocols","title":"Emergency Protocols","text":"<ul> <li>System Backup: Ensure system redundancy and backup</li> <li>Communication Continuity: Maintain communication capabilities</li> <li>Data Protection: Secure critical system data</li> <li>Recovery Procedures: System recovery and restoration</li> </ul>"},{"location":"user-guides/administrators/#reporting-and-analytics","title":"Reporting and Analytics","text":""},{"location":"user-guides/administrators/#administrative-reports","title":"Administrative Reports","text":""},{"location":"user-guides/administrators/#daily-operations-report","title":"Daily Operations Report","text":"<pre><code>DAILY OPERATIONS SUMMARY - 2024-01-15\n=====================================\nSystem Activity:\n- New incidents reported: 45\n- Incidents resolved: 52\n- Active response teams: 23\n- System uptime: 100%\n\nUser Activity:\n- Peak concurrent users: 267\n- New user registrations: 8\n- Training completions: 15\n\nPerformance Metrics:\n- Average response time: 7.8 minutes\n- Resource utilization: 72%\n- Success rate: 96.2%\n</code></pre>"},{"location":"user-guides/administrators/#weekly-performance-report","title":"Weekly Performance Report","text":"<ul> <li>System Performance: Weekly performance summary</li> <li>User Activity: User engagement and activity trends</li> <li>Incident Analysis: Incident patterns and outcomes</li> <li>Resource Efficiency: Resource utilization analysis</li> </ul>"},{"location":"user-guides/administrators/#monthly-strategic-report","title":"Monthly Strategic Report","text":"<ul> <li>Strategic Metrics: High-level performance indicators</li> <li>Trend Analysis: Monthly and quarterly trends</li> <li>Budget Impact: Cost analysis and budget implications</li> <li>Improvement Recommendations: System optimization suggestions</li> </ul>"},{"location":"user-guides/administrators/#custom-reporting","title":"Custom Reporting","text":""},{"location":"user-guides/administrators/#report-builder","title":"Report Builder","text":"<pre><code>Report Configuration:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Report Type: [Custom Analysis]  \u2502\n\u2502 Time Period: [Last 30 Days]     \u2502\n\u2502 Metrics: [Response Time, etc.]  \u2502\n\u2502 Filters: [By Region/Department] \u2502\n\u2502 Format: [PDF/Excel/Dashboard]   \u2502\n\u2502 Schedule: [Weekly/Monthly]      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#automated-reporting","title":"Automated Reporting","text":"<ul> <li>Scheduled Reports: Automated report generation and distribution</li> <li>Alert-Based Reports: Reports triggered by specific events</li> <li>Executive Dashboards: High-level executive summary reports</li> <li>Compliance Reports: Regulatory compliance reporting</li> </ul>"},{"location":"user-guides/administrators/#security-management","title":"Security Management","text":""},{"location":"user-guides/administrators/#system-security","title":"System Security","text":""},{"location":"user-guides/administrators/#access-control-management","title":"Access Control Management","text":"<ul> <li>Role-Based Access: Manage role-based permissions</li> <li>Session Management: Monitor and control user sessions</li> <li>API Security: Secure API access and usage</li> <li>Data Encryption: Manage data encryption policies</li> </ul>"},{"location":"user-guides/administrators/#security-monitoring","title":"Security Monitoring","text":"<pre><code>SECURITY DASHBOARD\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Failed Login Attempts: 23 (last 24h)    \u2502\n\u2502 Suspicious Activity: 2 events          \u2502\n\u2502 Active Sessions: 423                    \u2502\n\u2502 API Violations: 1                       \u2502\n\u2502 Security Alerts: 0 critical             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"user-guides/administrators/#audit-and-compliance","title":"Audit and Compliance","text":""},{"location":"user-guides/administrators/#audit-logging","title":"Audit Logging","text":"<ul> <li>User Actions: Log all significant user actions</li> <li>System Changes: Track system configuration changes</li> <li>Data Access: Monitor data access and modifications</li> <li>Security Events: Log security-related events</li> </ul>"},{"location":"user-guides/administrators/#compliance-management","title":"Compliance Management","text":"<ul> <li>Data Privacy: GDPR/CCPA compliance monitoring</li> <li>Regulatory Requirements: Government regulation compliance</li> <li>Policy Enforcement: Monitor policy compliance</li> <li>Audit Trails: Maintain comprehensive audit trails</li> </ul>"},{"location":"user-guides/administrators/#training-and-support","title":"Training and Support","text":""},{"location":"user-guides/administrators/#administrator-training","title":"Administrator Training","text":""},{"location":"user-guides/administrators/#system-administration-training","title":"System Administration Training","text":"<ol> <li>Basic Administration: User management and system configuration</li> <li>Advanced Features: Performance monitoring and optimization</li> <li>Emergency Procedures: Crisis management and emergency protocols</li> <li>Security Management: Security best practices and compliance</li> </ol>"},{"location":"user-guides/administrators/#ongoing-education","title":"Ongoing Education","text":"<ul> <li>Regular Updates: Training on new features and updates</li> <li>Best Practices: Industry best practices and standards</li> <li>Case Studies: Learn from real-world incidents and outcomes</li> <li>Peer Collaboration: Knowledge sharing with other administrators</li> </ul>"},{"location":"user-guides/administrators/#user-support-management","title":"User Support Management","text":""},{"location":"user-guides/administrators/#support-operations","title":"Support Operations","text":"<ul> <li>Help Desk Management: Oversee user support operations</li> <li>Training Coordination: Coordinate user training programs</li> <li>Documentation Maintenance: Keep documentation current</li> <li>Feedback Management: Collect and act on user feedback</li> </ul>"},{"location":"user-guides/administrators/#knowledge-management","title":"Knowledge Management","text":"<ul> <li>Training Materials: Develop and maintain training resources</li> <li>Best Practices: Document and share best practices</li> <li>Lessons Learned: Capture and share lessons from incidents</li> <li>Community Building: Foster user community and collaboration</li> </ul>"},{"location":"user-guides/administrators/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guides/administrators/#common-administrative-issues","title":"Common Administrative Issues","text":""},{"location":"user-guides/administrators/#system-performance-issues","title":"System Performance Issues","text":"<pre><code>Problem: System slow response times\nInvestigation Steps:\n1. Check system resource utilization\n2. Review database performance metrics\n3. Analyze network connectivity\n4. Check third-party service status\n5. Review recent system changes\n\nResolution Actions:\n1. Scale system resources if needed\n2. Optimize database queries\n3. Clear system caches\n4. Contact technical support team\n</code></pre>"},{"location":"user-guides/administrators/#user-access-issues","title":"User Access Issues","text":"<pre><code>Problem: Users unable to access system\nInvestigation Steps:\n1. Verify user account status\n2. Check authentication systems\n3. Review network connectivity\n4. Validate user permissions\n5. Check for system maintenance\n\nResolution Actions:\n1. Reset user credentials if needed\n2. Update user permissions\n3. Communicate system status\n4. Provide alternative access methods\n</code></pre>"},{"location":"user-guides/administrators/#emergency-procedures","title":"Emergency Procedures","text":""},{"location":"user-guides/administrators/#system-outage-response","title":"System Outage Response","text":"<ol> <li>Immediate Assessment: Determine outage scope and impact</li> <li>Communication: Notify users and stakeholders</li> <li>Recovery Actions: Implement recovery procedures</li> <li>Status Updates: Provide regular status updates</li> <li>Post-Incident Review: Conduct lessons learned analysis</li> </ol>"},{"location":"user-guides/administrators/#data-security-incident","title":"Data Security Incident","text":"<ul> <li>Containment: Isolate affected systems</li> <li>Assessment: Determine scope of security incident</li> <li>Notification: Notify relevant authorities and users</li> <li>Recovery: Implement recovery and remediation</li> <li>Documentation: Document incident and response actions</li> </ul>"},{"location":"user-guides/administrators/#contact-information","title":"Contact Information","text":""},{"location":"user-guides/administrators/#administrative-support","title":"Administrative Support","text":"<ul> <li>System Administration: admin@disaster-response.com</li> <li>Technical Support: tech-support@disaster-response.com</li> <li>Security Team: security@disaster-response.com</li> <li>Training Coordination: training@disaster-response.com</li> </ul>"},{"location":"user-guides/administrators/#emergency-contacts","title":"Emergency Contacts","text":"<ul> <li>System Emergency: +94112345678 (24/7)</li> <li>Security Incidents: +94112345679 (24/7)</li> <li>Executive Escalation: +94112345680</li> </ul>"},{"location":"user-guides/administrators/#vendor-support","title":"Vendor Support","text":"<ul> <li>System Vendor: Primary system support</li> <li>Cloud Provider: Infrastructure support</li> <li>Security Vendor: Security services support</li> <li>Integration Partners: Third-party service support</li> </ul>"},{"location":"user-guides/administrators/#best-practices","title":"Best Practices","text":""},{"location":"user-guides/administrators/#administrative-excellence","title":"Administrative Excellence","text":"<ol> <li>Proactive Monitoring: Monitor system health continuously</li> <li>Regular Maintenance: Perform regular system maintenance</li> <li>User Engagement: Maintain active user engagement</li> <li>Continuous Improvement: Continuously improve system operations</li> </ol>"},{"location":"user-guides/administrators/#leadership-and-coordination","title":"Leadership and Coordination","text":"<ul> <li>Strategic Planning: Develop long-term strategic plans</li> <li>Stakeholder Management: Maintain stakeholder relationships</li> <li>Change Management: Effectively manage system changes</li> <li>Crisis Leadership: Provide leadership during emergencies</li> </ul>"},{"location":"user-guides/administrators/#technology-management","title":"Technology Management","text":"<ul> <li>System Optimization: Continuously optimize system performance</li> <li>Security Awareness: Maintain high security awareness</li> <li>Innovation Adoption: Evaluate and adopt new technologies</li> <li>Data-Driven Decisions: Use data to inform decisions</li> </ul>"},{"location":"user-guides/affected-individuals/","title":"Affected Individuals Guide","text":"<p>Complete guide for people seeking help during disasters and emergencies.</p>"},{"location":"user-guides/affected-individuals/#getting-started","title":"\ud83d\udc4b Getting Started","text":"<p>As an affected individual, you can use this system to:</p> <ul> <li>Request immediate help during emergencies</li> <li>Track your request status in real-time</li> <li>Communicate with responders directly</li> <li>Receive updates on response progress</li> <li>Access community resources and support</li> </ul>"},{"location":"user-guides/affected-individuals/#submitting-emergency-requests","title":"\ud83d\udea8 Submitting Emergency Requests","text":""},{"location":"user-guides/affected-individuals/#quick-request-flow","title":"Quick Request Flow","text":"<pre><code>flowchart TD\n    A[Emergency Situation] --&gt; B[Access App/Website]\n    B --&gt; C[Login or Quick Register]\n    C --&gt; D[Fill Emergency Form]\n    D --&gt; E[Add Location &amp; Details]\n    E --&gt; F[Submit Request]\n    F --&gt; G[AI Processing]\n    G --&gt; H[Assigned to Responder]\n    H --&gt; I[Track Progress]\n    I --&gt; J[Receive Help]</code></pre>"},{"location":"user-guides/affected-individuals/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li> <p>Access the System</p> </li> <li> <p>Website: http://localhost:3000</p> </li> <li>Mobile app (if available)</li> <li> <p>Emergency hotline integration</p> </li> <li> <p>Quick Registration</p> </li> <li> <p>Email and phone number</p> </li> <li>Basic location information</li> <li> <p>Emergency contact details</p> </li> <li> <p>Emergency Request Form</p> </li> </ol> <p></p> <p>Required Information:</p> <ul> <li>Emergency Type: Medical, Fire, Rescue, Shelter, Supplies</li> <li>Description: Clear, detailed explanation</li> <li>Location: Exact address or GPS coordinates</li> <li>Urgency Level: 1 (low) to 10 (critical)</li> <li>People Affected: Number of individuals needing help</li> <li>Contact Information: Phone, preferred contact method</li> </ul> <p>Optional but Helpful:</p> <ul> <li>Photos of the situation</li> <li>Voice recordings</li> <li>Special needs (medical conditions, disabilities)</li> <li>Available resources at location</li> </ul>"},{"location":"user-guides/affected-individuals/#emergency-types-guide","title":"Emergency Types Guide","text":"\ud83c\udfe5 Medical Emergency\ud83d\udd25 Fire Emergency\u26d1\ufe0f Rescue Operation\ud83c\udfe0 Shelter Needed\ud83d\udce6 Supplies Request <p>When to use: Injuries, illness, medical crisis</p> <p>Information to include: - Nature of medical issue - Patient's condition - Symptoms observed - Any medications or allergies - Access to the patient</p> <p>Example: \"Elderly neighbor fell down stairs. Conscious but can't move. Possible broken leg. She's diabetic and takes insulin.\"</p> <p>When to use: Structure fires, wildfires, gas leaks</p> <p>Information to include: - Type and size of fire - People trapped or evacuated - Nearby structures at risk - Fire department contacted?</p> <p>Example: \"Kitchen fire spreading to living room. Family evacuated safely. 2-story house, neighbors' homes 20 feet away.\"</p> <p>When to use: People trapped, missing persons, vehicle accidents</p> <p>Information to include: - Number of people involved - Type of entrapment - Hazards present - Equipment needed</p> <p>Example: \"Car accident on Highway 101. Driver trapped in vehicle. Conscious but injured. Heavy traffic area.\"</p> <p>When to use: Displacement due to disaster, homelessness</p> <p>Information to include: - Number of people needing shelter - Special needs (children, elderly, pets) - Duration of need - Current temporary location</p> <p>Example: \"Family of 4 displaced by flooding. Need temporary shelter for 3-5 days. Have elderly grandmother requiring medication.\"</p> <p>When to use: Food, water, medicine, clothing needs</p> <p>Information to include: - Specific items needed - Quantities required - Urgent vs. non-urgent items - Delivery accessibility</p> <p>Example: \"Isolated by landslide. Need food and water for 6 people for 3 days. Baby formula urgently needed.\"</p>"},{"location":"user-guides/affected-individuals/#dashboard-overview","title":"\ud83d\udcf1 Dashboard Overview","text":""},{"location":"user-guides/affected-individuals/#your-dashboard-features","title":"Your Dashboard Features","text":"<pre><code>graph TB\n    subgraph \"Affected Individual Dashboard\"\n        A[Submit New Request] --&gt; B[My Active Requests]\n        B --&gt; C[Request History]\n        A --&gt; D[Emergency Contacts]\n        B --&gt; E[Messages/Updates]\n        E --&gt; F[Track Responder]\n        C --&gt; G[Community Resources]\n        D --&gt; H[Safety Tips]\n    end\n\n    style A fill:#ff6b6b\n    style B fill:#4ecdc4\n    style E fill:#45b7d1</code></pre>"},{"location":"user-guides/affected-individuals/#active-request-status","title":"Active Request Status","text":"<p>Track your request through these stages:</p> Status Description What to Expect \ud83d\udd0d Submitted Request received AI analysis in progress (2-5 minutes) \u26a1 Processing AI categorizing Priority assignment and matching \ud83d\udccb Prioritized Urgency assessed Looking for available responders \ud83d\udc64 Assigned Responder matched Responder notified, ETA provided \ud83d\ude80 En Route Help coming Responder traveling to location \ud83c\udfaf In Progress Help arrived Assistance being provided \u2705 Completed Help provided Request resolved"},{"location":"user-guides/affected-individuals/#real-time-updates","title":"Real-Time Updates","text":"<p>You'll receive updates via:</p> <ul> <li>In-app notifications</li> <li>SMS messages to your phone</li> <li>Email updates</li> <li>Push notifications (mobile app)</li> </ul> <p>Example update: \"Emergency responder Jane Smith has been assigned to your medical emergency request. ETA: 8 minutes. Contact: +1-555-0123\"</p>"},{"location":"user-guides/affected-individuals/#communication-with-responders","title":"\ud83d\udcac Communication with Responders","text":""},{"location":"user-guides/affected-individuals/#messaging-system","title":"Messaging System","text":"<p>Send Updates:</p> <ul> <li>Changes in situation</li> <li>Additional information</li> <li>Answer responder questions</li> <li>Share photos/videos</li> </ul> <p>Receive Information:</p> <ul> <li>Responder ETA</li> <li>What to prepare</li> <li>Safety instructions</li> <li>Next steps</li> </ul>"},{"location":"user-guides/affected-individuals/#quick-communication-templates","title":"Quick Communication Templates","text":"<p>Use pre-written messages for common updates:</p> <ul> <li>\"Situation has worsened - please hurry\"</li> <li>\"Patient condition stable\"</li> <li>\"We've evacuated to safe location\"</li> <li>\"Additional people need help\"</li> <li>\"Situation resolved - help no longer needed\"</li> </ul>"},{"location":"user-guides/affected-individuals/#emergency-contact-protocol","title":"Emergency Contact Protocol","text":"<ol> <li>Primary Contact: Your phone number (SMS/call)</li> <li>Secondary Contact: Alternative person who can speak for you</li> <li>Emergency Services: System can coordinate with 911 if needed</li> <li>Family Notification: Automated updates to family members</li> </ol>"},{"location":"user-guides/affected-individuals/#location-and-safety","title":"\ud83d\uddfa\ufe0f Location and Safety","text":""},{"location":"user-guides/affected-individuals/#providing-accurate-location","title":"Providing Accurate Location","text":"<p>Best Practices:</p> <ul> <li>Use GPS coordinates when possible</li> <li>Include landmarks and cross streets</li> <li>Specify apartment/unit numbers</li> <li>Note access difficulties (locked gates, construction)</li> <li>Mark safe meeting points</li> </ul> <p>Location Sharing:</p> <ul> <li>Allow real-time location tracking</li> <li>Update if you move to safety</li> <li>Share alternative access routes</li> </ul>"},{"location":"user-guides/affected-individuals/#safety-while-waiting","title":"Safety While Waiting","text":"<p>Do:</p> <ul> <li>Stay in safe location if possible</li> <li>Keep phone charged and accessible</li> <li>Follow responder instructions</li> <li>Prepare identification documents</li> <li>Gather essential medications/items</li> </ul> <p>Don't:</p> <ul> <li>Leave designated location without updating</li> <li>Ignore safety instructions</li> <li>Block access routes</li> <li>Use electrical equipment near gas leaks</li> <li>Enter damaged structures</li> </ul>"},{"location":"user-guides/affected-individuals/#emergency-contacts-and-resources","title":"\ud83d\udcde Emergency Contacts and Resources","text":""},{"location":"user-guides/affected-individuals/#important-contacts","title":"Important Contacts","text":"<p>Keep these numbers readily available:</p> Contact Number When to Use Emergency Services 911 Life-threatening situations Poison Control 1-800-222-1222 Poisoning emergencies Mental Health Crisis 988 Mental health emergencies Red Cross 1-800-733-2767 Disaster assistance System Support [Support Number] App/platform issues"},{"location":"user-guides/affected-individuals/#community-resources","title":"Community Resources","text":"<p>Access information about:</p> <ul> <li>Emergency Shelters: Locations and capacity</li> <li>Food Banks: Distribution sites and times</li> <li>Medical Facilities: Hospitals, clinics, pharmacies</li> <li>Transportation: Emergency transport options</li> <li>Utilities: Outage reports and restoration</li> <li>Government Services: FEMA, local emergency management</li> </ul>"},{"location":"user-guides/affected-individuals/#mental-health-support","title":"Mental Health Support","text":"<p>Disasters can be traumatic. Available support:</p> <ul> <li>Crisis counseling: Immediate emotional support</li> <li>Support groups: Connect with others affected</li> <li>Resource referrals: Long-term mental health services</li> <li>Family services: Help for children and families</li> </ul>"},{"location":"user-guides/affected-individuals/#request-history-and-follow-up","title":"\ud83d\udccb Request History and Follow-up","text":""},{"location":"user-guides/affected-individuals/#tracking-past-requests","title":"Tracking Past Requests","text":"<p>View your complete request history:</p> <ul> <li>Date and time of each request</li> <li>Response times and outcomes</li> <li>Responders involved and their feedback</li> <li>Resources provided and usage</li> <li>Follow-up actions needed</li> </ul>"},{"location":"user-guides/affected-individuals/#providing-feedback","title":"Providing Feedback","text":"<p>Help improve the system by rating:</p> <ul> <li>Response time: How quickly help arrived</li> <li>Communication: Quality of updates and contact</li> <li>Effectiveness: How well your needs were met</li> <li>Professionalism: Responder conduct and competence</li> <li>Overall experience: General satisfaction</li> </ul>"},{"location":"user-guides/affected-individuals/#follow-up-care","title":"Follow-up Care","text":"<p>Some situations require ongoing support:</p> <ul> <li>Medical follow-up: Check on recovery progress</li> <li>Resource needs: Continued assistance requirements</li> <li>Documentation: Insurance claims, official reports</li> <li>Community rebuilding: Long-term recovery efforts</li> </ul>"},{"location":"user-guides/affected-individuals/#privacy-and-data-protection","title":"\ud83d\udee1\ufe0f Privacy and Data Protection","text":""},{"location":"user-guides/affected-individuals/#your-data-rights","title":"Your Data Rights","text":"<ul> <li>Control: You decide what information to share</li> <li>Privacy: Personal data protected and encrypted</li> <li>Access: View all data the system has about you</li> <li>Deletion: Request removal of your information</li> <li>Portability: Export your data if needed</li> </ul>"},{"location":"user-guides/affected-individuals/#what-we-share","title":"What We Share","text":"<p>With Responders:</p> <ul> <li>Contact information</li> <li>Location data</li> <li>Emergency details</li> <li>Medical information (if provided)</li> </ul> <p>With Authorities (only when legally required):</p> <ul> <li>Basic incident information</li> <li>Location for coordination</li> <li>Safety-critical details</li> </ul> <p>Never Shared:</p> <ul> <li>Unrelated personal information</li> <li>Financial details</li> <li>Private communications</li> <li>Historical requests (unless relevant)</li> </ul>"},{"location":"user-guides/affected-individuals/#tips-for-effective-help-requests","title":"\ud83c\udf93 Tips for Effective Help Requests","text":""},{"location":"user-guides/affected-individuals/#writing-clear-descriptions","title":"Writing Clear Descriptions","text":"<p>Good Example:</p> <p>\"Medical emergency: 65-year-old male fell from ladder while cleaning gutters. Unconscious for 2 minutes, now conscious but severe pain in left leg. Possible fracture. Patient is diabetic, takes metformin. Located in backyard, accessible through side gate. Family member with first aid training on scene.\"</p> <p>Poor Example:</p> <p>\"Someone fell, please help\"</p>"},{"location":"user-guides/affected-individuals/#urgency-level-guidelines","title":"Urgency Level Guidelines","text":"<ul> <li>10 (Critical): Life-threatening, immediate danger</li> <li>8-9 (High): Serious injury/situation, urgent response needed</li> <li>6-7 (Medium): Important but not immediately life-threatening</li> <li>4-5 (Low-Medium): Assistance needed but not urgent</li> <li>1-3 (Low): Non-urgent support or information request</li> </ul>"},{"location":"user-guides/affected-individuals/#photovideo-best-practices","title":"Photo/Video Best Practices","text":"<p>Do Include:</p> <ul> <li>Wide shots showing overall situation</li> <li>Close-ups of specific issues</li> <li>Multiple angles when helpful</li> <li>Faces (with permission) for missing persons</li> </ul> <p>Don't Include:</p> <ul> <li>Graphic injuries (unless specifically needed)</li> <li>Unrelated personal items</li> <li>Other people without permission</li> <li>Anything that compromises safety/privacy</li> </ul>"},{"location":"user-guides/affected-individuals/#247-support","title":"\ud83d\udcde 24/7 Support","text":""},{"location":"user-guides/affected-individuals/#getting-help-with-the-system","title":"Getting Help with the System","text":"<p>Technical Support:</p> <ul> <li>App not working properly</li> <li>Can't submit request</li> <li>Login problems</li> <li>Feature questions</li> </ul> <p>Emergency Assistance:</p> <ul> <li>Can't reach through app</li> <li>System-wide outage</li> <li>Alternative contact methods</li> <li>Direct emergency service coordination</li> </ul>"},{"location":"user-guides/affected-individuals/#alternative-access-methods","title":"Alternative Access Methods","text":"<p>If the primary system is unavailable:</p> <ol> <li>Emergency Hotline: Direct phone access</li> <li>SMS Gateway: Text-based request submission</li> <li>Email Backup: Emergency email address</li> <li>Walk-in Centers: Physical assistance locations</li> <li>Radio Network: Amateur radio emergency networks</li> </ol>"},{"location":"user-guides/affected-individuals/#remember-for-life-threatening-emergencies-call-911-first","title":"\ud83c\udd98 Remember: For Life-Threatening Emergencies, Call 911 First","text":"<p>While our system provides excellent coordination and support, immediate life-threatening situations should always start with a 911 call. Our system complements emergency services and helps with ongoing coordination and non-emergency urgent needs.</p> <p>Need more help? Contact our 24/7 support line or check the Troubleshooting Guide</p>"},{"location":"user-guides/first-responders/","title":"First Responders Guide","text":"<p>This guide provides comprehensive instructions for first responders using the disaster response coordination system, including professional emergency response personnel, paramedics, firefighters, and rescue team members.</p>"},{"location":"user-guides/first-responders/#overview","title":"Overview","text":"<p>First responders have access to advanced coordination tools, real-time incident management, resource allocation capabilities, and direct communication with command centers and AI agents.</p>"},{"location":"user-guides/first-responders/#getting-started","title":"Getting Started","text":""},{"location":"user-guides/first-responders/#account-setup","title":"Account Setup","text":"<ol> <li>Registration: Contact your department administrator for account creation</li> <li>Role Assignment: Receive <code>first_responder</code> role with appropriate permissions</li> <li>Credential Verification: Complete professional certification verification</li> <li>Equipment Setup: Configure mobile devices and communication equipment</li> </ol>"},{"location":"user-guides/first-responders/#initial-login","title":"Initial Login","text":"<pre><code>URL: https://disaster-response.example.com/login\nUsername: Your department-issued email\nPassword: Secure password provided by admin\n</code></pre> <p>After first login:</p> <ol> <li>Complete profile setup with specializations and certifications</li> <li>Configure notification preferences</li> <li>Set up mobile app with location services</li> <li>Test communication channels</li> </ol>"},{"location":"user-guides/first-responders/#dashboard-overview","title":"Dashboard Overview","text":""},{"location":"user-guides/first-responders/#main-dashboard-features","title":"Main Dashboard Features","text":""},{"location":"user-guides/first-responders/#real-time-incident-map","title":"Real-time Incident Map","text":"<ul> <li>Active Incidents: Color-coded by severity and type</li> <li>Resource Locations: Real-time positions of all response assets</li> <li>Unit Tracking: Location and status of all response units</li> <li>Geographic Layers: Weather, traffic, hazard zones</li> </ul>"},{"location":"user-guides/first-responders/#command-center","title":"Command Center","text":"<ul> <li>Incident Command: Access to incident command structure</li> <li>Resource Management: Allocate and track resources</li> <li>Communication Hub: Multi-channel communication system</li> <li>Decision Support: AI-powered recommendations</li> </ul>"},{"location":"user-guides/first-responders/#performance-metrics","title":"Performance Metrics","text":"<ul> <li>Response Times: Average and individual response metrics</li> <li>Success Rates: Incident resolution statistics</li> <li>Resource Utilization: Equipment and personnel usage</li> <li>Area Coverage: Geographic response coverage analysis</li> </ul>"},{"location":"user-guides/first-responders/#emergency-response-workflow","title":"Emergency Response Workflow","text":""},{"location":"user-guides/first-responders/#1-incident-alert-reception","title":"1. Incident Alert Reception","text":"<p>When an emergency alert is received:</p> <pre><code>\ud83d\udea8 EMERGENCY ALERT\nType: Structure Fire\nLocation: 123 Main Street, Colombo\nSeverity: Critical\nEstimated Casualties: 2-4 people trapped\nRequired Response: Fire suppression, rescue operations\nETA: 8 minutes\n</code></pre> <p>Immediate Actions:</p> <ol> <li>Acknowledge Alert: Confirm receipt and availability</li> <li>Review Details: Access full incident information</li> <li>Check Resources: Verify available equipment and personnel</li> <li>Coordinate Response: Communicate with dispatch and other units</li> </ol>"},{"location":"user-guides/first-responders/#2-response-deployment","title":"2. Response Deployment","text":""},{"location":"user-guides/first-responders/#pre-deployment-checklist","title":"Pre-Deployment Checklist","text":"<ul> <li>[ ] Verify equipment readiness</li> <li>[ ] Confirm crew assignments</li> <li>[ ] Review route and traffic conditions</li> <li>[ ] Establish communication channels</li> <li>[ ] Check weather and environmental factors</li> </ul>"},{"location":"user-guides/first-responders/#en-route-procedures","title":"En Route Procedures","text":"<ol> <li>Status Updates: Provide regular location and ETA updates</li> <li>Information Gathering: Review additional incident details</li> <li>Resource Coordination: Coordinate with other responding units</li> <li>Scene Assessment: Begin preliminary assessment based on reports</li> </ol>"},{"location":"user-guides/first-responders/#3-on-scene-operations","title":"3. On-Scene Operations","text":""},{"location":"user-guides/first-responders/#arrival-and-setup","title":"Arrival and Setup","text":"<ol> <li>Scene Safety: Establish safety perimeter and assess hazards</li> <li>Incident Command: Establish or integrate with incident command structure</li> <li>Resource Deployment: Position equipment and personnel strategically</li> <li>Communication: Establish on-scene communication network</li> </ol>"},{"location":"user-guides/first-responders/#operational-procedures","title":"Operational Procedures","text":"<ul> <li>Task Assignment: Coordinate with other responders and volunteers</li> <li>Resource Management: Track and allocate resources effectively</li> <li>Progress Reporting: Provide regular status updates</li> <li>Safety Monitoring: Continuous assessment of scene safety</li> </ul>"},{"location":"user-guides/first-responders/#4-incident-management","title":"4. Incident Management","text":""},{"location":"user-guides/first-responders/#command-structure-integration","title":"Command Structure Integration","text":"<pre><code>Incident Commander (IC)\n\u251c\u2500\u2500 Operations Section\n\u2502   \u251c\u2500\u2500 Fire Suppression Division\n\u2502   \u251c\u2500\u2500 Rescue Division\n\u2502   \u2514\u2500\u2500 Medical Division\n\u251c\u2500\u2500 Planning Section\n\u251c\u2500\u2500 Logistics Section\n\u2514\u2500\u2500 Safety Officer\n</code></pre>"},{"location":"user-guides/first-responders/#real-time-coordination","title":"Real-time Coordination","text":"<ul> <li>AI Agent Integration: Receive AI-powered recommendations</li> <li>Resource Optimization: Use system suggestions for resource allocation</li> <li>Volunteer Coordination: Manage volunteer responders</li> <li>Inter-agency Communication: Coordinate with other agencies</li> </ul>"},{"location":"user-guides/first-responders/#advanced-features","title":"Advanced Features","text":""},{"location":"user-guides/first-responders/#ai-powered-decision-support","title":"AI-Powered Decision Support","text":""},{"location":"user-guides/first-responders/#incident-analysis","title":"Incident Analysis","text":"<ul> <li>Automatic Categorization: AI categorizes incident type and severity</li> <li>Resource Recommendations: Suggested resource allocation</li> <li>Risk Assessment: Hazard identification and safety recommendations</li> <li>Outcome Prediction: Expected incident resolution timeline</li> </ul>"},{"location":"user-guides/first-responders/#example-ai-recommendation","title":"Example AI Recommendation:","text":"<pre><code>\ud83e\udd16 AI ANALYSIS\nIncident: Structure Fire\nConfidence: 94%\n\nRecommendations:\n\u2022 Deploy 2 fire trucks (structural suppression)\n\u2022 1 ladder truck (rescue operations)\n\u2022 2 ambulances (potential casualties)\n\u2022 Establish water supply from hydrant #H-456\n\u2022 Consider evacuation of adjacent buildings\n\nRisk Factors:\n\u2022 High wind conditions may spread fire\n\u2022 Older building construction (collapse risk)\n\u2022 Limited water pressure in area\n\nEstimated Resolution: 45-60 minutes\n</code></pre>"},{"location":"user-guides/first-responders/#resource-management-dashboard","title":"Resource Management Dashboard","text":""},{"location":"user-guides/first-responders/#available-resources-view","title":"Available Resources View","text":"<ul> <li>Personnel: On-duty responders and availability</li> <li>Equipment: Vehicle and equipment status</li> <li>Supplies: Inventory levels and locations</li> <li>Support Services: External agency resources</li> </ul>"},{"location":"user-guides/first-responders/#resource-allocation","title":"Resource Allocation","text":"<ol> <li>Request Resources: Submit resource requests through system</li> <li>Track Deployment: Monitor resource deployment status</li> <li>Utilization Monitoring: Track resource usage efficiency</li> <li>Return Coordination: Coordinate resource return and restocking</li> </ol>"},{"location":"user-guides/first-responders/#communication-systems","title":"Communication Systems","text":""},{"location":"user-guides/first-responders/#multi-channel-communication","title":"Multi-Channel Communication","text":"<ul> <li>Radio Integration: Traditional radio system integration</li> <li>Digital Messaging: Secure text and image messaging</li> <li>Video Calling: Emergency video consultation</li> <li>Public Address: Coordinated public communications</li> </ul>"},{"location":"user-guides/first-responders/#communication-protocols","title":"Communication Protocols","text":"<pre><code>Priority Levels:\nEMERGENCY  - Life safety, immediate response required\nURGENT     - Time-sensitive operational needs\nROUTINE    - Standard coordination and updates\nINFO       - Informational updates and reports\n</code></pre>"},{"location":"user-guides/first-responders/#specialized-response-procedures","title":"Specialized Response Procedures","text":""},{"location":"user-guides/first-responders/#medical-emergencies","title":"Medical Emergencies","text":""},{"location":"user-guides/first-responders/#triage-and-treatment","title":"Triage and Treatment","text":"<ol> <li>Initial Assessment: Rapid patient assessment and triage</li> <li>Treatment Prioritization: Allocate medical resources by priority</li> <li>Transport Coordination: Coordinate ambulance and hospital resources</li> <li>Medical Consultation: Connect with emergency physicians</li> </ol>"},{"location":"user-guides/first-responders/#mass-casualty-incidents","title":"Mass Casualty Incidents","text":"<ul> <li>Triage Setup: Establish triage areas and patient flow</li> <li>Resource Scaling: Request additional medical resources</li> <li>Hospital Coordination: Coordinate with receiving hospitals</li> <li>Documentation: Track patient information and dispositions</li> </ul>"},{"location":"user-guides/first-responders/#fire-and-rescue-operations","title":"Fire and Rescue Operations","text":""},{"location":"user-guides/first-responders/#structural-fires","title":"Structural Fires","text":"<ol> <li>Scene Size-up: 360-degree assessment of structure and conditions</li> <li>Water Supply: Establish water supply and distribution</li> <li>Ventilation: Coordinate ventilation operations</li> <li>Search and Rescue: Systematic search and rescue operations</li> </ol>"},{"location":"user-guides/first-responders/#technical-rescue","title":"Technical Rescue","text":"<ul> <li>Confined Space: Specialized confined space rescue procedures</li> <li>High Angle: Rope rescue and high-angle operations</li> <li>Water Rescue: Swift water and surface water rescue</li> <li>Vehicle Extrication: Motor vehicle accident response</li> </ul>"},{"location":"user-guides/first-responders/#natural-disaster-response","title":"Natural Disaster Response","text":""},{"location":"user-guides/first-responders/#flood-response","title":"Flood Response","text":"<ol> <li>Water Level Monitoring: Track flood levels and projections</li> <li>Evacuation Coordination: Coordinate evacuation operations</li> <li>Rescue Operations: Water rescue and evacuation</li> <li>Infrastructure Assessment: Damage assessment and reporting</li> </ol>"},{"location":"user-guides/first-responders/#earthquake-response","title":"Earthquake Response","text":"<ul> <li>Structural Assessment: Rapid damage assessment</li> <li>Search and Rescue: Urban search and rescue operations</li> <li>Utility Coordination: Gas, water, and electrical safety</li> <li>Aftershock Monitoring: Ongoing risk assessment</li> </ul>"},{"location":"user-guides/first-responders/#performance-tracking","title":"Performance Tracking","text":""},{"location":"user-guides/first-responders/#individual-metrics","title":"Individual Metrics","text":"<ul> <li>Response Times: Average response time to incidents</li> <li>Case Completion Rate: Percentage of successfully resolved incidents</li> <li>Safety Record: Safety incidents and near-misses</li> <li>Training Compliance: Continuing education and certification status</li> </ul>"},{"location":"user-guides/first-responders/#team-performance","title":"Team Performance","text":"<ul> <li>Unit Efficiency: Team response and resolution times</li> <li>Resource Utilization: Equipment and personnel efficiency</li> <li>Coordination Effectiveness: Inter-agency coordination success</li> <li>Community Impact: Community service and outreach metrics</li> </ul>"},{"location":"user-guides/first-responders/#training-and-certification","title":"Training and Certification","text":""},{"location":"user-guides/first-responders/#system-training","title":"System Training","text":"<ol> <li>Initial Certification: Complete system training and certification</li> <li>Regular Updates: Participate in system update training</li> <li>Scenario Exercises: Practice with simulated incidents</li> <li>Peer Review: Participate in peer review and feedback</li> </ol>"},{"location":"user-guides/first-responders/#professional-development","title":"Professional Development","text":"<ul> <li>Continuing Education: Maintain professional certifications</li> <li>Specialized Training: Advanced rescue and medical training</li> <li>Leadership Development: Incident command and management training</li> <li>Technology Updates: Stay current with new system features</li> </ul>"},{"location":"user-guides/first-responders/#safety-protocols","title":"Safety Protocols","text":""},{"location":"user-guides/first-responders/#personal-safety","title":"Personal Safety","text":"<ol> <li>PPE Requirements: Always use appropriate personal protective equipment</li> <li>Buddy System: Work with partners for safety</li> <li>Communication: Maintain constant communication with command</li> <li>Exit Strategy: Always have planned exit routes</li> </ol>"},{"location":"user-guides/first-responders/#operational-safety","title":"Operational Safety","text":"<ul> <li>Scene Assessment: Continuous hazard assessment</li> <li>Safety Officer: Designate and empower safety officers</li> <li>Risk vs. Benefit: Evaluate risk vs. benefit for all operations</li> <li>Emergency Procedures: Know emergency evacuation procedures</li> </ul>"},{"location":"user-guides/first-responders/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guides/first-responders/#common-issues","title":"Common Issues","text":""},{"location":"user-guides/first-responders/#system-connectivity-problems","title":"System Connectivity Problems","text":"<pre><code>Problem: Unable to connect to system\nSolutions:\n1. Check internet/cellular connection\n2. Restart mobile app\n3. Switch to backup communication method\n4. Contact IT support: +94112345678\n</code></pre>"},{"location":"user-guides/first-responders/#resource-tracking-issues","title":"Resource Tracking Issues","text":"<pre><code>Problem: Resources not showing correct status\nSolutions:\n1. Refresh resource dashboard\n2. Manually update resource status\n3. Contact dispatch for verification\n4. Use radio backup for coordination\n</code></pre>"},{"location":"user-guides/first-responders/#communication-problems","title":"Communication Problems","text":"<pre><code>Problem: Unable to communicate with other units\nSolutions:\n1. Check radio and digital communication systems\n2. Use alternate communication channels\n3. Relay messages through dispatch\n4. Use emergency communication protocols\n</code></pre>"},{"location":"user-guides/first-responders/#emergency-backup-procedures","title":"Emergency Backup Procedures","text":""},{"location":"user-guides/first-responders/#system-failure-protocol","title":"System Failure Protocol","text":"<ol> <li>Immediate Actions: Switch to radio communication</li> <li>Notify Command: Report system failure to incident command</li> <li>Manual Coordination: Use traditional coordination methods</li> <li>Documentation: Maintain written logs of activities</li> </ol>"},{"location":"user-guides/first-responders/#communication-backup","title":"Communication Backup","text":"<ul> <li>Primary: Integrated digital communication system</li> <li>Secondary: Department radio systems</li> <li>Tertiary: Mobile phone networks</li> <li>Emergency: Satellite communication devices</li> </ul>"},{"location":"user-guides/first-responders/#contact-information","title":"Contact Information","text":""},{"location":"user-guides/first-responders/#technical-support","title":"Technical Support","text":"<ul> <li>System Issues: support@disaster-response.com</li> <li>Phone: +94112345678 (24/7)</li> <li>Emergency IT: +94771234567</li> </ul>"},{"location":"user-guides/first-responders/#administrative-support","title":"Administrative Support","text":"<ul> <li>Account Issues: admin@disaster-response.com</li> <li>Training Questions: training@dispatcher-response.com</li> <li>Policy Questions: policy@disaster-response.com</li> </ul>"},{"location":"user-guides/first-responders/#emergency-contacts","title":"Emergency Contacts","text":"<ul> <li>Dispatch Center: 911 / 119</li> <li>Command Center: +94112345679</li> <li>Inter-agency Coordination: +94112345680</li> </ul>"},{"location":"user-guides/first-responders/#best-practices","title":"Best Practices","text":""},{"location":"user-guides/first-responders/#effective-system-use","title":"Effective System Use","text":"<ol> <li>Stay Current: Keep system knowledge and skills current</li> <li>Regular Practice: Use system features regularly</li> <li>Feedback: Provide feedback for system improvements</li> <li>Training: Participate in all training opportunities</li> </ol>"},{"location":"user-guides/first-responders/#professional-excellence","title":"Professional Excellence","text":"<ul> <li>Continuous Learning: Stay current with best practices</li> <li>Team Collaboration: Work effectively with all responders</li> <li>Community Service: Maintain high standards of community service</li> <li>Leadership: Demonstrate leadership in emergency situations</li> </ul>"},{"location":"user-guides/first-responders/#technology-integration","title":"Technology Integration","text":"<ul> <li>Mobile Readiness: Keep mobile devices charged and updated</li> <li>Backup Plans: Always have backup communication methods</li> <li>Data Security: Follow all data security protocols</li> <li>System Updates: Stay current with system updates and features</li> </ul>"},{"location":"user-guides/volunteers/","title":"Volunteers Guide","text":"<p>Complete guide for community volunteers responding to disaster and emergency situations.</p>"},{"location":"user-guides/volunteers/#welcome-volunteer","title":"\ud83d\udc4b Welcome, Volunteer!","text":"<p>As a volunteer, you're a crucial part of the disaster response network. This guide will help you:</p> <ul> <li>Find and accept tasks that match your skills</li> <li>Respond effectively to emergency situations</li> <li>Track your impact and build expertise</li> <li>Coordinate with others in the response network</li> <li>Stay safe while helping others</li> </ul>"},{"location":"user-guides/volunteers/#volunteer-dashboard-overview","title":"\ud83c\udfaf Volunteer Dashboard Overview","text":""},{"location":"user-guides/volunteers/#your-command-center","title":"Your Command Center","text":"<pre><code>graph TB\n    subgraph \"Volunteer Dashboard\"\n        A[Available Tasks] --&gt; B[My Active Tasks]\n        B --&gt; C[Task History]\n        A --&gt; D[Skill Profile]\n        B --&gt; E[Messages &amp; Updates]\n        E --&gt; F[Resource Requests]\n        C --&gt; G[Performance Metrics]\n        D --&gt; H[Training Resources]\n        F --&gt; I[Emergency Contacts]\n    end\n\n    style A fill:#4CAF50\n    style B fill:#2196F3\n    style E fill:#FF9800\n    style G fill:#9C27B0</code></pre>"},{"location":"user-guides/volunteers/#key-features","title":"Key Features","text":"<p>\ud83c\udfaf Smart Task Matching</p> <ul> <li>AI matches tasks to your skills and location</li> <li>Estimated time and difficulty ratings</li> <li>Real-time availability updates</li> </ul> <p>\ud83d\udccd Location-Based Assignments</p> <ul> <li>Tasks sorted by distance from you</li> <li>Route planning and navigation</li> <li>Traffic and hazard alerts</li> </ul> <p>\ud83c\udfc6 Progress Tracking</p> <ul> <li>Points and achievement system</li> <li>Performance metrics and feedback</li> <li>Skill development recommendations</li> </ul>"},{"location":"user-guides/volunteers/#finding-and-accepting-tasks","title":"\ud83d\udccb Finding and Accepting Tasks","text":""},{"location":"user-guides/volunteers/#task-discovery","title":"Task Discovery","text":"<p>Navigate to Available Tasks to see opportunities:</p> <pre><code>flowchart LR\n    A[View Available Tasks] --&gt; B{Filter by Skills?}\n    B --&gt;|Yes| C[Apply Filters]\n    B --&gt;|No| D[Browse All Tasks]\n    C --&gt; E[Review Task Details]\n    D --&gt; E\n    E --&gt; F{Accept Task?}\n    F --&gt;|Yes| G[Confirm Assignment]\n    F --&gt;|No| H[Continue Browsing]\n    G --&gt; I[Receive Instructions]\n    I --&gt; J[Begin Response]</code></pre>"},{"location":"user-guides/volunteers/#task-categories","title":"Task Categories","text":"\ud83c\udfe5 Medical Support\u26d1\ufe0f Rescue Operations\ud83d\ude9a Supply Distribution\ud83c\udfe0 Shelter Support\ud83d\udcde Communication <p>Skills Needed: First aid, CPR, medical training</p> <p>Typical Tasks: - Basic first aid assistance - Patient transport support - Medical supply delivery - Wellness checks</p> <p>What to Expect: - Clear medical protocols - Guidance from medical professionals - Safety equipment provided - Backup support available</p> <p>Skills Needed: Physical fitness, safety training, equipment operation</p> <p>Typical Tasks: - Search and rescue support - Evacuation assistance - Debris clearing - Emergency access creation</p> <p>What to Expect: - Team-based operations - Safety briefings required - Specialized equipment - Professional supervision</p> <p>Skills Needed: Organization, logistics, customer service</p> <p>Typical Tasks: - Food and water distribution - Emergency supply delivery - Inventory management - Community outreach</p> <p>What to Expect: - Regular schedules - Community interaction - Physical activity - Team coordination</p> <p>Skills Needed: Interpersonal skills, crisis support, organization</p> <p>Typical Tasks: - Shelter setup and management - Registration and check-in - Family services support - Comfort and care provision</p> <p>What to Expect: - Emotional situations - Long-term assignments - Training provided - Mental health support</p> <p>Skills Needed: Communication, technology, languages</p> <p>Typical Tasks: - Emergency hotline support - Translation services - Information coordination - Family notification</p> <p>What to Expect: - Remote work possible - Shift-based scheduling - Training materials - Stress management support</p>"},{"location":"user-guides/volunteers/#task-acceptance-process","title":"Task Acceptance Process","text":"<ol> <li>Review Task Details</li> </ol> <pre><code>Title: Medical Emergency Response\nLocation: 123 Main St (2.3 km away)\nSkills Required: First Aid, Patient Care\nEstimated Duration: 45 minutes\nPriority: High\nEquipment Provided: Yes\nBackup Support: Available\n</code></pre> <ol> <li> <p>Check Your Availability</p> </li> <li> <p>Confirm you have the required time</p> </li> <li>Verify transportation to location</li> <li>Ensure no schedule conflicts</li> <li> <p>Check equipment/resource needs</p> </li> <li> <p>Accept Assignment</p> </li> <li> <p>Click \"Accept Task\"</p> </li> <li>Confirm skills and availability</li> <li>Provide estimated arrival time</li> <li> <p>Review safety protocols</p> </li> <li> <p>Receive Instructions</p> </li> <li>Contact information</li> <li>Detailed location and access</li> <li>Safety considerations</li> <li>Reporting requirements</li> </ol>"},{"location":"user-guides/volunteers/#task-execution","title":"\ud83c\udfaf Task Execution","text":""},{"location":"user-guides/volunteers/#pre-response-preparation","title":"Pre-Response Preparation","text":"<p>Safety First Checklist:</p> <ul> <li>[ ] Review task-specific safety protocols</li> <li>[ ] Verify emergency contact information</li> <li>[ ] Check equipment and supplies</li> <li>[ ] Confirm backup support availability</li> <li>[ ] Share location with emergency contact</li> <li>[ ] Review evacuation routes</li> </ul> <p>Equipment Check:</p> <ul> <li>[ ] Personal protective equipment (PPE)</li> <li>[ ] Communication devices (charged)</li> <li>[ ] Task-specific tools</li> <li>[ ] First aid supplies</li> <li>[ ] Emergency contact list</li> <li>[ ] Identification and volunteer credentials</li> </ul>"},{"location":"user-guides/volunteers/#en-route-protocol","title":"En Route Protocol","text":"<ol> <li>Update Status: Mark \"En Route\" in the app</li> <li>Estimated Arrival: Provide updated ETA</li> <li>Communication: Stay in contact with dispatch</li> <li>Navigation: Use provided routes and updates</li> <li>Safety Awareness: Monitor for hazards and changes</li> </ol>"},{"location":"user-guides/volunteers/#on-scene-response","title":"On-Scene Response","text":""},{"location":"user-guides/volunteers/#initial-assessment","title":"Initial Assessment","text":"<pre><code>flowchart TD\n    A[Arrive on Scene] --&gt; B[Scene Safety Assessment]\n    B --&gt; C{Safe to Proceed?}\n    C --&gt;|No| D[Request Additional Support]\n    C --&gt;|Yes| E[Contact Affected Parties]\n    D --&gt; F[Wait for Clearance]\n    F --&gt; E\n    E --&gt; G[Begin Task Execution]\n    G --&gt; H[Regular Status Updates]\n    H --&gt; I[Document Progress]\n    I --&gt; J[Task Completion]</code></pre>"},{"location":"user-guides/volunteers/#safety-protocols","title":"Safety Protocols","text":"<p>Always:</p> <ul> <li>Assess scene safety before entering</li> <li>Use appropriate PPE</li> <li>Follow established protocols</li> <li>Communicate regularly with dispatch</li> <li>Document actions and decisions</li> <li>Respect privacy and dignity</li> </ul> <p>Never:</p> <ul> <li>Enter unsafe areas without clearance</li> <li>Exceed your training or skill level</li> <li>Work alone in dangerous situations</li> <li>Share personal information inappropriately</li> <li>Take unnecessary risks</li> <li>Ignore safety guidelines</li> </ul>"},{"location":"user-guides/volunteers/#progress-reporting","title":"Progress Reporting","text":"<p>Regular Updates (every 15-30 minutes):</p> <pre><code>{\n  \"status\": \"in_progress\",\n  \"location\": \"On scene\",\n  \"progress\": \"60%\",\n  \"notes\": \"Patient stabilized, awaiting transport\",\n  \"safety_status\": \"all_clear\",\n  \"estimated_completion\": \"15 minutes\"\n}\n</code></pre> <p>Photo Documentation:</p> <ul> <li>Situation overview (respecting privacy)</li> <li>Work progress</li> <li>Resource usage</li> <li>Safety concerns</li> <li>Before/after conditions</li> </ul>"},{"location":"user-guides/volunteers/#communication-and-coordination","title":"\ud83d\udcac Communication and Coordination","text":""},{"location":"user-guides/volunteers/#communication-channels","title":"Communication Channels","text":"<p>Primary: Mobile app messaging</p> <ul> <li>Real-time updates</li> <li>Photo and location sharing</li> <li>Direct contact with affected individuals</li> <li>Coordination with other responders</li> </ul> <p>Secondary: Phone/SMS</p> <ul> <li>Emergency situations</li> <li>App connectivity issues</li> <li>Urgent coordination needs</li> <li>Family/emergency contacts</li> </ul> <p>Emergency: Radio networks</p> <ul> <li>Major disasters</li> <li>Infrastructure failures</li> <li>Backup communication</li> <li>Wide-area coordination</li> </ul>"},{"location":"user-guides/volunteers/#working-with-other-responders","title":"Working with Other Responders","text":"<p>First Responders (Professional):</p> <ul> <li>Follow their lead and instructions</li> <li>Provide support as directed</li> <li>Share relevant information</li> <li>Respect professional protocols</li> </ul> <p>Other Volunteers:</p> <ul> <li>Coordinate activities</li> <li>Share resources and information</li> <li>Provide mutual support</li> <li>Maintain team safety</li> </ul> <p>Affected Individuals:</p> <ul> <li>Listen actively and empathetically</li> <li>Respect privacy and choices</li> <li>Provide clear information</li> <li>Maintain professional boundaries</li> </ul>"},{"location":"user-guides/volunteers/#escalation-procedures","title":"Escalation Procedures","text":"<p>When to Escalate:</p> <ul> <li>Safety concerns or hazards</li> <li>Medical emergencies beyond your training</li> <li>Need for additional resources</li> <li>Equipment failures</li> <li>Uncooperative or hostile individuals</li> <li>Legal or ethical concerns</li> </ul> <p>How to Escalate:</p> <ol> <li>Immediate: Use emergency button in app</li> <li>Urgent: Call dispatch or supervisor</li> <li>Standard: Send escalation request through app</li> <li>Documentation: Record reason and response</li> </ol>"},{"location":"user-guides/volunteers/#performance-and-recognition","title":"\ud83d\udcca Performance and Recognition","text":""},{"location":"user-guides/volunteers/#point-system","title":"Point System","text":"<p>Earn points for:</p> Activity Base Points Multipliers Complete task 20-100 Priority level High-quality work +25% Performance rating Quick response +15% Under 15 minutes Training completion 50 Certification level Feedback rating 5\u2b50 +10% Consistent quality Emergency response 2x Critical situations"},{"location":"user-guides/volunteers/#achievement-badges","title":"Achievement Badges","text":"<pre><code>graph LR\n    A[Rapid Responder] --&gt; B[Medical Expert]\n    B --&gt; C[Team Leader]\n    C --&gt; D[Community Hero]\n\n    A2[First Response] --&gt; B2[Rescue Specialist]\n    B2 --&gt; C2[Logistics Coordinator]\n    C2 --&gt; D2[Master Volunteer]\n\n    style A fill:#FFE082\n    style B fill:#81C784\n    style C fill:#64B5F6\n    style D fill:#F06292</code></pre> <p>Badge Categories:</p> <ul> <li>Response Speed: Fast task acceptance and arrival</li> <li>Skill Specialization: Expertise in specific areas</li> <li>Quality Service: Consistent high ratings</li> <li>Leadership: Training and mentoring others</li> <li>Dedication: Long-term service commitment</li> <li>Innovation: Creative problem-solving</li> </ul>"},{"location":"user-guides/volunteers/#performance-metrics","title":"Performance Metrics","text":"<p>Track your impact:</p> <p>Response Metrics:</p> <ul> <li>Average response time</li> <li>Task completion rate</li> <li>Quality ratings</li> <li>Safety record</li> </ul> <p>Community Impact:</p> <ul> <li>People helped</li> <li>Tasks completed</li> <li>Hours volunteered</li> <li>Resources delivered</li> </ul> <p>Skill Development:</p> <ul> <li>Training certifications</li> <li>Specialization areas</li> <li>Mentoring activities</li> <li>Leadership roles</li> </ul>"},{"location":"user-guides/volunteers/#training-and-development","title":"\ud83c\udf93 Training and Development","text":""},{"location":"user-guides/volunteers/#required-training","title":"Required Training","text":"<p>Basic Volunteer Training (4 hours):</p> <ul> <li>Disaster response basics</li> <li>Safety protocols</li> <li>Communication systems</li> <li>Legal and ethical considerations</li> </ul> <p>Role-Specific Training:</p> <ul> <li>Medical: First Aid/CPR certification</li> <li>Rescue: Safety and equipment training</li> <li>Shelter: Crisis counseling basics</li> <li>Communication: Technology and protocols</li> </ul>"},{"location":"user-guides/volunteers/#ongoing-education","title":"Ongoing Education","text":"<p>Monthly Training Sessions:</p> <ul> <li>Skill refreshers</li> <li>New procedures</li> <li>Case study reviews</li> <li>Equipment updates</li> </ul> <p>Online Learning Modules:</p> <ul> <li>Self-paced courses</li> <li>Certification programs</li> <li>Video training library</li> <li>Interactive simulations</li> </ul> <p>Mentorship Program:</p> <ul> <li>Pair with experienced volunteers</li> <li>Shadow on complex tasks</li> <li>Skill development guidance</li> <li>Career pathway support</li> </ul>"},{"location":"user-guides/volunteers/#specialization-tracks","title":"Specialization Tracks","text":"<p>Medical Response Track:</p> <ul> <li>Advanced first aid</li> <li>Trauma care</li> <li>Medical equipment operation</li> <li>Patient transport protocols</li> </ul> <p>Technical Rescue Track:</p> <ul> <li>Rope rescue techniques</li> <li>Confined space operations</li> <li>Vehicle extrication</li> <li>Search patterns</li> </ul> <p>Logistics and Management Track:</p> <ul> <li>Supply chain management</li> <li>Volunteer coordination</li> <li>Resource allocation</li> <li>Emergency planning</li> </ul>"},{"location":"user-guides/volunteers/#safety-and-self-care","title":"\ud83d\udee1\ufe0f Safety and Self-Care","text":""},{"location":"user-guides/volunteers/#personal-safety","title":"Personal Safety","text":"<p>Before Every Response:</p> <ul> <li>Get adequate rest</li> <li>Eat properly and stay hydrated</li> <li>Check weather and conditions</li> <li>Inform family/friends of your activities</li> <li>Ensure reliable transportation</li> <li>Carry emergency supplies</li> </ul> <p>Physical Safety:</p> <ul> <li>Use proper lifting techniques</li> <li>Wear appropriate clothing and PPE</li> <li>Be aware of environmental hazards</li> <li>Work within your physical limits</li> <li>Take regular breaks</li> <li>Stay properly hydrated</li> </ul> <p>Emotional Safety:</p> <ul> <li>Recognize stress and trauma symptoms</li> <li>Use available counseling resources</li> <li>Debrief after difficult situations</li> <li>Maintain work-life balance</li> <li>Connect with support networks</li> <li>Take time off when needed</li> </ul>"},{"location":"user-guides/volunteers/#mental-health-support","title":"Mental Health Support","text":"<p>Available Resources:</p> <ul> <li>Crisis counseling: 24/7 support line</li> <li>Peer support groups: Connect with other volunteers</li> <li>Professional counseling: Referrals and services</li> <li>Stress management: Workshops and resources</li> <li>Family support: Services for volunteer families</li> </ul> <p>Warning Signs to Watch For:</p> <ul> <li>Persistent sleep problems</li> <li>Increased irritability or anger</li> <li>Withdrawal from activities</li> <li>Physical symptoms (headaches, fatigue)</li> <li>Difficulty concentrating</li> <li>Increased substance use</li> </ul>"},{"location":"user-guides/volunteers/#work-life-balance","title":"Work-Life Balance","text":"<p>Setting Boundaries:</p> <ul> <li>Define your availability windows</li> <li>Set limits on response frequency</li> <li>Take regular breaks from volunteering</li> <li>Maintain personal relationships</li> <li>Pursue non-emergency activities</li> <li>Practice self-care routines</li> </ul> <p>Family Considerations:</p> <ul> <li>Communicate with family about your volunteering</li> <li>Include family in volunteer appreciation events</li> <li>Use family-friendly volunteer opportunities</li> <li>Balance volunteer time with family time</li> <li>Address family concerns about safety</li> </ul>"},{"location":"user-guides/volunteers/#resources-and-support","title":"\ud83d\udcde Resources and Support","text":""},{"location":"user-guides/volunteers/#emergency-contacts","title":"Emergency Contacts","text":"Contact Number Purpose Volunteer Dispatch [Number] Task coordination, emergencies Volunteer Supervisor [Number] Questions, concerns, issues Mental Health Hotline 988 Crisis counseling, stress support Emergency Services 911 Life-threatening situations Red Cross Chapter [Number] Resources, additional support"},{"location":"user-guides/volunteers/#online-resources","title":"Online Resources","text":"<p>Volunteer Portal:</p> <ul> <li>Training materials</li> <li>Policy documents</li> <li>Resource libraries</li> <li>Community forums</li> </ul> <p>Mobile App Features:</p> <ul> <li>Task management</li> <li>GPS navigation</li> <li>Emergency contacts</li> <li>Offline resources</li> </ul>"},{"location":"user-guides/volunteers/#community-support","title":"Community Support","text":"<p>Volunteer Groups:</p> <ul> <li>Local volunteer chapters</li> <li>Skill-based teams</li> <li>Social activities</li> <li>Recognition events</li> </ul> <p>Professional Networks:</p> <ul> <li>Cross-training opportunities</li> <li>Career development</li> <li>Professional references</li> <li>Skill certifications</li> </ul>"},{"location":"user-guides/volunteers/#tips-for-success","title":"\ud83d\udca1 Tips for Success","text":""},{"location":"user-guides/volunteers/#effective-volunteering","title":"Effective Volunteering","text":"<p>Best Practices:</p> <ul> <li>Arrive prepared and on time</li> <li>Communicate clearly and often</li> <li>Follow protocols and procedures</li> <li>Ask questions when uncertain</li> <li>Document your work thoroughly</li> <li>Seek feedback and continuous improvement</li> </ul> <p>Common Mistakes to Avoid:</p> <ul> <li>Overcommitting to tasks</li> <li>Working beyond skill level</li> <li>Ignoring safety protocols</li> <li>Poor communication with affected individuals</li> <li>Inadequate documentation</li> <li>Neglecting self-care</li> </ul>"},{"location":"user-guides/volunteers/#building-your-volunteer-career","title":"Building Your Volunteer Career","text":"<p>Short-term Goals:</p> <ul> <li>Complete basic training</li> <li>Establish regular volunteering schedule</li> <li>Build core competencies</li> <li>Develop local network</li> </ul> <p>Long-term Goals:</p> <ul> <li>Pursue specialized training</li> <li>Take on leadership roles</li> <li>Mentor new volunteers</li> <li>Contribute to policy development</li> </ul>"},{"location":"user-guides/volunteers/#remember-every-response-makes-a-difference","title":"\ud83c\udf1f Remember: Every Response Makes a Difference","text":"<p>Your willingness to serve makes you a hero in your community. Every task completed, every person helped, and every skill developed contributes to building a more resilient and caring society.</p> <p>Questions? Contact volunteer support or check the FAQ section</p>"}]}